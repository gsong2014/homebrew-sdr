From 28d1ad5698c78010bdba89fc54c522e5b3976455 Mon Sep 17 00:00:00 2001
From: Sebastian Koslowski <sebastian.koslowski@gmail.com>
Date: Sat, 16 May 2020 22:01:02 +0200
Subject: [PATCH] grc: fix dark theme detection

...for systems with no theme set.
---
 grc/gui/ParamWidgets.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/grc/gui/ParamWidgets.py b/grc/gui/ParamWidgets.py
index 1b44f3bbd..e6f29fb37 100644
--- a/grc/gui/ParamWidgets.py
+++ b/grc/gui/ParamWidgets.py
@@ -35,7 +35,7 @@ def have_dark_theme():
         """
         Check if a theme is dark based on its name.
         """
-        return theme_name in Constants.GTK_DARK_THEMES or "dark" in theme_name.lower()
+        return theme_name and (theme_name in Constants.GTK_DARK_THEMES or "dark" in theme_name.lower())
     # GoGoGo
     config = configparser.ConfigParser()
     config.read(os.path.expanduser(Constants.GTK_SETTINGS_INI_PATH))
-- 
2.27.0

From b0619899b4469ca815a5b06d6dcf7c5e6f469054 Mon Sep 17 00:00:00 2001
From: Michael Dickens <michael.dickens@ettus.com>
Date: Mon, 24 Aug 2020 09:37:33 -0400
Subject: [PATCH] grc: try-except around "gsettings" for when those settings do
 not exist

---
 grc/gui/ParamWidgets.py | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/grc/gui/ParamWidgets.py b/grc/gui/ParamWidgets.py
index e6f29fb37..12e9803bf 100644
--- a/grc/gui/ParamWidgets.py
+++ b/grc/gui/ParamWidgets.py
@@ -45,9 +45,12 @@ def have_dark_theme():
         theme_name = config.get(
             'Settings', Constants.GTK_INI_THEME_NAME_KEY, fallback=None)
         return is_dark_theme(theme_name)
-    theme = subprocess.check_output(
-        ["gsettings", "get", "org.gnome.desktop.interface", "gtk-theme"]
-    ).decode('utf-8').strip().replace("'", "")
+    try:
+        theme = subprocess.check_output(
+            ["gsettings", "get", "org.gnome.desktop.interface", "gtk-theme"]
+        ).decode('utf-8').strip().replace("'", "")
+    except:
+        return False
     return is_dark_theme(theme)
 
 def add_style_provider():
-- 
2.27.0

From 019aa7303b0986dfdea48b99a0371af85405fcf3 Mon Sep 17 00:00:00 2001
From: mormj <mormjb@gmail.com>
Date: Fri, 11 Sep 2020 15:15:36 -0400
Subject: [PATCH] blocks: selector: update to only forecast active input

---
 gr-blocks/lib/selector_impl.cc | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/gr-blocks/lib/selector_impl.cc b/gr-blocks/lib/selector_impl.cc
index dafb5f909..271f07286 100644
--- a/gr-blocks/lib/selector_impl.cc
+++ b/gr-blocks/lib/selector_impl.cc
@@ -94,8 +94,9 @@ void selector_impl::forecast(int noutput_items, gr_vector_int& ninput_items_requ
 {
     unsigned ninputs = ninput_items_required.size();
     for (unsigned i = 0; i < ninputs; i++) {
-        ninput_items_required[i] = noutput_items;
+        ninput_items_required[i] = 0;
     }
+    ninput_items_required[d_input_index] = noutput_items;
 }
 
 bool selector_impl::check_topology(int ninputs, int noutputs)
-- 
2.27.0

From acac5f34fed6c18d3b43b861f296fc091e45a235 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 21 Sep 2020 15:18:31 -0700
Subject: [PATCH] gr-dtv: Split dtv_swig.i file for less compiler memory usage.

---
 gr-dtv/swig/CMakeLists.txt |  55 ++++++++--
 gr-dtv/swig/dtv_swig.i     | 199 -------------------------------------
 gr-dtv/swig/dtv_swig.py.in |  14 +++
 gr-dtv/swig/dtv_swig0.i    |  83 ++++++++++++++++
 gr-dtv/swig/dtv_swig1.i    |  75 ++++++++++++++
 gr-dtv/swig/dtv_swig2.i    |  73 ++++++++++++++
 6 files changed, 289 insertions(+), 210 deletions(-)
 delete mode 100644 gr-dtv/swig/dtv_swig.i
 create mode 100644 gr-dtv/swig/dtv_swig.py.in
 create mode 100644 gr-dtv/swig/dtv_swig0.i
 create mode 100644 gr-dtv/swig/dtv_swig1.i
 create mode 100644 gr-dtv/swig/dtv_swig2.i

diff --git a/gr-dtv/swig/CMakeLists.txt b/gr-dtv/swig/CMakeLists.txt
index b1f02999f..e9d7d4ced 100644
--- a/gr-dtv/swig/CMakeLists.txt
+++ b/gr-dtv/swig/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2014,2019 Free Software Foundation, Inc.
+# Copyright 2014,2019,2020 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -26,21 +26,54 @@ include(GrSwig)
 set(GR_SWIG_INCLUDE_DIRS $<TARGET_PROPERTY:runtime_swig,INCLUDE_DIRECTORIES>)
 set(GR_SWIG_TARGET_DEPS runtime_swig)
 
-set(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/dtv_swig_doc.i)
-set(GR_SWIG_DOC_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/../include/gnuradio/dtv)
-set(GR_SWIG_DOCS_TARGET_DEPS runtime_swig_swig_doc)
-set(GR_SWIG_LIBRARIES gnuradio-dtv)
+set(GR_SWIG_LIBRARIES gnuradio-dtv gnuradio-fft)
 
-GR_SWIG_MAKE(dtv_swig dtv_swig.i)
+configure_file(
+  ${CMAKE_CURRENT_SOURCE_DIR}/dtv_swig.py.in
+  ${CMAKE_CURRENT_BINARY_DIR}/dtv_swig.py
+@ONLY)
 
-GR_SWIG_INSTALL(
-    TARGETS dtv_swig
-    DESTINATION ${GR_PYTHON_DIR}/gnuradio/dtv
+# We split up the swig files into multiple sections to minimize the
+# memory overhead. If a .i file grows too large, create a new file
+# named 'dtv_swigN.i' and add it to this list.
+#
+# Also add the line "from swig_dtvN import *" line to
+# dtv_swig.py.in.
+set(GR_SWIG_DTV_IFILES
+  dtv_swig0
+  dtv_swig1
+  dtv_swig2
 )
 
+foreach(swigfile ${GR_SWIG_DTV_IFILES})
+  set(GR_SWIG_DOC_FILE ${CMAKE_CURRENT_BINARY_DIR}/${swigfile}_doc.i)
+  set(GR_SWIG_DOC_DIRS
+    ${CMAKE_CURRENT_SOURCE_DIR}/../include/gnuradio/dtv
+    ${CMAKE_CURRENT_BINARY_DIR}/../include/gnuradio/dtv
+  )
+  set(GR_SWIG_DOCS_TARGET_DEPS runtime_swig_swig_doc)
+  set(GR_SWIG_LIBRARIES gnuradio-dtv gnuradio-fft)
+  GR_SWIG_MAKE(${swigfile} ${swigfile}.i)
+
+  GR_SWIG_INSTALL(
+    TARGETS ${swigfile}
+    DESTINATION ${GR_PYTHON_DIR}/gnuradio/dtv
+  )
+
+  list(APPEND SWIGFILES ${swigfile}.i)
+  list(APPEND SWIGDOCFILES ${CMAKE_CURRENT_BINARY_DIR}/${swigfile}_doc.i)
+endforeach(swigfile)
+
 install(
     FILES
-    dtv_swig.i
-    ${CMAKE_CURRENT_BINARY_DIR}/dtv_swig_doc.i
+    ${SWIGFILES}
+    ${SWIGDOCFILES}
     DESTINATION ${GR_INCLUDE_DIR}/gnuradio/swig
 )
+
+# Install the Python file that pulls in the swig built files.
+GR_PYTHON_INSTALL(
+    FILES ${CMAKE_CURRENT_BINARY_DIR}/dtv_swig.py
+    DESTINATION ${GR_PYTHON_DIR}/gnuradio/dtv
+    COMPONENT "dtv_python"
+)
diff --git a/gr-dtv/swig/dtv_swig.i b/gr-dtv/swig/dtv_swig.i
deleted file mode 100644
index 5e11d7fba..000000000
--- a/gr-dtv/swig/dtv_swig.i
+++ /dev/null
@@ -1,199 +0,0 @@
-/* -*- c++ -*- */
-/*
- * Copyright 2014,2015,2016 Free Software Foundation, Inc.
- *
- * This file is part of GNU Radio
- *
- * GNU Radio is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3, or (at your option)
- * any later version.
- *
- * GNU Radio is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with GNU Radio; see the file COPYING.  If not, write to
- * the Free Software Foundation, Inc., 51 Franklin Street,
- * Boston, MA 02110-1301, USA.
- */
-
-#define DTV_API
-
-%include "gnuradio.i"
-
-//load generated python docstrings
-%include "dtv_swig_doc.i"
-
-%{
-#include "gnuradio/dtv/atsc_deinterleaver.h"
-#include "gnuradio/dtv/atsc_depad.h"
-#include "gnuradio/dtv/atsc_derandomizer.h"
-#include "gnuradio/dtv/atsc_equalizer.h"
-#include "gnuradio/dtv/atsc_field_sync_mux.h"
-#include "gnuradio/dtv/atsc_fpll.h"
-#include "gnuradio/dtv/atsc_fs_checker.h"
-#include "gnuradio/dtv/atsc_interleaver.h"
-#include "gnuradio/dtv/atsc_pad.h"
-#include "gnuradio/dtv/atsc_randomizer.h"
-#include "gnuradio/dtv/atsc_rs_decoder.h"
-#include "gnuradio/dtv/atsc_rs_encoder.h"
-#include "gnuradio/dtv/atsc_sync.h"
-#include "gnuradio/dtv/atsc_trellis_encoder.h"
-#include "gnuradio/dtv/atsc_viterbi_decoder.h"
-#include "gnuradio/dtv/dvb_config.h"
-#include "gnuradio/dtv/dvbt_config.h"
-#include "gnuradio/dtv/dvbt2_config.h"
-#include "gnuradio/dtv/dvbs2_config.h"
-#include "gnuradio/dtv/catv_config.h"
-#include "gnuradio/dtv/dvb_bbheader_bb.h"
-#include "gnuradio/dtv/dvb_bbscrambler_bb.h"
-#include "gnuradio/dtv/dvb_bch_bb.h"
-#include "gnuradio/dtv/dvb_ldpc_bb.h"
-#include "gnuradio/dtv/dvbt2_interleaver_bb.h"
-#include "gnuradio/dtv/dvbt2_modulator_bc.h"
-#include "gnuradio/dtv/dvbt2_cellinterleaver_cc.h"
-#include "gnuradio/dtv/dvbt2_framemapper_cc.h"
-#include "gnuradio/dtv/dvbt2_freqinterleaver_cc.h"
-#include "gnuradio/dtv/dvbt2_pilotgenerator_cc.h"
-#include "gnuradio/dtv/dvbt2_paprtr_cc.h"
-#include "gnuradio/dtv/dvbt2_p1insertion_cc.h"
-#include "gnuradio/dtv/dvbt2_miso_cc.h"
-#include "gnuradio/dtv/dvbs2_interleaver_bb.h"
-#include "gnuradio/dtv/dvbs2_modulator_bc.h"
-#include "gnuradio/dtv/dvbs2_physical_cc.h"
-#include "gnuradio/dtv/dvbt_energy_dispersal.h"
-#include "gnuradio/dtv/dvbt_reed_solomon_enc.h"
-#include "gnuradio/dtv/dvbt_convolutional_interleaver.h"
-#include "gnuradio/dtv/dvbt_inner_coder.h"
-#include "gnuradio/dtv/dvbt_bit_inner_interleaver.h"
-#include "gnuradio/dtv/dvbt_symbol_inner_interleaver.h"
-#include "gnuradio/dtv/dvbt_map.h"
-#include "gnuradio/dtv/dvbt_reference_signals.h"
-#include "gnuradio/dtv/dvbt_ofdm_sym_acquisition.h"
-#include "gnuradio/dtv/dvbt_demod_reference_signals.h"
-#include "gnuradio/dtv/dvbt_demap.h"
-#include "gnuradio/dtv/dvbt_bit_inner_deinterleaver.h"
-#include "gnuradio/dtv/dvbt_viterbi_decoder.h"
-#include "gnuradio/dtv/dvbt_convolutional_deinterleaver.h"
-#include "gnuradio/dtv/dvbt_reed_solomon_dec.h"
-#include "gnuradio/dtv/dvbt_energy_descramble.h"
-#include "gnuradio/dtv/catv_transport_framing_enc_bb.h"
-#include "gnuradio/dtv/catv_reed_solomon_enc_bb.h"
-#include "gnuradio/dtv/catv_randomizer_bb.h"
-#include "gnuradio/dtv/catv_frame_sync_enc_bb.h"
-#include "gnuradio/dtv/catv_trellis_enc_bb.h"
-%}
-
-%include "gnuradio/dtv/atsc_deinterleaver.h"
-%include "gnuradio/dtv/atsc_depad.h"
-%include "gnuradio/dtv/atsc_derandomizer.h"
-%include "gnuradio/dtv/atsc_equalizer.h"
-%include "gnuradio/dtv/atsc_field_sync_mux.h"
-%include "gnuradio/dtv/atsc_fpll.h"
-%include "gnuradio/dtv/atsc_fs_checker.h"
-%include "gnuradio/dtv/atsc_interleaver.h"
-%include "gnuradio/dtv/atsc_pad.h"
-%include "gnuradio/dtv/atsc_randomizer.h"
-%include "gnuradio/dtv/atsc_rs_decoder.h"
-%include "gnuradio/dtv/atsc_rs_encoder.h"
-%include "gnuradio/dtv/atsc_sync.h"
-%include "gnuradio/dtv/atsc_trellis_encoder.h"
-%include "gnuradio/dtv/atsc_viterbi_decoder.h"
-%include "gnuradio/dtv/dvb_config.h"
-%include "gnuradio/dtv/dvbt_config.h"
-%include "gnuradio/dtv/dvbt2_config.h"
-%include "gnuradio/dtv/dvbs2_config.h"
-%include "gnuradio/dtv/catv_config.h"
-%include "gnuradio/dtv/dvb_bbheader_bb.h"
-%include "gnuradio/dtv/dvb_bbscrambler_bb.h"
-%include "gnuradio/dtv/dvb_bch_bb.h"
-%include "gnuradio/dtv/dvb_ldpc_bb.h"
-%include "gnuradio/dtv/dvbt2_interleaver_bb.h"
-%include "gnuradio/dtv/dvbt2_modulator_bc.h"
-%include "gnuradio/dtv/dvbt2_cellinterleaver_cc.h"
-%include "gnuradio/dtv/dvbt2_framemapper_cc.h"
-%include "gnuradio/dtv/dvbt2_freqinterleaver_cc.h"
-%include "gnuradio/dtv/dvbt2_pilotgenerator_cc.h"
-%include "gnuradio/dtv/dvbt2_paprtr_cc.h"
-%include "gnuradio/dtv/dvbt2_p1insertion_cc.h"
-%include "gnuradio/dtv/dvbt2_miso_cc.h"
-%include "gnuradio/dtv/dvbs2_interleaver_bb.h"
-%include "gnuradio/dtv/dvbs2_modulator_bc.h"
-%include "gnuradio/dtv/dvbs2_physical_cc.h"
-%include "gnuradio/dtv/dvbt_energy_dispersal.h"
-%include "gnuradio/dtv/dvbt_reed_solomon_enc.h"
-%include "gnuradio/dtv/dvbt_convolutional_interleaver.h"
-%include "gnuradio/dtv/dvbt_inner_coder.h"
-%include "gnuradio/dtv/dvbt_bit_inner_interleaver.h"
-%include "gnuradio/dtv/dvbt_symbol_inner_interleaver.h"
-%include "gnuradio/dtv/dvbt_map.h"
-%include "gnuradio/dtv/dvbt_reference_signals.h"
-%include "gnuradio/dtv/dvbt_ofdm_sym_acquisition.h"
-%include "gnuradio/dtv/dvbt_demod_reference_signals.h"
-%include "gnuradio/dtv/dvbt_demap.h"
-%include "gnuradio/dtv/dvbt_bit_inner_deinterleaver.h"
-%include "gnuradio/dtv/dvbt_viterbi_decoder.h"
-%include "gnuradio/dtv/dvbt_convolutional_deinterleaver.h"
-%include "gnuradio/dtv/dvbt_reed_solomon_dec.h"
-%include "gnuradio/dtv/dvbt_energy_descramble.h"
-%include "gnuradio/dtv/catv_transport_framing_enc_bb.h"
-%include "gnuradio/dtv/catv_reed_solomon_enc_bb.h"
-%include "gnuradio/dtv/catv_randomizer_bb.h"
-%include "gnuradio/dtv/catv_frame_sync_enc_bb.h"
-%include "gnuradio/dtv/catv_trellis_enc_bb.h"
-
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_deinterleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_depad);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_derandomizer);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_equalizer)
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_field_sync_mux);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_fpll);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_fs_checker);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_interleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_pad);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_randomizer);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_rs_decoder);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_rs_encoder);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_sync);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_trellis_encoder);
-GR_SWIG_BLOCK_MAGIC2(dtv, atsc_viterbi_decoder);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bbheader_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bbscrambler_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bch_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvb_ldpc_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_interleaver_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_modulator_bc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_cellinterleaver_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_framemapper_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_freqinterleaver_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_pilotgenerator_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_paprtr_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_p1insertion_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_miso_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_interleaver_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_modulator_bc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_physical_cc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_energy_dispersal);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reed_solomon_enc);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_convolutional_interleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_inner_coder);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_bit_inner_interleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_symbol_inner_interleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_map);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reference_signals);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_ofdm_sym_acquisition);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_demod_reference_signals);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_demap);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_bit_inner_deinterleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_viterbi_decoder);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_convolutional_deinterleaver);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reed_solomon_dec);
-GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_energy_descramble);
-GR_SWIG_BLOCK_MAGIC2(dtv, catv_transport_framing_enc_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, catv_reed_solomon_enc_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, catv_randomizer_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, catv_frame_sync_enc_bb);
-GR_SWIG_BLOCK_MAGIC2(dtv, catv_trellis_enc_bb);
diff --git a/gr-dtv/swig/dtv_swig.py.in b/gr-dtv/swig/dtv_swig.py.in
new file mode 100644
index 000000000..1551c776d
--- /dev/null
+++ b/gr-dtv/swig/dtv_swig.py.in
@@ -0,0 +1,14 @@
+#
+# Copyright 2020 Free Software Foundation, Inc.
+#
+# This file is part of GNU Radio
+#
+# SPDX-License-Identifier: GPL-3.0-or-later
+#
+#
+
+from __future__ import absolute_import
+
+from .dtv_swig0 import *
+from .dtv_swig1 import *
+from .dtv_swig2 import *
diff --git a/gr-dtv/swig/dtv_swig0.i b/gr-dtv/swig/dtv_swig0.i
new file mode 100644
index 000000000..efaa31f48
--- /dev/null
+++ b/gr-dtv/swig/dtv_swig0.i
@@ -0,0 +1,83 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2014,2015,2016,2020 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ *
+ */
+
+#define DTV_API
+
+%include "gnuradio.i"
+
+//load generated python docstrings
+%include "dtv_swig0_doc.i"
+
+%{
+#include "gnuradio/dtv/atsc_deinterleaver.h"
+#include "gnuradio/dtv/atsc_depad.h"
+#include "gnuradio/dtv/atsc_derandomizer.h"
+#include "gnuradio/dtv/atsc_equalizer.h"
+#include "gnuradio/dtv/atsc_field_sync_mux.h"
+#include "gnuradio/dtv/atsc_fpll.h"
+#include "gnuradio/dtv/atsc_fs_checker.h"
+#include "gnuradio/dtv/atsc_interleaver.h"
+#include "gnuradio/dtv/atsc_pad.h"
+#include "gnuradio/dtv/atsc_randomizer.h"
+#include "gnuradio/dtv/atsc_rs_decoder.h"
+#include "gnuradio/dtv/atsc_rs_encoder.h"
+#include "gnuradio/dtv/atsc_sync.h"
+#include "gnuradio/dtv/atsc_trellis_encoder.h"
+#include "gnuradio/dtv/atsc_viterbi_decoder.h"
+#include "gnuradio/dtv/catv_config.h"
+#include "gnuradio/dtv/catv_transport_framing_enc_bb.h"
+#include "gnuradio/dtv/catv_reed_solomon_enc_bb.h"
+#include "gnuradio/dtv/catv_randomizer_bb.h"
+#include "gnuradio/dtv/catv_frame_sync_enc_bb.h"
+#include "gnuradio/dtv/catv_trellis_enc_bb.h"
+%}
+
+%include "gnuradio/dtv/atsc_deinterleaver.h"
+%include "gnuradio/dtv/atsc_depad.h"
+%include "gnuradio/dtv/atsc_derandomizer.h"
+%include "gnuradio/dtv/atsc_equalizer.h"
+%include "gnuradio/dtv/atsc_field_sync_mux.h"
+%include "gnuradio/dtv/atsc_fpll.h"
+%include "gnuradio/dtv/atsc_fs_checker.h"
+%include "gnuradio/dtv/atsc_interleaver.h"
+%include "gnuradio/dtv/atsc_pad.h"
+%include "gnuradio/dtv/atsc_randomizer.h"
+%include "gnuradio/dtv/atsc_rs_decoder.h"
+%include "gnuradio/dtv/atsc_rs_encoder.h"
+%include "gnuradio/dtv/atsc_sync.h"
+%include "gnuradio/dtv/atsc_trellis_encoder.h"
+%include "gnuradio/dtv/atsc_viterbi_decoder.h"
+%include "gnuradio/dtv/catv_config.h"
+%include "gnuradio/dtv/catv_transport_framing_enc_bb.h"
+%include "gnuradio/dtv/catv_reed_solomon_enc_bb.h"
+%include "gnuradio/dtv/catv_randomizer_bb.h"
+%include "gnuradio/dtv/catv_frame_sync_enc_bb.h"
+%include "gnuradio/dtv/catv_trellis_enc_bb.h"
+
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_deinterleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_depad);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_derandomizer);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_equalizer)
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_field_sync_mux);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_fpll);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_fs_checker);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_interleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_pad);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_randomizer);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_rs_decoder);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_rs_encoder);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_sync);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_trellis_encoder);
+GR_SWIG_BLOCK_MAGIC2(dtv, atsc_viterbi_decoder);
+GR_SWIG_BLOCK_MAGIC2(dtv, catv_transport_framing_enc_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, catv_reed_solomon_enc_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, catv_randomizer_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, catv_frame_sync_enc_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, catv_trellis_enc_bb);
diff --git a/gr-dtv/swig/dtv_swig1.i b/gr-dtv/swig/dtv_swig1.i
new file mode 100644
index 000000000..32b572d00
--- /dev/null
+++ b/gr-dtv/swig/dtv_swig1.i
@@ -0,0 +1,75 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2014,2015,2016,2020 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ *
+ */
+
+#define DTV_API
+
+%include "gnuradio.i"
+
+//load generated python docstrings
+%include "dtv_swig1_doc.i"
+
+%{
+#include "gnuradio/dtv/dvb_config.h"
+#include "gnuradio/dtv/dvbt2_config.h"
+#include "gnuradio/dtv/dvbs2_config.h"
+#include "gnuradio/dtv/dvb_bbheader_bb.h"
+#include "gnuradio/dtv/dvb_bbscrambler_bb.h"
+#include "gnuradio/dtv/dvb_bch_bb.h"
+#include "gnuradio/dtv/dvb_ldpc_bb.h"
+#include "gnuradio/dtv/dvbt2_interleaver_bb.h"
+#include "gnuradio/dtv/dvbt2_modulator_bc.h"
+#include "gnuradio/dtv/dvbt2_cellinterleaver_cc.h"
+#include "gnuradio/dtv/dvbt2_framemapper_cc.h"
+#include "gnuradio/dtv/dvbt2_freqinterleaver_cc.h"
+#include "gnuradio/dtv/dvbt2_pilotgenerator_cc.h"
+#include "gnuradio/dtv/dvbt2_paprtr_cc.h"
+#include "gnuradio/dtv/dvbt2_p1insertion_cc.h"
+#include "gnuradio/dtv/dvbt2_miso_cc.h"
+#include "gnuradio/dtv/dvbs2_interleaver_bb.h"
+#include "gnuradio/dtv/dvbs2_modulator_bc.h"
+#include "gnuradio/dtv/dvbs2_physical_cc.h"
+%}
+
+%include "gnuradio/dtv/dvb_config.h"
+%include "gnuradio/dtv/dvbt2_config.h"
+%include "gnuradio/dtv/dvbs2_config.h"
+%include "gnuradio/dtv/dvb_bbheader_bb.h"
+%include "gnuradio/dtv/dvb_bbscrambler_bb.h"
+%include "gnuradio/dtv/dvb_bch_bb.h"
+%include "gnuradio/dtv/dvb_ldpc_bb.h"
+%include "gnuradio/dtv/dvbt2_interleaver_bb.h"
+%include "gnuradio/dtv/dvbt2_modulator_bc.h"
+%include "gnuradio/dtv/dvbt2_cellinterleaver_cc.h"
+%include "gnuradio/dtv/dvbt2_framemapper_cc.h"
+%include "gnuradio/dtv/dvbt2_freqinterleaver_cc.h"
+%include "gnuradio/dtv/dvbt2_pilotgenerator_cc.h"
+%include "gnuradio/dtv/dvbt2_paprtr_cc.h"
+%include "gnuradio/dtv/dvbt2_p1insertion_cc.h"
+%include "gnuradio/dtv/dvbt2_miso_cc.h"
+%include "gnuradio/dtv/dvbs2_interleaver_bb.h"
+%include "gnuradio/dtv/dvbs2_modulator_bc.h"
+%include "gnuradio/dtv/dvbs2_physical_cc.h"
+
+GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bbheader_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bbscrambler_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvb_bch_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvb_ldpc_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_interleaver_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_modulator_bc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_cellinterleaver_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_framemapper_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_freqinterleaver_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_pilotgenerator_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_paprtr_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_p1insertion_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt2_miso_cc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_interleaver_bb);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_modulator_bc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbs2_physical_cc);
diff --git a/gr-dtv/swig/dtv_swig2.i b/gr-dtv/swig/dtv_swig2.i
new file mode 100644
index 000000000..75758ed5f
--- /dev/null
+++ b/gr-dtv/swig/dtv_swig2.i
@@ -0,0 +1,73 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2014,2015,2016,2020 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * SPDX-License-Identifier: GPL-3.0-or-later
+ *
+ */
+
+#define DTV_API
+
+%include "gnuradio.i"
+
+//load generated python docstrings
+%include "dtv_swig2_doc.i"
+
+%include "gnuradio/dtv/dvb_config.h"
+
+%{
+#include "gnuradio/dtv/dvbt_config.h"
+#include "gnuradio/dtv/dvbt_energy_dispersal.h"
+#include "gnuradio/dtv/dvbt_reed_solomon_enc.h"
+#include "gnuradio/dtv/dvbt_convolutional_interleaver.h"
+#include "gnuradio/dtv/dvbt_inner_coder.h"
+#include "gnuradio/dtv/dvbt_bit_inner_interleaver.h"
+#include "gnuradio/dtv/dvbt_symbol_inner_interleaver.h"
+#include "gnuradio/dtv/dvbt_map.h"
+#include "gnuradio/dtv/dvbt_reference_signals.h"
+#include "gnuradio/dtv/dvbt_ofdm_sym_acquisition.h"
+#include "gnuradio/dtv/dvbt_demod_reference_signals.h"
+#include "gnuradio/dtv/dvbt_demap.h"
+#include "gnuradio/dtv/dvbt_bit_inner_deinterleaver.h"
+#include "gnuradio/dtv/dvbt_viterbi_decoder.h"
+#include "gnuradio/dtv/dvbt_convolutional_deinterleaver.h"
+#include "gnuradio/dtv/dvbt_reed_solomon_dec.h"
+#include "gnuradio/dtv/dvbt_energy_descramble.h"
+%}
+
+%include "gnuradio/dtv/dvbt_config.h"
+%include "gnuradio/dtv/dvbt_energy_dispersal.h"
+%include "gnuradio/dtv/dvbt_reed_solomon_enc.h"
+%include "gnuradio/dtv/dvbt_convolutional_interleaver.h"
+%include "gnuradio/dtv/dvbt_inner_coder.h"
+%include "gnuradio/dtv/dvbt_bit_inner_interleaver.h"
+%include "gnuradio/dtv/dvbt_symbol_inner_interleaver.h"
+%include "gnuradio/dtv/dvbt_map.h"
+%include "gnuradio/dtv/dvbt_reference_signals.h"
+%include "gnuradio/dtv/dvbt_ofdm_sym_acquisition.h"
+%include "gnuradio/dtv/dvbt_demod_reference_signals.h"
+%include "gnuradio/dtv/dvbt_demap.h"
+%include "gnuradio/dtv/dvbt_bit_inner_deinterleaver.h"
+%include "gnuradio/dtv/dvbt_viterbi_decoder.h"
+%include "gnuradio/dtv/dvbt_convolutional_deinterleaver.h"
+%include "gnuradio/dtv/dvbt_reed_solomon_dec.h"
+%include "gnuradio/dtv/dvbt_energy_descramble.h"
+
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_energy_dispersal);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reed_solomon_enc);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_convolutional_interleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_inner_coder);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_bit_inner_interleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_symbol_inner_interleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_map);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reference_signals);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_ofdm_sym_acquisition);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_demod_reference_signals);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_demap);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_bit_inner_deinterleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_viterbi_decoder);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_convolutional_deinterleaver);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_reed_solomon_dec);
+GR_SWIG_BLOCK_MAGIC2(dtv, dvbt_energy_descramble);
-- 
2.27.0

From 05d58b8a122e49a294b38267d2b7f74aa6207db8 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 21 Sep 2020 15:28:38 -0700
Subject: [PATCH] gr-trellis: Split trellis_swig*.i files for less compiler
 memory usage.

---
 gr-trellis/swig/CMakeLists.txt     |  4 +-
 gr-trellis/swig/trellis_swig.py.in |  4 +-
 gr-trellis/swig/trellis_swig0.i    | 17 +--------
 gr-trellis/swig/trellis_swig1.i    | 25 +------------
 gr-trellis/swig/trellis_swig2.i    | 55 +++++++++++++++++++++++++++
 gr-trellis/swig/trellis_swig3.i    | 60 ++++++++++++++++++++++++++++++
 6 files changed, 125 insertions(+), 40 deletions(-)
 create mode 100644 gr-trellis/swig/trellis_swig2.i
 create mode 100644 gr-trellis/swig/trellis_swig3.i

diff --git a/gr-trellis/swig/CMakeLists.txt b/gr-trellis/swig/CMakeLists.txt
index 46685c38a..b73a03fb1 100644
--- a/gr-trellis/swig/CMakeLists.txt
+++ b/gr-trellis/swig/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2012,2016,2019 Free Software Foundation, Inc.
+# Copyright 2012,2016,2019,2020 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -42,6 +42,8 @@ configure_file(
 set(GR_SWIG_TRELLIS_IFILES
   trellis_swig0
   trellis_swig1
+  trellis_swig2
+  trellis_swig3
 )
 
 foreach(swigfile ${GR_SWIG_TRELLIS_IFILES})
diff --git a/gr-trellis/swig/trellis_swig.py.in b/gr-trellis/swig/trellis_swig.py.in
index f49e04e0a..8900a55b9 100644
--- a/gr-trellis/swig/trellis_swig.py.in
+++ b/gr-trellis/swig/trellis_swig.py.in
@@ -1,5 +1,5 @@
 #
-# Copyright 2016 Free Software Foundation, Inc.
+# Copyright 2016,2020 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -23,3 +23,5 @@ from __future__ import absolute_import
 
 from .trellis_swig0 import *
 from .trellis_swig1 import *
+from .trellis_swig2 import *
+from .trellis_swig3 import *
diff --git a/gr-trellis/swig/trellis_swig0.i b/gr-trellis/swig/trellis_swig0.i
index 596a043db..9f745821e 100644
--- a/gr-trellis/swig/trellis_swig0.i
+++ b/gr-trellis/swig/trellis_swig0.i
@@ -1,5 +1,5 @@
 /*
- * Copyright 2012,2016 Free Software Foundation, Inc.
+ * Copyright 2012,2016,2020 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -17,6 +17,7 @@
  * along with GNU Radio; see the file COPYING.  If not, write to
  * the Free Software Foundation, Inc., 51 Franklin Street,
  * Boston, MA 02110-1301, USA.
+ *
  */
 
 #define TRELLIS_API
@@ -40,8 +41,6 @@
 #include "gnuradio/trellis/siso_f.h"
 #include "gnuradio/trellis/encoder.h"
 #include "gnuradio/trellis/sccc_encoder.h"
-#include "gnuradio/trellis/pccc_encoder.h"
-#include "gnuradio/trellis/metrics.h"
 %}
 
 %include "gnuradio/trellis/constellation_metrics_cf.h"
@@ -50,8 +49,6 @@
 %include "gnuradio/trellis/siso_f.h"
 %include "gnuradio/trellis/encoder.h"
 %include "gnuradio/trellis/sccc_encoder.h"
-%include "gnuradio/trellis/pccc_encoder.h"
-%include "gnuradio/trellis/metrics.h"
 
 GR_SWIG_BLOCK_MAGIC2(trellis, constellation_metrics_cf);
 GR_SWIG_BLOCK_MAGIC2(trellis, permutation);
@@ -69,13 +66,3 @@ GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_encoder_bi, sccc_encoder<std::uint8_t,st
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_encoder_ss, sccc_encoder<std::int16_t,std::int16_t>);
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_encoder_si, sccc_encoder<std::int16_t,std::int32_t>);
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_encoder_ii, sccc_encoder<std::int32_t,std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bb, pccc_encoder<std::uint8_t,std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bs, pccc_encoder<std::uint8_t,std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bi, pccc_encoder<std::uint8_t,std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_ss, pccc_encoder<std::int16_t,std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_si, pccc_encoder<std::int16_t,std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_ii, pccc_encoder<std::int32_t,std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_s, metrics<std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_i, metrics<std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_f, metrics<float>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_c, metrics<gr_complex>);
diff --git a/gr-trellis/swig/trellis_swig1.i b/gr-trellis/swig/trellis_swig1.i
index 7a8728efd..8a1c5a34a 100644
--- a/gr-trellis/swig/trellis_swig1.i
+++ b/gr-trellis/swig/trellis_swig1.i
@@ -1,5 +1,5 @@
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016,2020 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio
  *
@@ -17,6 +17,7 @@
  * along with GNU Radio; see the file COPYING.  If not, write to
  * the Free Software Foundation, Inc., 51 Franklin Street,
  * Boston, MA 02110-1301, USA.
+ *
  */
 
 #define TRELLIS_API
@@ -34,19 +35,13 @@
 
 %{
 #include "gnuradio/trellis/pccc_decoder_blk.h"
-#include "gnuradio/trellis/pccc_decoder_combined_blk.h"
 #include "gnuradio/trellis/viterbi.h"
 #include "gnuradio/trellis/viterbi_combined.h"
-#include "gnuradio/trellis/sccc_decoder_blk.h"
-#include "gnuradio/trellis/sccc_decoder_combined_blk.h"
 %}
 
 %include "gnuradio/trellis/pccc_decoder_blk.h"
-%include "gnuradio/trellis/pccc_decoder_combined_blk.h"
 %include "gnuradio/trellis/viterbi.h"
 %include "gnuradio/trellis/viterbi_combined.h"
-%include "gnuradio/trellis/sccc_decoder_blk.h"
-%include "gnuradio/trellis/sccc_decoder_combined_blk.h"
 
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_b, pccc_decoder_blk<std::uint8_t>);
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_s, pccc_decoder_blk<std::int16_t>);
@@ -66,19 +61,3 @@ GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, viterbi_combined_fi, viterbi_combined<float,s
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, viterbi_combined_cb, viterbi_combined<gr_complex,std::uint8_t>);
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, viterbi_combined_cs, viterbi_combined<gr_complex,std::int16_t>);
 GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, viterbi_combined_ci, viterbi_combined<gr_complex,std::int32_t>);
-
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_b, sccc_decoder_blk<std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_s, sccc_decoder_blk<std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_i, sccc_decoder_blk<std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fb, sccc_decoder_combined_blk<float, std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fs, sccc_decoder_combined_blk<float, std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fi, sccc_decoder_combined_blk<float, std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_cb, sccc_decoder_combined_blk<gr_complex, std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_cs, sccc_decoder_combined_blk<gr_complex, std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_ci, sccc_decoder_combined_blk<gr_complex, std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fb, pccc_decoder_combined_blk<float, std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fs, pccc_decoder_combined_blk<float, std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fi, pccc_decoder_combined_blk<float, std::int32_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_cb, pccc_decoder_combined_blk<gr_complex, std::uint8_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_cs, pccc_decoder_combined_blk<gr_complex, std::int16_t>);
-GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_ci, pccc_decoder_combined_blk<gr_complex, std::int32_t>);
diff --git a/gr-trellis/swig/trellis_swig2.i b/gr-trellis/swig/trellis_swig2.i
new file mode 100644
index 000000000..aa0c8268c
--- /dev/null
+++ b/gr-trellis/swig/trellis_swig2.i
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2012,2016,2020 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#define TRELLIS_API
+#define DIGITAL_API
+
+%include "gnuradio.i"
+
+//load generated python docstrings
+%include "trellis_swig2_doc.i"
+
+%include "gnuradio/digital/metric_type.h"
+%include "gnuradio/trellis/siso_type.h"
+%include "gnuradio/trellis/fsm.h"
+%include "gnuradio/trellis/interleaver.h"
+
+%{
+#include "gnuradio/trellis/pccc_encoder.h"
+#include "gnuradio/trellis/metrics.h"
+#include "gnuradio/trellis/siso_f.h"
+%}
+
+%include "gnuradio/trellis/pccc_encoder.h"
+%include "gnuradio/trellis/metrics.h"
+%include "gnuradio/trellis/siso_f.h"
+
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bb, pccc_encoder<std::uint8_t,std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bs, pccc_encoder<std::uint8_t,std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_bi, pccc_encoder<std::uint8_t,std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_ss, pccc_encoder<std::int16_t,std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_si, pccc_encoder<std::int16_t,std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_encoder_ii, pccc_encoder<std::int32_t,std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_s, metrics<std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_i, metrics<std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_f, metrics<float>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, metrics_c, metrics<gr_complex>);
diff --git a/gr-trellis/swig/trellis_swig3.i b/gr-trellis/swig/trellis_swig3.i
new file mode 100644
index 000000000..e6f7d4b04
--- /dev/null
+++ b/gr-trellis/swig/trellis_swig3.i
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2016,2020 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ *
+ */
+
+#define TRELLIS_API
+#define DIGITAL_API
+
+%include "gnuradio.i"
+
+//load generated python docstrings
+%include "trellis_swig3_doc.i"
+
+%include "gnuradio/digital/metric_type.h"
+%include "gnuradio/trellis/siso_type.h"
+%include "gnuradio/trellis/fsm.h"
+%include "gnuradio/trellis/interleaver.h"
+
+%{
+#include "gnuradio/trellis/sccc_decoder_blk.h"
+#include "gnuradio/trellis/sccc_decoder_combined_blk.h"
+#include "gnuradio/trellis/pccc_decoder_combined_blk.h"
+%}
+
+%include "gnuradio/trellis/sccc_decoder_blk.h"
+%include "gnuradio/trellis/sccc_decoder_combined_blk.h"
+%include "gnuradio/trellis/pccc_decoder_combined_blk.h"
+
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_b, sccc_decoder_blk<std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_s, sccc_decoder_blk<std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_i, sccc_decoder_blk<std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fb, sccc_decoder_combined_blk<float, std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fs, sccc_decoder_combined_blk<float, std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_fi, sccc_decoder_combined_blk<float, std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_cb, sccc_decoder_combined_blk<gr_complex, std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_cs, sccc_decoder_combined_blk<gr_complex, std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, sccc_decoder_combined_ci, sccc_decoder_combined_blk<gr_complex, std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fb, pccc_decoder_combined_blk<float, std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fs, pccc_decoder_combined_blk<float, std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_fi, pccc_decoder_combined_blk<float, std::int32_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_cb, pccc_decoder_combined_blk<gr_complex, std::uint8_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_cs, pccc_decoder_combined_blk<gr_complex, std::int16_t>);
+GR_SWIG_BLOCK_MAGIC2_TMPL(trellis, pccc_decoder_combined_ci, pccc_decoder_combined_blk<gr_complex, std::int32_t>);
-- 
2.27.0

From 88deb9ec06df6ff2a2cd1bb4567317cb8769c748 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 21 Sep 2020 20:01:19 -0700
Subject: [PATCH] gr-dtv: Remove unnecessary memset() in LDPC encoder.

---
 gr-dtv/lib/dvb/dvb_ldpc_bb_impl.cc | 2 --
 1 file changed, 2 deletions(-)

diff --git a/gr-dtv/lib/dvb/dvb_ldpc_bb_impl.cc b/gr-dtv/lib/dvb/dvb_ldpc_bb_impl.cc
index 2b8e71e02..8deb3ae99 100644
--- a/gr-dtv/lib/dvb/dvb_ldpc_bb_impl.cc
+++ b/gr-dtv/lib/dvb/dvb_ldpc_bb_impl.cc
@@ -660,8 +660,6 @@ int dvb_ldpc_bb_impl::general_work(int noutput_items,
             p = &puncturing_buffer[nbch];
             b = &out[i + nbch];
         }
-        // First zero all the parity bits
-        memset(p, 0, sizeof(unsigned char) * plen);
 
         // copy the information bits
         memcpy(&out[i], &in[consumed], sizeof(unsigned char) * nbch);
-- 
2.27.0

From 7c181d4a784a814a37d2596f70a006f56b5a03ff Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 21 Sep 2020 20:07:52 -0700
Subject: [PATCH] gr-dtv: Take advantage of data cache with memcpy() in BCH
 encoder.

---
 gr-dtv/lib/dvb/dvb_bch_bb_impl.cc | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/gr-dtv/lib/dvb/dvb_bch_bb_impl.cc b/gr-dtv/lib/dvb/dvb_bch_bb_impl.cc
index ae47278c9..0c6f3f2ff 100644
--- a/gr-dtv/lib/dvb/dvb_bch_bb_impl.cc
+++ b/gr-dtv/lib/dvb/dvb_bch_bb_impl.cc
@@ -603,6 +603,8 @@ int dvb_bch_bb_impl::general_work(int noutput_items,
 
     if (frame_size != FECFRAME_MEDIUM) {
         for (int i = 0; i < noutput_items; i += nbch) {
+            memcpy(out, in, sizeof(unsigned char) * kbch);
+            out += kbch;
             for (int j = 0; j < (int)kbch / 8; j++) {
                 b = 0;
 
@@ -610,7 +612,6 @@ int dvb_bch_bb_impl::general_work(int noutput_items,
                 // http://www.sunshine2k.de/articles/coding/crc/understanding_crc.html
                 for (int e = 0; e < 8; e++) {
                     temp = *in++;
-                    *out++ = temp;
                     consumed++;
 
                     b |= temp << (7 - e);
@@ -637,6 +638,8 @@ int dvb_bch_bb_impl::general_work(int noutput_items,
         }
     } else {
         for (int i = 0; i < noutput_items; i += nbch) {
+            memcpy(out, in, sizeof(unsigned char) * kbch);
+            out += kbch;
             for (int j = 0; j < (int)kbch / 4; j++) {
                 b = 0;
 
@@ -644,7 +647,6 @@ int dvb_bch_bb_impl::general_work(int noutput_items,
                 // http://www.sunshine2k.de/articles/coding/crc/understanding_crc.html
                 for (int e = 0; e < 4; e++) {
                     temp = *in++;
-                    *out++ = temp;
                     consumed++;
 
                     b |= temp << (3 - e);
-- 
2.27.0

From b8328e2c9b91759391e01c13852b442c7c308960 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 21 Sep 2020 20:14:40 -0700
Subject: [PATCH] gr-dtv: Move costly integer divides out of loops in DVB-T2
 interleaver.

---
 gr-dtv/lib/dvbt2/dvbt2_interleaver_bb_impl.cc | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/gr-dtv/lib/dvbt2/dvbt2_interleaver_bb_impl.cc b/gr-dtv/lib/dvbt2/dvbt2_interleaver_bb_impl.cc
index 971fbb3bd..acea96d99 100644
--- a/gr-dtv/lib/dvbt2/dvbt2_interleaver_bb_impl.cc
+++ b/gr-dtv/lib/dvbt2/dvbt2_interleaver_bb_impl.cc
@@ -375,7 +375,7 @@ int dvbt2_interleaver_bb_impl::general_work(int noutput_items,
     unsigned char* out = (unsigned char*)output_items[0];
     int consumed = 0;
     int produced = 0;
-    int rows, offset, index;
+    int rows, offset, index, packed;
     unsigned int pack;
     const int* mux;
 
@@ -418,9 +418,10 @@ int dvbt2_interleaver_bb_impl::general_work(int noutput_items,
         } else {
             mux = &mux16[0];
         }
+        packed = frame_size / (mod * 2);
         for (int i = 0; i < noutput_items; i += packed_items) {
             index = 0;
-            for (int d = 0; d < frame_size / (mod * 2); d++) {
+            for (int d = 0; d < packed; d++) {
                 pack = 0;
                 for (int e = 0; e < (mod * 2); e++) {
                     offset = mux[e];
@@ -444,9 +445,10 @@ int dvbt2_interleaver_bb_impl::general_work(int noutput_items,
         } else {
             mux = &mux64[0];
         }
+        packed = frame_size / (mod * 2);
         for (int i = 0; i < noutput_items; i += packed_items) {
             index = 0;
-            for (int d = 0; d < frame_size / (mod * 2); d++) {
+            for (int d = 0; d < packed; d++) {
                 pack = 0;
                 for (int e = 0; e < (mod * 2); e++) {
                     offset = mux[e];
@@ -469,9 +471,10 @@ int dvbt2_interleaver_bb_impl::general_work(int noutput_items,
             } else {
                 mux = &mux256[0];
             }
+            packed = frame_size / (mod * 2);
             for (int i = 0; i < noutput_items; i += packed_items) {
                 index = 0;
-                for (int d = 0; d < frame_size / (mod * 2); d++) {
+                for (int d = 0; d < packed; d++) {
                     pack = 0;
                     for (int e = 0; e < (mod * 2); e++) {
                         offset = mux[e];
@@ -493,9 +496,10 @@ int dvbt2_interleaver_bb_impl::general_work(int noutput_items,
             } else {
                 mux = &mux256s[0];
             }
+            packed = frame_size / mod;
             for (int i = 0; i < noutput_items; i += packed_items) {
                 index = 0;
-                for (int d = 0; d < frame_size / mod; d++) {
+                for (int d = 0; d < packed; d++) {
                     pack = 0;
                     for (int e = 0; e < mod; e++) {
                         offset = mux[e];
-- 
2.27.0

From ec5a638c256ee2348f53552d19cb2c98020e6b8b Mon Sep 17 00:00:00 2001
From: alekhgupta1441 <alekhgupta1441@gmail.com>
Date: Sat, 18 Apr 2020 21:15:09 +0530
Subject: [PATCH] modtool: Update add.py to prevent same name blocks

---
 gr-utils/python/modtool/cli/add.py | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/gr-utils/python/modtool/cli/add.py b/gr-utils/python/modtool/cli/add.py
index 8654bf23c..71f52cc0b 100644
--- a/gr-utils/python/modtool/cli/add.py
+++ b/gr-utils/python/modtool/cli/add.py
@@ -24,6 +24,7 @@ from __future__ import print_function
 from __future__ import absolute_import
 from __future__ import unicode_literals
 
+import os
 import re
 import getpass
 
@@ -66,7 +67,6 @@ def cli(**kwargs):
         raise ModToolException('Missing or skipping relevant subdir.')
     get_blockname(self)
     click.secho("Block/code identifier: " + self.info['blockname'], fg='green')
-    self.info['fullblockname'] = self.info['modname'] + '_' + self.info['blockname']
     if not self.license_file:
         get_copyrightholder(self)
     self.info['license'] = self.setup_choose_license()
@@ -106,6 +106,13 @@ def get_blockname(self):
             self.info['blockname'] = cli_input("Enter name of block/code (without module name prefix): ")
     if not re.match('[a-zA-Z0-9_]+', self.info['blockname']):
         raise ModToolException('Invalid block name.')
+    self.info['fullblockname'] = self.info['modname'] + '_' + self.info['blockname']
+    fname_grc = self.info['fullblockname'] + '.block.yml'
+    for block in os.scandir('./grc/'):
+        if block.is_file():
+            s = block.name
+            if s == fname_grc:
+                raise ModToolException('Block Already Present.')
 
 def get_copyrightholder(self):
     """ Get the copyrightholder of the block to be added """
-- 
2.27.0

From 37950a64551b07f56fcd89b821588d3e8a978979 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Mon, 19 Oct 2020 12:00:12 -0700
Subject: [PATCH] gr-vocoder: Install missing block tree file.

---
 gr-vocoder/grc/CMakeLists.txt | 1 +
 1 file changed, 1 insertion(+)

diff --git a/gr-vocoder/grc/CMakeLists.txt b/gr-vocoder/grc/CMakeLists.txt
index 1d85c69ab..d8da71d32 100644
--- a/gr-vocoder/grc/CMakeLists.txt
+++ b/gr-vocoder/grc/CMakeLists.txt
@@ -32,6 +32,7 @@ install(FILES
     vocoder_g723_40_encode_sb.block.yml
     vocoder_ulaw_decode_bs.block.yml
     vocoder_ulaw_encode_sb.block.yml
+    vocoder.tree.yml
     DESTINATION ${GRC_BLOCKS_DIR}
 )
 
-- 
2.27.0

From 4a4fd570b398b0b50fe875fcf0eb9c9db2ea5c6e Mon Sep 17 00:00:00 2001
From: Doron Behar <doron.behar@gmail.com>
Date: Mon, 12 Oct 2020 20:00:48 +0300
Subject: [PATCH] gr-fec: install examples only if Python is enabled

Backport of cb2455c9e25cbb28eef94503c36e281f05bd8bbd to maint-3.8.
---
 gr-fec/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gr-fec/CMakeLists.txt b/gr-fec/CMakeLists.txt
index 2b562da5f..db20e261d 100644
--- a/gr-fec/CMakeLists.txt
+++ b/gr-fec/CMakeLists.txt
@@ -52,11 +52,11 @@ if(ENABLE_PYTHON)
     add_subdirectory(swig)
     add_subdirectory(python/fec)
     add_subdirectory(python/fec/LDPC)
+    add_subdirectory(examples)
 endif(ENABLE_PYTHON)
 if(ENABLE_GRC)
     add_subdirectory(grc)
 endif(ENABLE_GRC)
-add_subdirectory(examples)
 add_subdirectory(docs)
 add_subdirectory(ldpc_alist)
 
-- 
2.27.0

From dbc8ad7e7361fddc7b1dbc267c07a776a3f9664b Mon Sep 17 00:00:00 2001
From: Doron Behar <doron.behar@gmail.com>
Date: Mon, 12 Oct 2020 20:02:46 +0300
Subject: [PATCH] gr-filter: Install examples only if Python is enabled

Backport of 72652bd7597a70fd6b7b8fcf214f64010baae893 to maint-3.8.
---
 gr-filter/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gr-filter/CMakeLists.txt b/gr-filter/CMakeLists.txt
index 73899793f..6ddb9ebf6 100644
--- a/gr-filter/CMakeLists.txt
+++ b/gr-filter/CMakeLists.txt
@@ -53,11 +53,11 @@ if(ENABLE_PYTHON)
     add_subdirectory(python/filter/design)
     add_subdirectory(python/filter/gui)
     add_subdirectory(apps)
+    add_subdirectory(examples)
 endif(ENABLE_PYTHON)
 if(ENABLE_GRC)
     add_subdirectory(grc)
 endif(ENABLE_GRC)
-add_subdirectory(examples)
 add_subdirectory(docs)
 
 ########################################################################
-- 
2.27.0

From 4b42f1b8dca395ea2c6e409c2f5c3e7393a394db Mon Sep 17 00:00:00 2001
From: Jacob Gilbert <mrjacobagilbert@gmail.com>
Date: Mon, 12 Oct 2020 15:42:57 -0700
Subject: [PATCH] runtime: fix latency issue caused by setting block alias on
 message blocks

This changes how the blocks are identified when they need to be notified that they have messages waiting. It also clarifies the name the block is registered with explicitly, and adds exceptions for looking up blocks that do not exist.
---
 gnuradio-runtime/lib/basic_block.cc    |  2 +-
 gnuradio-runtime/lib/block.cc          |  4 ++--
 gnuradio-runtime/lib/block_registry.cc | 13 ++++++++++++-
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/gnuradio-runtime/lib/basic_block.cc b/gnuradio-runtime/lib/basic_block.cc
index bc1661765..69c985a49 100644
--- a/gnuradio-runtime/lib/basic_block.cc
+++ b/gnuradio-runtime/lib/basic_block.cc
@@ -197,7 +197,7 @@ void basic_block::insert_tail(pmt::pmt_t which_port, pmt::pmt_t msg)
     msg_queue_ready[which_port]->notify_one();
 
     // wake up thread if BLKD_IN or BLKD_OUT
-    global_block_registry.notify_blk(alias());
+    global_block_registry.notify_blk(d_symbol_name);
 }
 
 pmt::pmt_t basic_block::delete_head_nowait(pmt::pmt_t which_port)
diff --git a/gnuradio-runtime/lib/block.cc b/gnuradio-runtime/lib/block.cc
index 591428390..7020b5f6a 100644
--- a/gnuradio-runtime/lib/block.cc
+++ b/gnuradio-runtime/lib/block.cc
@@ -59,7 +59,7 @@ block::block(const std::string& name,
       d_pmt_done(pmt::intern("done")),
       d_system_port(pmt::intern("system"))
 {
-    global_block_registry.register_primitive(alias(), this);
+    global_block_registry.register_primitive(d_symbol_name, this);
     message_port_register_in(d_system_port);
     set_msg_handler(d_system_port, boost::bind(&block::system_handler, this, _1));
 
@@ -612,7 +612,7 @@ void block::system_handler(pmt::pmt_t msg)
     pmt::pmt_t op = pmt::car(msg);
     if (pmt::eqv(op, d_pmt_done)) {
         d_finished = pmt::to_long(pmt::cdr(msg));
-        global_block_registry.notify_blk(alias());
+        global_block_registry.notify_blk(d_symbol_name);
     } else {
         std::cout << "WARNING: bad message op on system port!\n";
         pmt::print(msg);
diff --git a/gnuradio-runtime/lib/block_registry.cc b/gnuradio-runtime/lib/block_registry.cc
index f25ad25b8..d1216fdb2 100644
--- a/gnuradio-runtime/lib/block_registry.cc
+++ b/gnuradio-runtime/lib/block_registry.cc
@@ -132,10 +132,21 @@ void block_registry::notify_blk(std::string blk)
     gr::thread::scoped_lock guard(d_mutex);
 
     if (primitive_map.find(blk) == primitive_map.end()) {
+        /* In later GNU Radio versions, we throw here:
+         *
+         * throw std::runtime_error("block notify failed: block not found!");
+         *
+         * But since this is an API change that we'd like to avoid on a maintenance
+         * branch, we're not doing that on maint-3.8.
+         */
         return;
     }
-    if (primitive_map[blk]->detail().get())
+    if (primitive_map[blk]->detail().get()) {
         primitive_map[blk]->detail()->d_tpb.notify_msg();
+    } else {
+        // not having block detail is not necessarily a problem; this will happen when
+        // publishing a message to a block that exists but has not yet been started
+    }
 }
 
 } /* namespace gr */
-- 
2.27.0

From 7fac2ccca7f42f79f576796cbe344def80bc60fa Mon Sep 17 00:00:00 2001
From: Derek Kozel <derek@bitstovolts.com>
Date: Sat, 6 Jun 2020 00:18:49 +0100
Subject: [PATCH] utils: Added print-all to gnuradio-config-info

Signed-off-by: Derek Kozel <derek@bitstovolts.com>
---
 gnuradio-runtime/apps/gnuradio-config-info.cc | 26 ++++++++++++-------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/gnuradio-runtime/apps/gnuradio-config-info.cc b/gnuradio-runtime/apps/gnuradio-config-info.cc
index 8e6fbba8f..a7e067cfd 100644
--- a/gnuradio-runtime/apps/gnuradio-config-info.cc
+++ b/gnuradio-runtime/apps/gnuradio-config-info.cc
@@ -40,7 +40,9 @@ int main(int argc, char** argv)
         (format("Program options: %1% [options]") % argv[0]).str());
     po::variables_map vm;
 
+    // clang-format off
     desc.add_options()("help,h", "print help message")(
+        "print-all", "print all information")(
         "prefix", "print GNU Radio installation prefix")(
         "sysconfdir", "print GNU Radio system configuration directory")(
         "prefsdir", "print GNU Radio preferences directory")(
@@ -51,6 +53,7 @@ int main(int argc, char** argv)
         "cc", "print GNU Radio C compiler version")(
         "cxx", "print GNU Radio C++ compiler version")(
         "cflags", "print GNU Radio CFLAGS")("version,v", "print GNU Radio version");
+    // clang-format off
 
     try {
         po::store(po::parse_command_line(argc, argv, desc), vm);
@@ -66,37 +69,40 @@ int main(int argc, char** argv)
         return 1;
     }
 
-    if (vm.count("prefix"))
+    bool print_all = vm.count("print-all");
+
+    if (vm.count("prefix") || print_all)
         std::cout << gr::prefix() << std::endl;
 
-    if (vm.count("sysconfdir"))
+    if (vm.count("sysconfdir") || print_all)
         std::cout << gr::sysconfdir() << std::endl;
 
-    if (vm.count("prefsdir"))
+    if (vm.count("prefsdir") || print_all)
         std::cout << gr::prefsdir() << std::endl;
 
-    if (vm.count("userprefsdir"))
+    if (vm.count("userprefsdir") || print_all)
         std::cout << gr::userconf_path() << std::endl;
 
+    // Not included in print all due to verbosity
     if (vm.count("prefs"))
         std::cout << gr::prefs::singleton()->to_string() << std::endl;
 
-    if (vm.count("builddate"))
+    if (vm.count("builddate") || print_all)
         std::cout << gr::build_date() << std::endl;
 
-    if (vm.count("enabled-components"))
+    if (vm.count("enabled-components") || print_all)
         std::cout << gr::build_time_enabled_components() << std::endl;
 
-    if (vm.count("version"))
+    if (vm.count("version") || print_all)
         std::cout << gr::version() << std::endl;
 
-    if (vm.count("cc"))
+    if (vm.count("cc") || print_all)
         std::cout << gr::c_compiler() << std::endl;
 
-    if (vm.count("cxx"))
+    if (vm.count("cxx") || print_all)
         std::cout << gr::cxx_compiler() << std::endl;
 
-    if (vm.count("cflags"))
+    if (vm.count("cflags") || print_all)
         std::cout << gr::compiler_flags() << std::endl;
 
     return 0;
-- 
2.27.0

From cf12da1ac051669a2f628d7ff68207673bdfeddc Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Sat, 31 Oct 2020 15:21:01 -0700
Subject: [PATCH] gr-video-sdl: Fix YUV formats.

---
 gr-video-sdl/grc/video_sdl_sink.block.yml         | 6 +++---
 gr-video-sdl/include/gnuradio/video_sdl/sink_s.h  | 2 +-
 gr-video-sdl/include/gnuradio/video_sdl/sink_uc.h | 2 +-
 gr-video-sdl/lib/sink_s_impl.cc                   | 2 +-
 gr-video-sdl/lib/sink_uc_impl.cc                  | 2 +-
 5 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/gr-video-sdl/grc/video_sdl_sink.block.yml b/gr-video-sdl/grc/video_sdl_sink.block.yml
index 9476a00ef..99470ff9d 100644
--- a/gr-video-sdl/grc/video_sdl_sink.block.yml
+++ b/gr-video-sdl/grc/video_sdl_sink.block.yml
@@ -32,9 +32,9 @@ parameters:
     default: '0'
 -   id: num_channels
     label: Channels
-    dtype: enum
+    dtype: int
     options: ['1', '2', '3']
-    option_labels: [1 (Grayscale), '2 (Y, alternating pixels U and V)', 3 (YUV)]
+    option_labels: [1 (Grayscale), '2 (Y, U and V 4:2:2)', '3 (YUV 4:4:4)']
     hide: part
 
 inputs:
@@ -62,7 +62,7 @@ documentation: |-
 
     In 1-channel mode, input data is assumed to be grayscale, with each input item mapping to a single pixel.
 
-    In 2-channel mode, the first channel is Y for every pixel while the second channel alternates between pixels values for U and V.
+    In 2-channel mode, the first channel is Y for every pixel while the second channel alternates between pixel values for U and V.
 
     In 3-channel mode, input channels are assumed to be matching triples of YUV values, one byte per pixel, per channel.
 
diff --git a/gr-video-sdl/include/gnuradio/video_sdl/sink_s.h b/gr-video-sdl/include/gnuradio/video_sdl/sink_s.h
index d12fbdb8d..670f9cfc2 100644
--- a/gr-video-sdl/include/gnuradio/video_sdl/sink_s.h
+++ b/gr-video-sdl/include/gnuradio/video_sdl/sink_s.h
@@ -34,7 +34,7 @@ namespace video_sdl {
  *
  * input signature is one, two or three streams of signed short.
  * One stream: stream is grey (Y)
- * two streems: first is grey (Y), second is alternating U and V
+ * two streams: first is grey (Y), second is alternating U and V
  * Three streams: first is grey (Y), second is U, third is V
  * Input samples must be in the range [0,255].
  */
diff --git a/gr-video-sdl/include/gnuradio/video_sdl/sink_uc.h b/gr-video-sdl/include/gnuradio/video_sdl/sink_uc.h
index bf72fd406..616d5b83b 100644
--- a/gr-video-sdl/include/gnuradio/video_sdl/sink_uc.h
+++ b/gr-video-sdl/include/gnuradio/video_sdl/sink_uc.h
@@ -34,7 +34,7 @@ namespace video_sdl {
  *
  * input signature is one, two or three streams of uchar.
  * One stream: stream is grey (Y)
- * two streems: first is grey (Y), second is alternating U and V
+ * two streams: first is grey (Y), second is alternating U and V
  * Three streams: first is grey (Y), second is U, third is V
  * Input samples must be in the range [0,255].
  */
diff --git a/gr-video-sdl/lib/sink_s_impl.cc b/gr-video-sdl/lib/sink_s_impl.cc
index 9642582a1..dea4eceb5 100644
--- a/gr-video-sdl/lib/sink_s_impl.cc
+++ b/gr-video-sdl/lib/sink_s_impl.cc
@@ -203,7 +203,7 @@ int sink_s_impl::copy_plane_to_surface(int plane,
     unsigned char* dst_pixels_2 = (unsigned char*)d_image->pixels[second_dst_plane];
     dst_pixels_2 = &dst_pixels_2[current_line * d_image->pitches[second_dst_plane]];
 
-    int src_width = (0 == plane || 12 == plane || 1122 == plane) ? d_width : d_width / 2;
+    int src_width = d_width;
     int noutput_items_produced = 0;
     int max_height = (0 == plane) ? d_height - 1 : d_height / 2 - 1;
 
diff --git a/gr-video-sdl/lib/sink_uc_impl.cc b/gr-video-sdl/lib/sink_uc_impl.cc
index 3556e865a..760cd4885 100644
--- a/gr-video-sdl/lib/sink_uc_impl.cc
+++ b/gr-video-sdl/lib/sink_uc_impl.cc
@@ -197,7 +197,7 @@ int sink_uc_impl::copy_plane_to_surface(int plane,
     unsigned char* dst_pixels_2 = (unsigned char*)d_image->pixels[second_dst_plane];
     dst_pixels_2 = &dst_pixels_2[current_line * d_image->pitches[second_dst_plane]];
 
-    int src_width = (0 == plane || 12 == plane || 1122 == plane) ? d_width : d_width / 2;
+    int src_width = d_width;
     int noutput_items_produced = 0;
     int max_height = (0 == plane) ? d_height - 1 : d_height / 2 - 1;
 
-- 
2.27.0

From 733a4b9e9b142994acbc53c0bf9d19b435bd034f Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Thu, 15 Oct 2020 18:52:26 -0400
Subject: [PATCH] audio: lib: windows: Add <cctype> header for std::isdigit.

Previously the header must have been pulled in by one of the Boost
includes, because with a newer Boost version I had build errors. This
makes the include explicit so std::isdigit is guaranteed to be declared.
---
 gr-audio/lib/windows/windows_sink.cc   | 1 +
 gr-audio/lib/windows/windows_source.cc | 1 +
 2 files changed, 2 insertions(+)

diff --git a/gr-audio/lib/windows/windows_sink.cc b/gr-audio/lib/windows/windows_sink.cc
index daf460e10..3eaa945e8 100644
--- a/gr-audio/lib/windows/windows_sink.cc
+++ b/gr-audio/lib/windows/windows_sink.cc
@@ -34,6 +34,7 @@
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <cctype>
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
diff --git a/gr-audio/lib/windows/windows_source.cc b/gr-audio/lib/windows/windows_source.cc
index ae74e53c8..99d1efea9 100644
--- a/gr-audio/lib/windows/windows_source.cc
+++ b/gr-audio/lib/windows/windows_source.cc
@@ -34,6 +34,7 @@
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <cctype>
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
-- 
2.27.0

From 242eeaaa06c7faa1425158b0d2d12c30a39c6a1c Mon Sep 17 00:00:00 2001
From: Michael Dickens <michael.dickens@ettus.com>
Date: Wed, 14 Aug 2019 20:46:11 -0400
Subject: [PATCH] RPC: fixes to allow using Thrift 0.9 through 0.12

---
 cmake/Modules/FindTHRIFT.cmake                |   6 +
 .../include/gnuradio/CMakeLists.txt           |   1 +
 .../gnuradio/rpc_shared_ptr_selection.h       | 148 ++++++++++++++++++
 .../include/gnuradio/rpcmanager_base.h        |   4 +-
 .../include/gnuradio/rpcserver_base.h         |   3 +-
 .../gnuradio/rpcserver_booter_aggregator.h    |   4 +-
 .../include/gnuradio/thrift_server_template.h |  22 +--
 7 files changed, 173 insertions(+), 15 deletions(-)
 create mode 100644 gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h

diff --git a/cmake/Modules/FindTHRIFT.cmake b/cmake/Modules/FindTHRIFT.cmake
index 970a9c4c3..f9b4f85d8 100644
--- a/cmake/Modules/FindTHRIFT.cmake
+++ b/cmake/Modules/FindTHRIFT.cmake
@@ -91,3 +91,9 @@ if (THRIFT_FOUND AND NOT TARGET Thrift::thrift)
     INTERFACE_LINK_LIBRARIES "${THRIFT_LIBRARIES}"
     )
 endif()
+
+# set version to be useable by calling script
+
+IF(THRIFT_FOUND)
+  set(THRIFT_VERSION ${PC_THRIFT_VERSION} CACHE INTERNAL "Thrift Version" FORCE)
+ENDIF()
diff --git a/gnuradio-runtime/include/gnuradio/CMakeLists.txt b/gnuradio-runtime/include/gnuradio/CMakeLists.txt
index 045f140e7..9770bf7cf 100644
--- a/gnuradio-runtime/include/gnuradio/CMakeLists.txt
+++ b/gnuradio-runtime/include/gnuradio/CMakeLists.txt
@@ -72,6 +72,7 @@ install(FILES
   tag_checker.h
   types.h
   unittests.h
+  rpc_shared_ptr_selection.h
   rpccallbackregister_base.h
   rpcmanager_base.h
   rpcmanager.h
diff --git a/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h b/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h
new file mode 100644
index 000000000..5ce264cc1
--- /dev/null
+++ b/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h
@@ -0,0 +1,148 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2019 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio
+ *
+ * GNU Radio is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * GNU Radio is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with GNU Radio; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef RPC_SHARED_PTR_SELECTION_H
+#define RPC_SHARED_PTR_SELECTION_H
+
+#include <memory>
+
+#include "gnuradio/config.h"
+#ifdef GR_RPCSERVER_THRIFT
+#include <thrift/version.h>
+// to get boost includes, if and only if they're still in Thrift:
+#include <thrift/concurrency/Thread.h>
+#endif
+
+// select a "shared_ptr" type to use: std:: or boost::
+//
+// Dear Thrift maintainers, should you read this, here's a haiku:
+//
+// Version numbers carved in strings
+// C Preprocessor can't
+// Templates can't
+// Sadness
+
+
+namespace gr {
+
+//! \brief constexpr check for whether a character is a digit
+constexpr bool digit(char d) { return !(d < '0' || d > '9'); }
+
+/* \brief Convert C string to a Version magic, constexpr.
+ *
+ * Converts "5.10.3" to 5·10⁶ + 10·10³+ 3 = 5 010 003
+ */
+constexpr uint64_t cstr_to_version_magic(const char* cstr, uint64_t magicsofar)
+{
+    // OK, we go: check for the current character being a zero byte, in that case,
+    // return magicsofar
+    return *cstr ?
+                 // next, check whether a digit, in that case, multiply magicsofar with
+                 // 10, and parse on into the sunset
+               (digit(*cstr)
+                    ? cstr_to_version_magic(cstr + 1, magicsofar * 10 + (*cstr - '0'))
+                    :
+                    // if it's not a digit, maybe it's a dot? throw
+                    ((*cstr) == '.' ?
+                                    // it's a dot -> multiply by one hundred, move on
+                         cstr_to_version_magic(cstr + 1, magicsofar * 100)
+                                    :
+                                    // not a dot, not a digit, not an end byte
+                         (throw "String is not a x.y.z version string")))
+                 : magicsofar;
+}
+
+/* \brief Convert three-element version numbers to a single unsigned integer. constexpr.
+ *
+ * Converts 5, 10, 3 to 5·10⁶ + 10·10³+ 3 = 5 010 003
+ */
+constexpr uint64_t
+version_to_version_magic(unsigned int x, unsigned int y, unsigned int z)
+{
+    return (uint64_t)x * 1000 * 1000 + y * 1000 + z;
+}
+
+/* \brief Thrift-specific version check
+ *
+ * Evaluates THRIFT_VERSION as string by converting it to a version magic.
+ *
+ * Then, compares that to 0.11.0, which is the first release where Thrift might use
+ * std::shared_ptrs.
+ *
+ * Then, compares to 0.13.0, which is the release where Thrift only uses
+ * std::shared_ptr.
+ *
+ * If inbetween, do the same check that Thrift does in their 0.11-0.12
+ * stdcxx.h headers, minus the redundant MSVC check, which is guaranteed by our MSVC
+ * minimum requirement, anyway
+ */
+constexpr bool thrift_version_uses_boost()
+{
+#ifndef THRIFT_VERSION
+    // if there's no thrift, then that doesn't use boost
+    return false;
+#else // THRIFT_VERSION
+    return (cstr_to_version_magic(THRIFT_VERSION, 0) <
+            version_to_version_magic(0, 11, 0)) ||
+           (cstr_to_version_magic(THRIFT_VERSION, 0) <
+                version_to_version_magic(0, 13, 0) &&
+    /* This is the internal check that thrift does in 0.11 and 0.12 to decide whether to
+      use std:: or boost::shared_ptr. As soon as we require Thrift >= 0.13.0 this
+      #define-based check is to be removed. */
+#if defined(BOOST_NO_CXX11_SMART_PTR) || defined(FORCE_BOOST_SMART_PTR)
+            true
+#else
+            false
+#endif
+           );
+#endif // THRIFT_VERSION
+}
+
+/* \brief template base class; unspecialized; specializations hold a `t` member that's
+ * actually a Thrift-compatible `shared_ptr`.
+ */
+template <bool use_std, class T>
+struct rpc_sptr_impl;
+
+//! \brief template specialization holding a `std::shared_ptr`
+template <class T>
+struct rpc_sptr_impl<true, T> {
+    using t = std::shared_ptr<T>;
+};
+
+#ifdef BOOST_SHARED_PTR_HPP_INCLUDED
+//! \brief template specialization holding a `boost::shared_ptr`
+template <class T>
+struct rpc_sptr_impl<false, T> {
+    using t = boost::shared_ptr<T>;
+};
+#endif
+
+/* \brief template class with ::t member type that is std:: or boost::shared_ptr,
+ * depending on `thrift_version_uses_boost()`.
+ */
+template <class T>
+struct rpc_sptr {
+    using t = typename rpc_sptr_impl<!thrift_version_uses_boost(), T>::t;
+};
+} // namespace gr
+#endif
diff --git a/gnuradio-runtime/include/gnuradio/rpcmanager_base.h b/gnuradio-runtime/include/gnuradio/rpcmanager_base.h
index e92df5bd1..8c60fe821 100644
--- a/gnuradio-runtime/include/gnuradio/rpcmanager_base.h
+++ b/gnuradio-runtime/include/gnuradio/rpcmanager_base.h
@@ -23,7 +23,7 @@
 #ifndef RPCMANAGER_BASE_H
 #define RPCMANAGER_BASE_H
 
-#include <boost/shared_ptr.hpp>
+#include <gnuradio/rpc_shared_ptr_selection.h>
 
 class rpcserver_booter_base;
 // class rpcserver_booter_aggregator;
@@ -31,7 +31,7 @@ class rpcserver_booter_base;
 class rpcmanager_base
 {
 public:
-    typedef boost::shared_ptr<rpcserver_booter_base> rpcserver_booter_base_sptr;
+    typedef gr::rpc_sptr<rpcserver_booter_base>::t rpcserver_booter_base_sptr;
 
     rpcmanager_base() { ; }
     ~rpcmanager_base() { ; }
diff --git a/gnuradio-runtime/include/gnuradio/rpcserver_base.h b/gnuradio-runtime/include/gnuradio/rpcserver_base.h
index 46b088474..f11fd0b6f 100644
--- a/gnuradio-runtime/include/gnuradio/rpcserver_base.h
+++ b/gnuradio-runtime/include/gnuradio/rpcserver_base.h
@@ -23,6 +23,7 @@
 #ifndef RPCSERVER_BASE_H
 #define RPCSERVER_BASE_H
 
+#include <gnuradio/rpc_shared_ptr_selection.h>
 #include <gnuradio/rpccallbackregister_base.h>
 
 class rpcserver_base : public virtual callbackregister_base
@@ -45,7 +46,7 @@ public:
 
     virtual void setCurPrivLevel(const priv_lvl_t priv) { cur_priv = priv; }
 
-    typedef boost::shared_ptr<rpcserver_base> rpcserver_base_sptr;
+    typedef gr::rpc_sptr<rpcserver_base>::t rpcserver_base_sptr;
 
 protected:
     priv_lvl_t cur_priv;
diff --git a/gnuradio-runtime/include/gnuradio/rpcserver_booter_aggregator.h b/gnuradio-runtime/include/gnuradio/rpcserver_booter_aggregator.h
index 0fbbb604e..fa20278be 100644
--- a/gnuradio-runtime/include/gnuradio/rpcserver_booter_aggregator.h
+++ b/gnuradio-runtime/include/gnuradio/rpcserver_booter_aggregator.h
@@ -24,9 +24,9 @@
 #define RPCSERVER_BOOTER_AGGREGATOR
 
 #include <gnuradio/api.h>
+#include <gnuradio/rpc_shared_ptr_selection.h>
 #include <gnuradio/rpcserver_aggregator.h>
 #include <gnuradio/rpcserver_booter_base.h>
-#include <boost/shared_ptr.hpp>
 #include <string>
 
 class rpcserver_server;
@@ -49,7 +49,7 @@ protected:
 
 private:
     std::string d_type;
-    boost::shared_ptr<rpcserver_aggregator> server;
+    gr::rpc_sptr<rpcserver_aggregator>::t server;
 };
 
 #endif /* RPCSERVER_BOOTER_AGGREGATOR */
diff --git a/gnuradio-runtime/include/gnuradio/thrift_server_template.h b/gnuradio-runtime/include/gnuradio/thrift_server_template.h
index 1c87e4820..fc3b7e8a7 100644
--- a/gnuradio-runtime/include/gnuradio/thrift_server_template.h
+++ b/gnuradio-runtime/include/gnuradio/thrift_server_template.h
@@ -25,6 +25,7 @@
 
 #include <gnuradio/logger.h>
 #include <gnuradio/prefs.h>
+#include <gnuradio/rpc_shared_ptr_selection.h>
 #include <gnuradio/thrift_application_base.h>
 #include <iostream>
 
@@ -50,11 +51,12 @@ protected:
     friend class thrift_application_base<TserverBase, TImplClass>;
 
 private:
-    boost::shared_ptr<TserverClass> d_handler;
-    boost::shared_ptr<thrift::TProcessor> d_processor;
-    boost::shared_ptr<thrift::transport::TServerTransport> d_serverTransport;
-    boost::shared_ptr<thrift::transport::TTransportFactory> d_transportFactory;
-    boost::shared_ptr<thrift::protocol::TProtocolFactory> d_protocolFactory;
+    // typename necessary in C++11 for dependent types:
+    typename gr::rpc_sptr<TserverClass>::t d_handler;
+    gr::rpc_sptr<thrift::TProcessor>::t d_processor;
+    gr::rpc_sptr<thrift::transport::TServerTransport>::t d_serverTransport;
+    gr::rpc_sptr<thrift::transport::TTransportFactory>::t d_transportFactory;
+    gr::rpc_sptr<thrift::protocol::TProtocolFactory>::t d_protocolFactory;
     /**
      * Custom TransportFactory that allows you to override the default Thrift buffer size
      * of 512 bytes.
@@ -71,10 +73,10 @@ private:
 
         virtual ~TBufferedTransportFactory() {}
 
-        virtual boost::shared_ptr<thrift::transport::TTransport>
-        getTransport(boost::shared_ptr<thrift::transport::TTransport> trans)
+        virtual gr::rpc_sptr<thrift::transport::TTransport>::t
+        getTransport(gr::rpc_sptr<thrift::transport::TTransport>::t trans)
         {
-            return boost::shared_ptr<thrift::transport::TTransport>(
+            return gr::rpc_sptr<thrift::transport::TTransport>::t(
                 new thrift::transport::TBufferedTransport(trans, bufferSize));
         }
 
@@ -133,11 +135,11 @@ thrift_server_template<TserverBase, TserverClass, TImplClass>::thrift_server_tem
                 d_processor, d_serverTransport, d_transportFactory, d_protocolFactory));
     } else {
         // std::cout << "Thrift Multi-threaded server : " << d_nthreads << std::endl;
-        boost::shared_ptr<thrift::concurrency::ThreadManager> threadManager(
+        gr::rpc_sptr<thrift::concurrency::ThreadManager>::t threadManager(
             thrift::concurrency::ThreadManager::newSimpleThreadManager(nthreads));
 
         threadManager->threadFactory(
-            boost::shared_ptr<thrift::concurrency::PlatformThreadFactory>(
+            gr::rpc_sptr<thrift::concurrency::PlatformThreadFactory>::t(
                 new thrift::concurrency::PlatformThreadFactory()));
 
         threadManager->start();
-- 
2.27.0

From e197ac178c09b3155083bc86bc4d7065730344fc Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sun, 27 Sep 2020 17:30:09 -0400
Subject: [PATCH] fix header file install

---
 gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt | 1 -
 1 file changed, 1 deletion(-)

diff --git a/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt b/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt
index 92ffef9ee..a9bfe34e2 100644
--- a/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt
+++ b/gr-qtgui/include/gnuradio/qtgui/CMakeLists.txt
@@ -23,7 +23,6 @@
 install(FILES
   api.h
   ber_sink_b.h
-  CMakeLists.txt
   constellationdisplayform.h
   ConstellationDisplayPlot.h
   const_sink_c.h
-- 
2.27.0

From ba493519c1def66247992a962a743d39e47cb9ca Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sun, 15 Nov 2020 13:35:27 -0500
Subject: [PATCH] allow oot override of gr python dir

Fixes: GNU Radio 3.8 installed with a package manager
       hard codes GR_PYTHON_DIR #2856
---
 cmake/Modules/GnuradioConfig.cmake.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/cmake/Modules/GnuradioConfig.cmake.in b/cmake/Modules/GnuradioConfig.cmake.in
index f59e74b8b..aadfddc81 100644
--- a/cmake/Modules/GnuradioConfig.cmake.in
+++ b/cmake/Modules/GnuradioConfig.cmake.in
@@ -47,7 +47,7 @@ find_dependency(Volk)
 set(ENABLE_PYTHON @ENABLE_PYTHON@ CACHE BOOL "Enable Python & SWIG")
 if(${ENABLE_PYTHON})
   set(PYTHON_EXECUTABLE @PYTHON_EXECUTABLE@)
-  set(GR_PYTHON_DIR @GR_PYTHON_DIR@)
+  set(GR_PYTHON_DIR @GR_PYTHON_DIR@ CACHE STRING "Custom OOT Python installation directory")
   include(GrPython)
 endif()
 
-- 
2.27.0

From a5015887d3a2c4d768186ec65f2a19313211ee60 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sun, 27 Sep 2020 17:32:01 -0400
Subject: [PATCH] spelling

---
 gnuradio-runtime/include/gnuradio/block.h                   | 2 +-
 gnuradio-runtime/include/gnuradio/flowgraph.h               | 2 +-
 gnuradio-runtime/lib/math/random.cc                         | 2 +-
 gnuradio-runtime/lib/tpb_thread_body.cc                     | 2 +-
 gr-blocks/include/gnuradio/blocks/sample_and_hold.h         | 2 +-
 gr-blocks/include/gnuradio/blocks/threshold_ff.h            | 2 +-
 gr-blocks/python/blocks/qa_file_source.py                   | 2 +-
 gr-digital/include/gnuradio/digital/cma_equalizer_cc.h      | 2 +-
 gr-digital/include/gnuradio/digital/constellation.h         | 2 +-
 gr-digital/include/gnuradio/digital/header_format_crc.h     | 2 +-
 gr-digital/include/gnuradio/digital/header_format_ofdm.h    | 2 +-
 gr-digital/include/gnuradio/digital/packet_header_default.h | 2 +-
 gr-digital/include/gnuradio/digital/symbol_sync_cc.h        | 4 ++--
 gr-digital/include/gnuradio/digital/symbol_sync_ff.h        | 4 ++--
 gr-digital/lib/clock_tracking_loop.h                        | 2 +-
 gr-digital/lib/constellation_receiver_cb_impl.h             | 2 +-
 gr-filter/lib/pm_remez.cc                                   | 2 +-
 gr-qtgui/include/gnuradio/qtgui/plot_raster.h               | 2 +-
 gr-qtgui/include/gnuradio/qtgui/plot_waterfall.h            | 2 +-
 grc/core/FlowGraph.py                                       | 2 +-
 20 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/gnuradio-runtime/include/gnuradio/block.h b/gnuradio-runtime/include/gnuradio/block.h
index 58b86e3ea..e3d290ca6 100644
--- a/gnuradio-runtime/include/gnuradio/block.h
+++ b/gnuradio-runtime/include/gnuradio/block.h
@@ -333,7 +333,7 @@ public:
 
     /*!
      * \brief return a reference to the multiple precision rational
-     * represntation of the approximate output rate / input rate
+     * representation of the approximate output rate / input rate
      */
     mpq_class& mp_relative_rate() { return d_mp_relative_rate; }
 
diff --git a/gnuradio-runtime/include/gnuradio/flowgraph.h b/gnuradio-runtime/include/gnuradio/flowgraph.h
index 7bef328af..e8ef9ade8 100644
--- a/gnuradio-runtime/include/gnuradio/flowgraph.h
+++ b/gnuradio-runtime/include/gnuradio/flowgraph.h
@@ -255,7 +255,7 @@ public:
     basic_block_vector_t topological_sort(basic_block_vector_t& blocks);
 
     /*!
-     * \brief Calculate vector of disjoint graph partions
+     * \brief Calculate vector of disjoint graph partitions
      * \return vector of disjoint vectors of topologically sorted blocks
      */
     std::vector<basic_block_vector_t> partition();
diff --git a/gnuradio-runtime/lib/math/random.cc b/gnuradio-runtime/lib/math/random.cc
index 223e9141f..4997f95a7 100644
--- a/gnuradio-runtime/lib/math/random.cc
+++ b/gnuradio-runtime/lib/math/random.cc
@@ -56,7 +56,7 @@ random::random(unsigned int seed, int min_integer, int max_integer)
     d_integer_dis = new boost::uniform_int<>(0, 1); // another "mapper"
     d_generator = NULL; // MUST be reinstantiated on every call to reseed.
     d_integer_generator =
-        NULL; // MUST be reinstantiated on everytime d_rng or d_integer_dis is changed.
+        NULL;     // MUST be reinstantiated whenever d_rng or d_integer_dis is changed.
     reseed(seed); // set seed for random number generator
     set_integer_limits(min_integer, max_integer);
 }
diff --git a/gnuradio-runtime/lib/tpb_thread_body.cc b/gnuradio-runtime/lib/tpb_thread_body.cc
index d64fd2f62..85b497812 100644
--- a/gnuradio-runtime/lib/tpb_thread_body.cc
+++ b/gnuradio-runtime/lib/tpb_thread_body.cc
@@ -88,7 +88,7 @@ tpb_thread_body::tpb_thread_body(block_sptr block,
         gr::thread::set_thread_priority(d->thread, block->thread_priority());
     }
 
-    // make sure our block isnt finished
+    // make sure our block isn't finished
     block->clear_finished();
 
     start_sync->wait();
diff --git a/gr-blocks/include/gnuradio/blocks/sample_and_hold.h b/gr-blocks/include/gnuradio/blocks/sample_and_hold.h
index 71230e719..f2ceb7a90 100644
--- a/gr-blocks/include/gnuradio/blocks/sample_and_hold.h
+++ b/gr-blocks/include/gnuradio/blocks/sample_and_hold.h
@@ -37,7 +37,7 @@ namespace blocks {
  *
  * \details
  * Samples the data stream (input stream 0) and holds the value if
- * the control signal is 1 (intput stream 1).
+ * the control signal is 1 (input stream 1).
  */
 template <class T>
 class BLOCKS_API sample_and_hold : virtual public sync_block
diff --git a/gr-blocks/include/gnuradio/blocks/threshold_ff.h b/gr-blocks/include/gnuradio/blocks/threshold_ff.h
index 1fb9b2516..67896bb48 100644
--- a/gr-blocks/include/gnuradio/blocks/threshold_ff.h
+++ b/gr-blocks/include/gnuradio/blocks/threshold_ff.h
@@ -35,7 +35,7 @@ namespace blocks {
  *
  * \details
  * Test the incoming signal against a threshold. If the signal
- * excedes the \p hi value, it will output a 1 until the signal
+ * exceeds the \p hi value, it will output a 1 until the signal
  * falls below the \p lo value.
  */
 class BLOCKS_API threshold_ff : virtual public sync_block
diff --git a/gr-blocks/python/blocks/qa_file_source.py b/gr-blocks/python/blocks/qa_file_source.py
index 3829386e3..61987b550 100644
--- a/gr-blocks/python/blocks/qa_file_source.py
+++ b/gr-blocks/python/blocks/qa_file_source.py
@@ -61,7 +61,7 @@ class test_file_source(gr_unittest.TestCase):
 
     def test_file_source_no_such_file(self):
         """
-        Try to open a non-existant file and verify exception is thrown.
+        Try to open a non-existent file and verify exception is thrown.
         """
         try:
             _ = blocks.file_source(gr.sizeof_float, "___no_such_file___")
diff --git a/gr-digital/include/gnuradio/digital/cma_equalizer_cc.h b/gr-digital/include/gnuradio/digital/cma_equalizer_cc.h
index e4973c28f..966d1bd4f 100644
--- a/gr-digital/include/gnuradio/digital/cma_equalizer_cc.h
+++ b/gr-digital/include/gnuradio/digital/cma_equalizer_cc.h
@@ -54,7 +54,7 @@ public:
     /*!
      * Make a CMA Equalizer block
      *
-     * \param num_taps Numer of taps in the equalizer (channel size)
+     * \param num_taps Number of taps in the equalizer (channel size)
      * \param modulus Modulus of the modulated signals
      * \param mu Gain of the update loop
      * \param sps Number of samples per symbol of the input signal
diff --git a/gr-digital/include/gnuradio/digital/constellation.h b/gr-digital/include/gnuradio/digital/constellation.h
index 0be3d6873..debc5f4a7 100644
--- a/gr-digital/include/gnuradio/digital/constellation.h
+++ b/gr-digital/include/gnuradio/digital/constellation.h
@@ -225,7 +225,7 @@ protected:
 /*                                                          */
 /************************************************************/
 
-/*! \brief Calculate Euclidian distance for any constellation
+/*! \brief Calculate Euclidean distance for any constellation
  *  \ingroup digital
  *
  * \details
diff --git a/gr-digital/include/gnuradio/digital/header_format_crc.h b/gr-digital/include/gnuradio/digital/header_format_crc.h
index d68af351f..ab3892598 100644
--- a/gr-digital/include/gnuradio/digital/header_format_crc.h
+++ b/gr-digital/include/gnuradio/digital/header_format_crc.h
@@ -72,7 +72,7 @@ public:
      * Uses the following header format:
      *  - Bits 0-11: The packet length (what was stored in the tag with key \p
      * len_tag_key)
-     *  - Bits 12-23: The header number (counts up everytime this function is called)
+     *  - Bits 12-23: The header number (counts up every time this function is called)
      *  - Bit 24-31: 8-Bit CRC
      */
     virtual bool format(int nbytes_in,
diff --git a/gr-digital/include/gnuradio/digital/header_format_ofdm.h b/gr-digital/include/gnuradio/digital/header_format_ofdm.h
index 7e9d62ac7..04bc1cb11 100644
--- a/gr-digital/include/gnuradio/digital/header_format_ofdm.h
+++ b/gr-digital/include/gnuradio/digital/header_format_ofdm.h
@@ -76,7 +76,7 @@ public:
      * Uses the following header format:
      *  - Bits 0-11: The packet length (what was stored in the tag with key \p
      * len_tag_key)
-     *  - Bits 12-23: The header number (counts up everytime this function is called)
+     *  - Bits 12-23: The header number (counts up every time this function is called)
      *  - Bit 24-31: 8-Bit CRC
      */
     virtual bool format(int nbytes_in,
diff --git a/gr-digital/include/gnuradio/digital/packet_header_default.h b/gr-digital/include/gnuradio/digital/packet_header_default.h
index ad1290458..77cbbbbea 100644
--- a/gr-digital/include/gnuradio/digital/packet_header_default.h
+++ b/gr-digital/include/gnuradio/digital/packet_header_default.h
@@ -71,7 +71,7 @@ public:
      *
      * Uses the following header format:
      * Bits 0-11: The packet length (what was stored in the tag with key \p len_tag_key)
-     * Bits 12-23: The header number (counts up everytime this function is called)
+     * Bits 12-23: The header number (counts up every time this function is called)
      * Bit 24-31: 8-Bit CRC
      * All other bits: Are set to zero
      *
diff --git a/gr-digital/include/gnuradio/digital/symbol_sync_cc.h b/gr-digital/include/gnuradio/digital/symbol_sync_cc.h
index b2e2f9a58..aee9aa95c 100644
--- a/gr-digital/include/gnuradio/digital/symbol_sync_cc.h
+++ b/gr-digital/include/gnuradio/digital/symbol_sync_cc.h
@@ -236,7 +236,7 @@ public:
      *
      * Damping factor of the 2nd order loop transfer function.
      * When a new damping factor is set, the gains, alpha and beta,
-     * of the loop are automatcally recalculated.
+     * of the loop are automatically recalculated.
      *
      * \param zeta    loop damping factor
      */
@@ -255,7 +255,7 @@ public:
      * properly from the desired input loop bandwidth and damping factor.
      *
      * When a new ted_gain is set, the gains, alpha and beta,
-     * of the loop are automatcally recalculated.
+     * of the loop are automatically recalculated.
      *
      * \param ted_gain    expected gain of the timing error detector
      */
diff --git a/gr-digital/include/gnuradio/digital/symbol_sync_ff.h b/gr-digital/include/gnuradio/digital/symbol_sync_ff.h
index b5f9cfa51..9969de161 100644
--- a/gr-digital/include/gnuradio/digital/symbol_sync_ff.h
+++ b/gr-digital/include/gnuradio/digital/symbol_sync_ff.h
@@ -236,7 +236,7 @@ public:
      *
      * Damping factor of the 2nd order loop transfer function.
      * When a new damping factor is set, the gains, alpha and beta,
-     * of the loop are automatcally recalculated.
+     * of the loop are automatically recalculated.
      *
      * \param zeta    loop damping factor
      */
@@ -255,7 +255,7 @@ public:
      * properly from the desired input loop bandwidth and damping factor.
      *
      * When a new ted_gain is set, the gains, alpha and beta,
-     * of the loop are automatcally recalculated.
+     * of the loop are automatically recalculated.
      *
      * \param ted_gain    expected gain of the timing error detector
      */
diff --git a/gr-digital/lib/clock_tracking_loop.h b/gr-digital/lib/clock_tracking_loop.h
index 3d5fa9887..776deb459 100644
--- a/gr-digital/lib/clock_tracking_loop.h
+++ b/gr-digital/lib/clock_tracking_loop.h
@@ -492,7 +492,7 @@ public:
      * properly from the desired input loop bandwidth and damping factor.
      *
      * When a new ted_gain is set, the gains, alpha and beta,
-     * of the loop are automatcally recalculated.
+     * of the loop are automatically recalculated.
      *
      * \param ted_gain    expected gain of the timing error detector
      */
diff --git a/gr-digital/lib/constellation_receiver_cb_impl.h b/gr-digital/lib/constellation_receiver_cb_impl.h
index 45e3755e4..3a17839b2 100644
--- a/gr-digital/lib/constellation_receiver_cb_impl.h
+++ b/gr-digital/lib/constellation_receiver_cb_impl.h
@@ -69,7 +69,7 @@ private:
      * Message handler port to update the phase of the rotator. The
      * phase should be a real number (float or double) that is added
      * to the current phase. So we can rotate the constellation by
-     * 90 degress by passing a value of pmt::from_double(GR_M_PI/2).
+     * 90 degrees by passing a value of pmt::from_double(GR_M_PI/2).
      */
     void handle_rotate_phase(pmt::pmt_t rotation);
 
diff --git a/gr-filter/lib/pm_remez.cc b/gr-filter/lib/pm_remez.cc
index 6cb45d692..bf682cb93 100644
--- a/gr-filter/lib/pm_remez.cc
+++ b/gr-filter/lib/pm_remez.cc
@@ -310,7 +310,7 @@ static double compute_A(double freq, int r, double ad[], double x[], double y[])
  * int gridsize  - Number of elements in the dense frequency grid
  * double Grid[] - Frequencies on the dense grid [gridsize]
  * double D[]    - Desired response on the dense grid [gridsize]
- * double W[]    - Weight function on the desnse grid [gridsize]
+ * double W[]    - Weight function on the dense grid [gridsize]
  *
  * OUTPUT:
  * -------
diff --git a/gr-qtgui/include/gnuradio/qtgui/plot_raster.h b/gr-qtgui/include/gnuradio/qtgui/plot_raster.h
index c9718db5a..578e24873 100644
--- a/gr-qtgui/include/gnuradio/qtgui/plot_raster.h
+++ b/gr-qtgui/include/gnuradio/qtgui/plot_raster.h
@@ -39,7 +39,7 @@ class QwtColorMap;
  * \ingroup qtgui_blk
  *
  * \details
- * A time raster displays threedimenional data, where the 3rd dimension
+ * A time raster displays three-dimensional data, where the 3rd dimension
  * (the intensity) is displayed using colors. The colors are calculated
  * from the values using a color map.
  *
diff --git a/gr-qtgui/include/gnuradio/qtgui/plot_waterfall.h b/gr-qtgui/include/gnuradio/qtgui/plot_waterfall.h
index df6dfe773..93af93477 100644
--- a/gr-qtgui/include/gnuradio/qtgui/plot_waterfall.h
+++ b/gr-qtgui/include/gnuradio/qtgui/plot_waterfall.h
@@ -39,7 +39,7 @@ class QwtColorMap;
  * \ingroup qtgui_blk
  *
  * \details
- * A waterfall displays threedimenional data, where the 3rd dimension
+ * A waterfall displays three-dimensional data, where the 3rd dimension
  * (the intensity) is displayed using colors. The colors are calculated
  * from the values using a color map.
  *
diff --git a/grc/core/FlowGraph.py b/grc/core/FlowGraph.py
index 723fc23cd..c4ca408e5 100644
--- a/grc/core/FlowGraph.py
+++ b/grc/core/FlowGraph.py
@@ -268,7 +268,7 @@ class FlowGraph(Element):
                 value = eval(variable_block.value, namespace, variable_block.namespace)
                 namespace[variable_block.name] = value
                 self.namespace.update(namespace) # rewrite on subsequent blocks depends on an updated self.namespace 
-            except TypeError: #Type Errors may happen, but that desn't matter as they are displayed in the gui
+            except TypeError: #Type Errors may happen, but that doesn't matter as they are displayed in the gui
                 pass
             except Exception:
                 log.exception('Failed to evaluate variable block {0}'.format(variable_block.name), exc_info=True)
-- 
2.27.0

From b8113a08842f2a4ede304b6580c10436dc648b3c Mon Sep 17 00:00:00 2001
From: Jeff Long <willcode4@gmail.com>
Date: Wed, 25 Nov 2020 09:44:55 -0500
Subject: [PATCH] Boost placeholder scope required (using boost::placeholders)

---
 gnuradio-runtime/include/gnuradio/basic_block.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gnuradio-runtime/include/gnuradio/basic_block.h b/gnuradio-runtime/include/gnuradio/basic_block.h
index 1d31e2e9b..0aace8f38 100644
--- a/gnuradio-runtime/include/gnuradio/basic_block.h
+++ b/gnuradio-runtime/include/gnuradio/basic_block.h
@@ -41,7 +41,7 @@
 #include <gnuradio/rpcregisterhelpers.h>
 
 namespace gr {
-
+using namespace boost::placeholders;
 /*!
  * \brief The abstract base class for all signal processing blocks.
  * \ingroup internal
-- 
2.27.0

From 528dc0393e3df555bb3ee0ebc7fe2e6d1131acbe Mon Sep 17 00:00:00 2001
From: Jeff Long <willcode4@gmail.com>
Date: Wed, 25 Nov 2020 11:05:56 -0500
Subject: [PATCH] boost bind: make placeholder namespace conditional on boost
 version

---
 gnuradio-runtime/include/gnuradio/basic_block.h | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/gnuradio-runtime/include/gnuradio/basic_block.h b/gnuradio-runtime/include/gnuradio/basic_block.h
index 0aace8f38..c57c1cf55 100644
--- a/gnuradio-runtime/include/gnuradio/basic_block.h
+++ b/gnuradio-runtime/include/gnuradio/basic_block.h
@@ -33,6 +33,9 @@
 #include <boost/foreach.hpp>
 #include <boost/function.hpp>
 #include <boost/thread/condition_variable.hpp>
+#if (BOOST_VERSION >= 106000)
+#include <boost/bind/bind.hpp>
+#endif
 #include <deque>
 #include <iostream>
 #include <map>
@@ -41,7 +44,9 @@
 #include <gnuradio/rpcregisterhelpers.h>
 
 namespace gr {
+#if (BOOST_VERSION >= 106000)
 using namespace boost::placeholders;
+#endif
 /*!
  * \brief The abstract base class for all signal processing blocks.
  * \ingroup internal
-- 
2.27.0

From e14a3865062f1c3c90cacb6b1c80b34cada31c0b Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Sat, 31 Oct 2020 16:20:41 -0700
Subject: [PATCH] cmake: Remove Policy CMP0075 CMake warning.

---
 cmake/Modules/GrMiscUtils.cmake | 1 +
 1 file changed, 1 insertion(+)

diff --git a/cmake/Modules/GrMiscUtils.cmake b/cmake/Modules/GrMiscUtils.cmake
index 853afaa8e..8a55da83c 100644
--- a/cmake/Modules/GrMiscUtils.cmake
+++ b/cmake/Modules/GrMiscUtils.cmake
@@ -225,4 +225,5 @@ set(CMAKE_REQUIRED_LIBRARIES -lpthread)
         } " HAVE_SCHED_SETSCHEDULER
     )
     GR_ADD_COND_DEF(HAVE_SCHED_SETSCHEDULER)
+set(CMAKE_REQUIRED_LIBRARIES)
 endmacro(GR_CHECK_LINUX_SCHED_AVAIL)
-- 
2.27.0

From baba6d9ffd43e8e461997330af1c2ea9f2a05d4c Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Sat, 31 Oct 2020 16:24:21 -0700
Subject: [PATCH] cmake: Remove "find_package_handle_standard_args" warnings.

---
 CMakeLists.txt                                             | 1 +
 cmake/Modules/FindCodec2.cmake                             | 6 ++++--
 cmake/Modules/FindFFTW3f.cmake                             | 4 +++-
 cmake/Modules/FindGMP.cmake                                | 4 +++-
 cmake/Modules/FindGSL.cmake                                | 4 +++-
 cmake/Modules/FindGSM.cmake                                | 6 ++++--
 cmake/Modules/FindMPIR.cmake                               | 4 +++-
 cmake/Modules/FindPORTAUDIO.cmake                          | 4 +++-
 cmake/Modules/FindTHRIFT.cmake                             | 4 +++-
 cmake/Modules/FindZeroMQ.cmake                             | 6 ++++--
 gr-utils/python/modtool/templates/gr-newmod/CMakeLists.txt | 1 +
 11 files changed, 32 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 285bf075d..07040edf2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -493,6 +493,7 @@ list(APPEND GR_TEST_PYTHON_DIRS
 
 # gnuradio-runtime/include/gnuradio/block.h needs a define to tell it which
 # multiprecision arithmetic library header to include
+include(FindPkgConfig)
 find_package(MPLIB)
 add_definitions(${MPLIB_DEFINITIONS})
 
diff --git a/cmake/Modules/FindCodec2.cmake b/cmake/Modules/FindCodec2.cmake
index f33de4dcd..778feb75a 100644
--- a/cmake/Modules/FindCodec2.cmake
+++ b/cmake/Modules/FindCodec2.cmake
@@ -21,7 +21,9 @@
 # Check for system libcodec2 #
 ##############################
 
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+  INCLUDE(FindPkgConfig)
+endif()
 INCLUDE(FindPackageHandleStandardArgs)
 
 pkg_check_modules(LIBCODEC2_PKG QUIET codec2)
@@ -75,7 +77,7 @@ if(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
   endif()
 endif(LIBCODEC2_INCLUDE_DIR AND LIBCODEC2_LIBRARIES)
 
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBCODEC2 DEFAULT_MSG LIBCODEC2_LIBRARIES LIBCODEC2_INCLUDE_DIRS)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(Codec2 DEFAULT_MSG LIBCODEC2_LIBRARIES LIBCODEC2_INCLUDE_DIRS)
 mark_as_advanced(LIBCODEC2_INCLUDE_DIR LIBCODEC2_LIBRARIES)
 
 if (LIBCODEC2_FOUND AND NOT TARGET CODEC2::CODEC2)
diff --git a/cmake/Modules/FindFFTW3f.cmake b/cmake/Modules/FindFFTW3f.cmake
index c375c1882..3d493f89a 100644
--- a/cmake/Modules/FindFFTW3f.cmake
+++ b/cmake/Modules/FindFFTW3f.cmake
@@ -3,7 +3,9 @@
 
 # Find single-precision (float) version of FFTW3
 
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    INCLUDE(FindPkgConfig)
+endif()
 PKG_CHECK_MODULES(PC_FFTW3f "fftw3f >= 3.0")
 
 FIND_PATH(
diff --git a/cmake/Modules/FindGMP.cmake b/cmake/Modules/FindGMP.cmake
index 8782334e8..bb3ce4805 100644
--- a/cmake/Modules/FindGMP.cmake
+++ b/cmake/Modules/FindGMP.cmake
@@ -1,4 +1,6 @@
-include(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    include(FindPkgConfig)
+endif()
 pkg_check_modules(PC_GMP "gmp")
 
 set(GMP_DEFINITIONS ${PC_GMP_CFLAGS_OTHER})
diff --git a/cmake/Modules/FindGSL.cmake b/cmake/Modules/FindGSL.cmake
index 60b0d8304..1776eee59 100644
--- a/cmake/Modules/FindGSL.cmake
+++ b/cmake/Modules/FindGSL.cmake
@@ -16,7 +16,9 @@
 #  GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix
 #  GSL_EXE_LINKER_FLAGS = rpath on Unix
 
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    INCLUDE(FindPkgConfig)
+endif()
 PKG_CHECK_MODULES(GSL "gsl >= 1.10")
 IF(GSL_FOUND)
     set(GSL_LIBRARY_DIRS ${GSL_LIBDIR})
diff --git a/cmake/Modules/FindGSM.cmake b/cmake/Modules/FindGSM.cmake
index 242b4f4a0..9ddad62c5 100644
--- a/cmake/Modules/FindGSM.cmake
+++ b/cmake/Modules/FindGSM.cmake
@@ -21,7 +21,9 @@
 # Check for system libgsm #
 ###########################
 
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+  INCLUDE(FindPkgConfig)
+endif()
 INCLUDE(FindPackageHandleStandardArgs)
 
 pkg_check_modules(LIBGSM_PKG QUIET gsm)
@@ -48,7 +50,7 @@ if(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
   set(LIBGSM_LIBRARIES ${LIBGSM_LIBRARIES} ${LIBGSM_LIBRARY})
 endif(LIBGSM_INCLUDE_DIR AND LIBGSM_LIBRARIES)
 
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(LIBGSM DEFAULT_MSG LIBGSM_LIBRARIES LIBGSM_INCLUDE_DIRS)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(GSM DEFAULT_MSG LIBGSM_LIBRARIES LIBGSM_INCLUDE_DIRS)
 mark_as_advanced(LIBGSM_INCLUDE_DIR LIBGSM_LIBRARIES)
 
 if (LIBGSM_FOUND AND NOT TARGET GSM::GSM)
diff --git a/cmake/Modules/FindMPIR.cmake b/cmake/Modules/FindMPIR.cmake
index 647b3815a..1346af4d2 100644
--- a/cmake/Modules/FindMPIR.cmake
+++ b/cmake/Modules/FindMPIR.cmake
@@ -1,4 +1,6 @@
-include(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    include(FindPkgConfig)
+endif()
 pkg_check_modules(PC_MPIR "mpir >= 3.0")
 
 set(MPIR_DEFINITIONS ${PC_MPIR_CFLAGS_OTHER})
diff --git a/cmake/Modules/FindPORTAUDIO.cmake b/cmake/Modules/FindPORTAUDIO.cmake
index ab18c6c1d..b4fc31cc2 100644
--- a/cmake/Modules/FindPORTAUDIO.cmake
+++ b/cmake/Modules/FindPORTAUDIO.cmake
@@ -5,7 +5,9 @@
 #  PORTAUDIO_INCLUDE_DIRS - the Portaudio include directory
 #  PORTAUDIO_LIBRARIES - Link these to use Portaudio
 
-include(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+  include(FindPkgConfig)
+endif()
 pkg_check_modules(PC_PORTAUDIO portaudio-2.0)
 
 find_path(PORTAUDIO_INCLUDE_DIRS
diff --git a/cmake/Modules/FindTHRIFT.cmake b/cmake/Modules/FindTHRIFT.cmake
index f9b4f85d8..7422a566f 100644
--- a/cmake/Modules/FindTHRIFT.cmake
+++ b/cmake/Modules/FindTHRIFT.cmake
@@ -1,4 +1,6 @@
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+  INCLUDE(FindPkgConfig)
+endif()
 PKG_CHECK_MODULES(PC_THRIFT thrift)
 
 set(THRIFT_REQ_VERSION "0.9.2")
diff --git a/cmake/Modules/FindZeroMQ.cmake b/cmake/Modules/FindZeroMQ.cmake
index 7be57d932..5189c6d76 100644
--- a/cmake/Modules/FindZeroMQ.cmake
+++ b/cmake/Modules/FindZeroMQ.cmake
@@ -1,4 +1,6 @@
-INCLUDE(FindPkgConfig)
+if(NOT PKG_CONFIG_FOUND)
+    INCLUDE(FindPkgConfig)
+endif()
 PKG_CHECK_MODULES(PC_ZEROMQ "libzmq")
 
 FIND_PATH(ZEROMQ_INCLUDE_DIRS
@@ -22,7 +24,7 @@ FIND_LIBRARY(ZEROMQ_LIBRARIES
 )
 
 INCLUDE(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(ZEROMQ DEFAULT_MSG ZEROMQ_LIBRARIES ZEROMQ_INCLUDE_DIRS)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(ZeroMQ DEFAULT_MSG ZEROMQ_LIBRARIES ZEROMQ_INCLUDE_DIRS)
 MARK_AS_ADVANCED(ZEROMQ_LIBRARIES ZEROMQ_INCLUDE_DIRS)
 
 if (ZEROMQ_FOUND AND NOT TARGET ZEROMQ::ZEROMQ)
diff --git a/gr-utils/python/modtool/templates/gr-newmod/CMakeLists.txt b/gr-utils/python/modtool/templates/gr-newmod/CMakeLists.txt
index f4e127bcd..c27a1555a 100644
--- a/gr-utils/python/modtool/templates/gr-newmod/CMakeLists.txt
+++ b/gr-utils/python/modtool/templates/gr-newmod/CMakeLists.txt
@@ -85,6 +85,7 @@ ENDIF()
 ########################################################################
 # Install directories
 ########################################################################
+include(FindPkgConfig)
 find_package(Gnuradio "3.8" REQUIRED)
 include(GrVersion)
 
-- 
2.27.0

From 3b0825655ca19525e69726e1d43d69497d10d3c9 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Sat, 31 Oct 2020 16:27:25 -0700
Subject: [PATCH] docs: Exclude gr-newmod from Doxygen

---
 docs/doxygen/Doxyfile.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/docs/doxygen/Doxyfile.in b/docs/doxygen/Doxyfile.in
index bd60d7cc3..5f75e9d08 100644
--- a/docs/doxygen/Doxyfile.in
+++ b/docs/doxygen/Doxyfile.in
@@ -745,7 +745,7 @@ EXCLUDE                = @abs_top_srcdir@/volk \
                          @abs_top_builddir@/grc \
                          @abs_top_builddir@/_CPack_Packages \
                          @abs_top_srcdir@/cmake \
-                         @abs_top_srcdir@/gr-utils/python/modtool/gr-newmod \
+                         @abs_top_srcdir@/gr-utils/python/modtool/templates/gr-newmod \
                          @abs_top_srcdir@/docs/doxygen/doxyxml/example \
                          @abs_top_srcdir@/docs/sphinx \
                          @abs_top_srcdir@/gnuradio-runtime/lib \
-- 
2.27.0

From 7beac060722a665219a9299701571b4b13a98b40 Mon Sep 17 00:00:00 2001
From: Matt Mills <mmills@2bn.net>
Date: Tue, 27 Oct 2020 16:11:06 -0600
Subject: [PATCH] zeromq: Add ZMQ_LINGER value to prevent infinite block

Backport of #3866 to maint-3.8
Closes: #1132
Per the ZMQ documentation update, the docs originally listed the default
of ZMQ_LINGER as 30 seconds, however the real default was -1.

This caused the behavior of blocking indefinitely on top_block.stop()
while the socket waited for abandoned messages to be read by a client.

Ideally this value should be configurable, I've opened #3872 as follow up.
---
 gr-zeromq/lib/base_impl.cc | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/gr-zeromq/lib/base_impl.cc b/gr-zeromq/lib/base_impl.cc
index 1e3b68321..e6100a8ef 100644
--- a/gr-zeromq/lib/base_impl.cc
+++ b/gr-zeromq/lib/base_impl.cc
@@ -28,6 +28,10 @@
 #include "tag_headers.h"
 #include <gnuradio/io_signature.h>
 
+namespace {
+constexpr int LINGER_DEFAULT = 1000; // 1 second.
+}
+
 namespace gr {
 namespace zeromq {
 
@@ -82,6 +86,9 @@ base_sink_impl::base_sink_impl(int type,
 #endif
     }
 
+    /* Set ZMQ_LINGER so socket won't infinitely block during teardown */
+    d_socket->setsockopt(ZMQ_LINGER, &LINGER_DEFAULT, sizeof(LINGER_DEFAULT));
+
     /* Bind */
     d_socket->bind(address);
 }
@@ -142,6 +149,9 @@ base_source_impl::base_source_impl(int type,
 #endif
     }
 
+    /* Set ZMQ_LINGER so socket won't infinitely block during teardown */
+    d_socket->setsockopt(ZMQ_LINGER, &LINGER_DEFAULT, sizeof(LINGER_DEFAULT));
+
     /* Connect */
     d_socket->connect(address);
 }
-- 
2.27.0

From 4fbfe3c1448e79cc3e71e2eeb15594d68a01ba50 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Wed, 2 Dec 2020 03:12:19 -0800
Subject: [PATCH] gr-blocks: Fix file source block large file handling for
 Windows.

---
 gr-blocks/lib/file_source_impl.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gr-blocks/lib/file_source_impl.cc b/gr-blocks/lib/file_source_impl.cc
index ee8f08d98..73bbda975 100644
--- a/gr-blocks/lib/file_source_impl.cc
+++ b/gr-blocks/lib/file_source_impl.cc
@@ -37,9 +37,9 @@
 #ifdef _MSC_VER
 #define GR_FSEEK _fseeki64
 #define GR_FTELL _ftelli64
-#define GR_FSTAT _fstat
+#define GR_FSTAT _fstati64
 #define GR_FILENO _fileno
-#define GR_STAT _stat
+#define GR_STAT _stati64
 #define S_ISREG(m) (((m)&S_IFMT) == S_IFREG)
 #else
 #define GR_FSEEK fseeko
-- 
2.27.0

From a08403953e446f4b1bca0f3ae6f045a7a8fdc954 Mon Sep 17 00:00:00 2001
From: Thomas Habets <habets@google.com>
Date: Sat, 12 Dec 2020 13:51:32 +0000
Subject: [PATCH] gr-digital: Update docs for MPSK SNR Estimator

---
 gr-digital/include/gnuradio/digital/mpsk_snr_est_cc.h      | 5 ++++-
 gr-digital/include/gnuradio/digital/probe_mpsk_snr_est_c.h | 5 ++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/gr-digital/include/gnuradio/digital/mpsk_snr_est_cc.h b/gr-digital/include/gnuradio/digital/mpsk_snr_est_cc.h
index 8bab217b3..07e0d36e7 100644
--- a/gr-digital/include/gnuradio/digital/mpsk_snr_est_cc.h
+++ b/gr-digital/include/gnuradio/digital/mpsk_snr_est_cc.h
@@ -48,6 +48,8 @@ namespace digital {
  * designed and proven theoretically under AWGN conditions; some
  * amount of error should be assumed and/or estimated for real
  * channel conditions.
+ *
+ * The estimator is normally placed before clock recovery.
  */
 class DIGITAL_API mpsk_snr_est_cc : virtual public sync_block
 {
@@ -62,7 +64,8 @@ public:
      *  \param tag_nsamples: after this many samples, a tag containing
      *  the SNR (key='snr') will be sent
      *  \param alpha: the update rate of internal running average
-     *  calculations
+     *  calculations. Needs to be between 0 and 1, where higher value
+     *  adjusts faster to new data.
      */
     static sptr make(snr_est_type_t type, int tag_nsamples = 10000, double alpha = 0.001);
 
diff --git a/gr-digital/include/gnuradio/digital/probe_mpsk_snr_est_c.h b/gr-digital/include/gnuradio/digital/probe_mpsk_snr_est_c.h
index eecfa8176..8483daf27 100644
--- a/gr-digital/include/gnuradio/digital/probe_mpsk_snr_est_c.h
+++ b/gr-digital/include/gnuradio/digital/probe_mpsk_snr_est_c.h
@@ -55,6 +55,8 @@ namespace digital {
  *
  * Some calibration is required to convert dBx of the signal and
  * noise power estimates to real measurements, such as dBm.
+ *
+ * The estimator is normally placed before clock recovery.
  */
 class DIGITAL_API probe_mpsk_snr_est_c : virtual public sync_block
 {
@@ -71,7 +73,8 @@ public:
      *  \param msg_nsamples: [not implemented yet] after this many
      *   samples, a message containing the SNR (key='snr') will be sent
      *  \param alpha: the update rate of internal running average
-     *   calculations.
+     *   calculations. Needs to be between 0 and 1, where higher value
+     *   adjusts faster to new data.
      */
     static sptr make(snr_est_type_t type, int msg_nsamples = 10000, double alpha = 0.001);
 
-- 
2.27.0

From 07bc069145c5e80297a84e591c42faa6e0fe5693 Mon Sep 17 00:00:00 2001
From: Johannes Demel <demel@ant.uni-bremen.de>
Date: Fri, 24 Jul 2020 10:20:54 +0200
Subject: [PATCH] uhd: Update possible master_clock_rate:s

A USRP block offers the option to set a `clock_rate` which in turn sets
`master_clock_rate` in UHD. There were some common options
(153.6MHz, 125MHz, 122.88MHz) missing for N310s. Now these options are added.

Instead of a separate call to `set_clock_rate`, `master_clock_rate` is
now set as part of the device address string. This behavior makes it
more consistent with UHD examples. Flowgraphs that set MCR as part of
their `device_args` option, are currently overruled if clock rate is set
too. This behavior may easily be reversed.

According to the UHD manual, X300s don't support
`set_master_clock_rate`, thus in this case it is strictly necessary to
set MCR as part of the device address string.
---
 gr-uhd/grc/gen_uhd_usrp_blocks.py | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/gr-uhd/grc/gen_uhd_usrp_blocks.py b/gr-uhd/grc/gen_uhd_usrp_blocks.py
index c200dd9c4..4b0ce6bda 100644
--- a/gr-uhd/grc/gen_uhd_usrp_blocks.py
+++ b/gr-uhd/grc/gen_uhd_usrp_blocks.py
@@ -71,8 +71,8 @@ parameters:
     label: Clock Rate (Hz)
     dtype: real
     default: 0e0
-    options: [0e0, 200e6, 184.32e6, 120e6, 30.72e6]
-    option_labels: [Default, 200 MHz, 184.32 MHz, 120 MHz, 30.72 MHz]
+    options: [0e0, 200e6, 184.32e6, 153.6e6, 125.0e6, 122.88e6, 120e6, 30.72e6]
+    option_labels: [Default, 200 MHz, 184.32 MHz, 153.6 MHz, 125 MHz, 122.88 MHz, 120 MHz, 30.72 MHz]
     hide: ${'$'}{ 'none' if clock_rate else 'part' }
 -   id: num_mboards
     label: Num Mboards
@@ -135,7 +135,11 @@ templates:
         import time
     make: |
         uhd.usrp_${sourk}(
+            ${'%'} if clock_rate():
+            ",".join((${'$'}{dev_addr}, ${'$'}{dev_args}, "master_clock_rate=${'$'}{clock_rate}")),
+            ${'%'} else:
             ",".join((${'$'}{dev_addr}, ${'$'}{dev_args})),
+            ${'%'} endif
             uhd.stream_args(
                 cpu_format="${'$'}{type}",
                 ${'%'} if otw:
@@ -204,9 +208,6 @@ templates:
         ${'%'} endif
         ${'%'} endif
         % endfor
-        ${'%'} if clock_rate():
-        self.${'$'}{id}.set_clock_rate(${'$'}{clock_rate}, uhd.ALL_MBOARDS)
-        ${'%'} endif
         self.${'$'}{id}.set_samp_rate(${'$'}{samp_rate})
         ${'%'} if sync == 'sync':
         self.${'$'}{id}.set_time_unknown_pps(uhd.time_spec())
-- 
2.27.0

From cb7f5c45a90236baf90b6808a4f7f0604ee662c2 Mon Sep 17 00:00:00 2001
From: mormj <mormjb@gmail.com>
Date: Fri, 9 Oct 2020 13:01:24 -0400
Subject: [PATCH] gr-uhd: add 61.44 and 56 MHz as master clock rates

---
 gr-uhd/grc/gen_uhd_usrp_blocks.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gr-uhd/grc/gen_uhd_usrp_blocks.py b/gr-uhd/grc/gen_uhd_usrp_blocks.py
index 4b0ce6bda..b1bbf635e 100644
--- a/gr-uhd/grc/gen_uhd_usrp_blocks.py
+++ b/gr-uhd/grc/gen_uhd_usrp_blocks.py
@@ -71,8 +71,8 @@ parameters:
     label: Clock Rate (Hz)
     dtype: real
     default: 0e0
-    options: [0e0, 200e6, 184.32e6, 153.6e6, 125.0e6, 122.88e6, 120e6, 30.72e6]
-    option_labels: [Default, 200 MHz, 184.32 MHz, 153.6 MHz, 125 MHz, 122.88 MHz, 120 MHz, 30.72 MHz]
+    options: [0e0, 200e6, 184.32e6, 153.6e6, 125.0e6, 122.88e6, 120e6, 61.44e6, 56.0e6, 30.72e6]
+    option_labels: [Default, 200 MHz, 184.32 MHz, 153.6 MHz, 125 MHz, 122.88 MHz, 120 MHz, 61.44 MHz, 56 MHz, 30.72 MHz]
     hide: ${'$'}{ 'none' if clock_rate else 'part' }
 -   id: num_mboards
     label: Num Mboards
-- 
2.27.0

From dfd31fa6b4f6d19384cfa91ef6e3cdce232f2fe7 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sat, 26 Sep 2020 21:44:53 -0400
Subject: [PATCH] more qt4 qt5 updates

Fixes: qtgui: uhd_display and usrp_display_qtgui PyQt4 dependencies #2512
---
 docs/usage-manual/(exported from wiki) QT GUI.txt | 14 +++++++-------
 gr-filter/examples/gr_filtdes_callback.py         |  4 ++--
 gr-filter/examples/gr_filtdes_live_upd.py         |  8 ++++----
 gr-filter/examples/gr_filtdes_restrict.py         |  4 ++--
 gr-qtgui/apps/uhd_display.py                      |  6 +++---
 gr-qtgui/apps/usrp_display_qtgui.py               |  2 +-
 gr-qtgui/docs/qtgui.dox                           | 10 +++++-----
 gr-qtgui/examples/pyqt_waterfall_c.py             |  2 +-
 gr-qtgui/python/qtgui/range.py.cmakein            |  2 +-
 gr-utils/python/utils/gr_plot_qt                  |  6 +++---
 gr-utils/python/utils/pyqt_filter.py              |  4 ++--
 gr-utils/python/utils/pyqt_plot.py                |  4 ++--
 gr-zeromq/examples/python/fixui4py.sh             |  2 +-
 gr-zeromq/examples/python/gui.py                  |  4 ++--
 gr-zeromq/examples/python/main_window.ui          |  2 +-
 grc/tests/resources/file3.block.yml               |  2 +-
 16 files changed, 38 insertions(+), 38 deletions(-)

diff --git a/docs/usage-manual/(exported from wiki) QT GUI.txt b/docs/usage-manual/(exported from wiki) QT GUI.txt
index fab784567..b46cdf32b 100644
--- a/docs/usage-manual/(exported from wiki) QT GUI.txt	
+++ b/docs/usage-manual/(exported from wiki) QT GUI.txt	
@@ -122,11 +122,11 @@ when asking for the delay outside of the available range.
 
 The QT GUI blocks require the following dependencies.
 
-# QtCore (version >= 4.4)
-# QtGui (version >= 4.4)
-# QtOpenGL (version >= 4.4)
-# PyQt4 for Qt4 (version >= 4.4)
-# Qwt (version >= 5.2)
+# QtCore (version >= 5.0)
+# QtGui (version >= 5.0)
+# QtOpenGL (version >= 5.0)
+# PyQt5 for Qt5 (version >= 5.0)
+# Qwt (version >= 6.1)
 
 == Usage ==
 
@@ -143,7 +143,7 @@ non-blocking call to launch the main thread of the flowgraph), the
 qapp's "exec_()" function is called. This function is a blocking call
 while the GUI is alive.
 
-from PyQt4 import Qt
+from PyQt5 import Qt
 from gnuradio import qtgui
 import sys, sip
  
@@ -279,4 +279,4 @@ share/gnuradio/examples/qt-gui/dark.qss.</text>
       <sha1>6p0evs1odganpw5pf993ifhtdncao90</sha1>
     </revision>
   </page>
-</mediawiki>
\ No newline at end of file
+</mediawiki>
diff --git a/gr-filter/examples/gr_filtdes_callback.py b/gr-filter/examples/gr_filtdes_callback.py
index d99edffc4..a6ac37c8c 100644
--- a/gr-filter/examples/gr_filtdes_callback.py
+++ b/gr-filter/examples/gr_filtdes_callback.py
@@ -25,9 +25,9 @@ from __future__ import unicode_literals
 from gnuradio.filter import filter_design
 import sys
 try:
-    from PyQt4 import Qt, QtCore, QtGui
+    from PyQt5 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 '''
diff --git a/gr-filter/examples/gr_filtdes_live_upd.py b/gr-filter/examples/gr_filtdes_live_upd.py
index ca925eb9b..b03a7e881 100644
--- a/gr-filter/examples/gr_filtdes_live_upd.py
+++ b/gr-filter/examples/gr_filtdes_live_upd.py
@@ -1,6 +1,6 @@
 #!/usr/bin/env python
 #
-# Copyright 2012 Free Software Foundation, Inc.
+# Copyright 2012,2020 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -29,10 +29,10 @@ import sys
 
 try:
     from gnuradio import qtgui
-    from PyQt4 import QtGui, QtCore
+    from PyQt5 import QtGui, QtCore
     import sip
 except ImportError:
-    sys.stderr.write("Error: Program requires PyQt4 and gr-qtgui.\n")
+    sys.stderr.write("Error: Program requires PyQt5 and gr-qtgui.\n")
     sys.exit(1)
 
 
@@ -86,7 +86,7 @@ class my_top_block(gr.top_block):
         pyQt  = self.snk1.pyqwidget()
 
         # Wrap the pointer as a PyQt SIP object
-        # This can now be manipulated as a PyQt4.QtGui.QWidget
+        # This can now be manipulated as a PyQt5.QtGui.QWidget
         pyWin = sip.wrapinstance(pyQt, QtGui.QWidget)
         pyWin.show()
 
diff --git a/gr-filter/examples/gr_filtdes_restrict.py b/gr-filter/examples/gr_filtdes_restrict.py
index c18d4c1f0..2040fbdbb 100644
--- a/gr-filter/examples/gr_filtdes_restrict.py
+++ b/gr-filter/examples/gr_filtdes_restrict.py
@@ -25,9 +25,9 @@ from __future__ import unicode_literals
 from gnuradio.filter import filter_design
 import sys
 try:
-    from PyQt4 import Qt, QtCore, QtGui
+    from PyQt5 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 
diff --git a/gr-qtgui/apps/uhd_display.py b/gr-qtgui/apps/uhd_display.py
index bb9abfc1b..a97f30ce9 100644
--- a/gr-qtgui/apps/uhd_display.py
+++ b/gr-qtgui/apps/uhd_display.py
@@ -34,10 +34,10 @@ import sys
 
 try:
     from gnuradio import qtgui
-    from PyQt4 import QtGui, QtCore
+    from PyQt5 import QtGui, QtCore
     import sip
 except ImportError:
-    print("Error: Program requires PyQt4 and gr-qtgui.")
+    print("Error: Program requires PyQt5 and gr-qtgui.")
     sys.exit(1)
 
 try:
@@ -221,7 +221,7 @@ class my_top_block(gr.top_block):
 
         # Get the reference pointer to the SpectrumDisplayForm QWidget
         # Wrap the pointer as a PyQt SIP object
-        #     This can now be manipulated as a PyQt4.QtGui.QWidget
+        #     This can now be manipulated as a PyQt5.QtGui.QWidget
         self.pysink = sip.wrapinstance(self.snk.pyqwidget(), QtGui.QWidget)
 
         self.main_win = main_window(self.pysink, self)
diff --git a/gr-qtgui/apps/usrp_display_qtgui.py b/gr-qtgui/apps/usrp_display_qtgui.py
index 68c5d6cfb..aafb63237 100644
--- a/gr-qtgui/apps/usrp_display_qtgui.py
+++ b/gr-qtgui/apps/usrp_display_qtgui.py
@@ -8,7 +8,7 @@
 # WARNING! All changes made in this file will be lost!
 
 from __future__ import unicode_literals
-from PyQt4 import QtCore, QtGui
+from PyQt5 import QtCore, QtGui
 
 class Ui_MainWindow(object):
     def setupUi(self, MainWindow):
diff --git a/gr-qtgui/docs/qtgui.dox b/gr-qtgui/docs/qtgui.dox
index a430c5a60..6a80cb5ef 100644
--- a/gr-qtgui/docs/qtgui.dox
+++ b/gr-qtgui/docs/qtgui.dox
@@ -126,11 +126,11 @@ when asking for the delay outside of the available range.
 
 The QT GUI blocks require the following dependencies.
 
-\li QtCore (version >= 4.4)
-\li QtGui (version >= 4.4)
-\li QtOpenGL (version >= 4.4)
+\li QtCore (version >= 5.6)
+\li QtGui (version >= 5.6)
+\li QtOpenGL (version >= 5.6)
 \li PyQt5 for Qt5 (version >= 5.0)
-\li Qwt (version >= 5.2)
+\li Qwt (version >= 6.1)
 
 \section qtgui_usage Usage
 
@@ -148,7 +148,7 @@ qapp's "exec_()" function is called. This function is a blocking call
 while the GUI is alive.
 
 \code
-from PyQt4 import Qt
+from PyQt5 import Qt
 from gnuradio import qtgui
 import sys, sip
 
diff --git a/gr-qtgui/examples/pyqt_waterfall_c.py b/gr-qtgui/examples/pyqt_waterfall_c.py
index 2c183a99a..89458b7c4 100644
--- a/gr-qtgui/examples/pyqt_waterfall_c.py
+++ b/gr-qtgui/examples/pyqt_waterfall_c.py
@@ -31,7 +31,7 @@ try:
     from PyQt5 import QtWidgets, Qt
     import sip
 except ImportError:
-    sys.stderr.write("Error: Program requires PyQt4 and gr-qtgui.\n")
+    sys.stderr.write("Error: Program requires PyQt5 and gr-qtgui.\n")
     sys.exit(1)
 
 try:
diff --git a/gr-qtgui/python/qtgui/range.py.cmakein b/gr-qtgui/python/qtgui/range.py.cmakein
index 9e7fffecf..39f17a238 100755
--- a/gr-qtgui/python/qtgui/range.py.cmakein
+++ b/gr-qtgui/python/qtgui/range.py.cmakein
@@ -244,7 +244,7 @@ class RangeWidget(QtWidgets.QWidget):
 
 
 if __name__ == "__main__":
-    from PyQt4 import Qt
+    from PyQt5 import Qt
     import sys
 
     def valueChanged(frequency):
diff --git a/gr-utils/python/utils/gr_plot_qt b/gr-utils/python/utils/gr_plot_qt
index 5b9f9cf90..a5b33eed4 100755
--- a/gr-utils/python/utils/gr_plot_qt
+++ b/gr-utils/python/utils/gr_plot_qt
@@ -9,13 +9,13 @@ except ImportError:
     raise SystemExit(1)
 
 try:
-    from PyQt4 import Qt, QtCore, QtGui
+    from PyQt5 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 try:
-    import PyQt4.Qwt5 as Qwt
+    import PyQt5.Qwt5 as Qwt
 except ImportError:
     print("Please install PyQwt5 to run this script (http://pyqwt.sourceforge.net/)")
     raise SystemExit(1)
diff --git a/gr-utils/python/utils/pyqt_filter.py b/gr-utils/python/utils/pyqt_filter.py
index fac17644d..d2ece7baa 100644
--- a/gr-utils/python/utils/pyqt_filter.py
+++ b/gr-utils/python/utils/pyqt_filter.py
@@ -8,7 +8,7 @@
 # WARNING! All changes made in this file will be lost!
 
 from __future__ import unicode_literals
-from PyQt4 import QtCore, QtGui
+from PyQt5 import QtCore, QtGui
 
 class Ui_MainWindow(object):
     def setupUi(self, MainWindow):
@@ -432,5 +432,5 @@ class Ui_MainWindow(object):
         self.action_open.setShortcut(QtGui.QApplication.translate("MainWindow", "Ctrl+O", None, QtGui.QApplication.UnicodeUTF8))
 
 #from qwt_plot import QwtPlot
-from PyQt4.Qwt5 import QwtPlot
+from PyQt5.Qwt5 import QwtPlot
 
diff --git a/gr-utils/python/utils/pyqt_plot.py b/gr-utils/python/utils/pyqt_plot.py
index bec30c32a..3fc783470 100644
--- a/gr-utils/python/utils/pyqt_plot.py
+++ b/gr-utils/python/utils/pyqt_plot.py
@@ -6,7 +6,7 @@
 #
 # WARNING! All changes made in this file will be lost!
 
-from PyQt4 import QtCore, QtGui
+from PyQt5 import QtCore, QtGui
 
 try:
     _fromUtf8 = QtCore.QString.fromUtf8
@@ -268,4 +268,4 @@ class Ui_MainWindow(object):
         self.action_exit.setText(_translate("MainWindow", "E&xit", None))
         self.action_reload.setText(_translate("MainWindow", "&Reload", None))
 
-from PyQt4 import Qwt5
+from PyQt5 import Qwt5
diff --git a/gr-zeromq/examples/python/fixui4py.sh b/gr-zeromq/examples/python/fixui4py.sh
index d2978000b..a66e52e3a 100755
--- a/gr-zeromq/examples/python/fixui4py.sh
+++ b/gr-zeromq/examples/python/fixui4py.sh
@@ -1,2 +1,2 @@
 #!/bin/bash
-sed -i 's/qwt_plot.h/PyQt4.Qwt5.Qwt/' $1
+sed -i 's/qwt_plot.h/PyQt5.Qwt5.Qwt/' $1
diff --git a/gr-zeromq/examples/python/gui.py b/gr-zeromq/examples/python/gui.py
index 832392f0a..baa8e743c 100644
--- a/gr-zeromq/examples/python/gui.py
+++ b/gr-zeromq/examples/python/gui.py
@@ -28,8 +28,8 @@ from gnuradio.eng_arg import eng_float, intx
 import gui
 import sys
 import os
-from PyQt4 import Qt, QtGui, QtCore, uic
-import PyQt4.Qwt5 as Qwt
+from PyQt5 import Qt, QtGui, QtCore, uic
+import PyQt5.Qwt5 as Qwt
 from gnuradio import zeromq
 import signal
 
diff --git a/gr-zeromq/examples/python/main_window.ui b/gr-zeromq/examples/python/main_window.ui
index 14f810e67..02233f95b 100644
--- a/gr-zeromq/examples/python/main_window.ui
+++ b/gr-zeromq/examples/python/main_window.ui
@@ -191,7 +191,7 @@
   <customwidget>
    <class>QwtPlot</class>
    <extends>QFrame</extends>
-   <header>PyQt4.Qwt5.Qwt</header>
+   <header>PyQt5.Qwt5.Qwt</header>
   </customwidget>
  </customwidgets>
  <resources/>
diff --git a/grc/tests/resources/file3.block.yml b/grc/tests/resources/file3.block.yml
index 592ad94f6..42712c5eb 100644
--- a/grc/tests/resources/file3.block.yml
+++ b/grc/tests/resources/file3.block.yml
@@ -37,7 +37,7 @@ asserts:
 - ${value in (true, false)}
 
 templates:
-    imports: from PyQt4 import Qt
+    imports: from PyQt5 import Qt
     var_make: self.${id} = ${id} = ${value}
     callbacks:
     - self.set_${id}(${value})
-- 
2.27.0

From f363367c43ee1384fa757ee99aaade0a360e7215 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcus=20M=C3=BCller?= <mmueller@gnuradio.org>
Date: Fri, 18 Dec 2020 18:22:53 +0100
Subject: [PATCH] Revert "more qt4 qt5 updates": Can't unceremonously bump deps
 on maint

This reverts commit dfd31fa6b4f6d19384cfa91ef6e3cdce232f2fe7.
---
 docs/usage-manual/(exported from wiki) QT GUI.txt | 14 +++++++-------
 gr-filter/examples/gr_filtdes_callback.py         |  4 ++--
 gr-filter/examples/gr_filtdes_live_upd.py         |  8 ++++----
 gr-filter/examples/gr_filtdes_restrict.py         |  4 ++--
 gr-qtgui/apps/uhd_display.py                      |  6 +++---
 gr-qtgui/apps/usrp_display_qtgui.py               |  2 +-
 gr-qtgui/docs/qtgui.dox                           | 10 +++++-----
 gr-qtgui/examples/pyqt_waterfall_c.py             |  2 +-
 gr-qtgui/python/qtgui/range.py.cmakein            |  2 +-
 gr-utils/python/utils/gr_plot_qt                  |  6 +++---
 gr-utils/python/utils/pyqt_filter.py              |  4 ++--
 gr-utils/python/utils/pyqt_plot.py                |  4 ++--
 gr-zeromq/examples/python/fixui4py.sh             |  2 +-
 gr-zeromq/examples/python/gui.py                  |  4 ++--
 gr-zeromq/examples/python/main_window.ui          |  2 +-
 grc/tests/resources/file3.block.yml               |  2 +-
 16 files changed, 38 insertions(+), 38 deletions(-)

diff --git a/docs/usage-manual/(exported from wiki) QT GUI.txt b/docs/usage-manual/(exported from wiki) QT GUI.txt
index b46cdf32b..fab784567 100644
--- a/docs/usage-manual/(exported from wiki) QT GUI.txt	
+++ b/docs/usage-manual/(exported from wiki) QT GUI.txt	
@@ -122,11 +122,11 @@ when asking for the delay outside of the available range.
 
 The QT GUI blocks require the following dependencies.
 
-# QtCore (version >= 5.0)
-# QtGui (version >= 5.0)
-# QtOpenGL (version >= 5.0)
-# PyQt5 for Qt5 (version >= 5.0)
-# Qwt (version >= 6.1)
+# QtCore (version >= 4.4)
+# QtGui (version >= 4.4)
+# QtOpenGL (version >= 4.4)
+# PyQt4 for Qt4 (version >= 4.4)
+# Qwt (version >= 5.2)
 
 == Usage ==
 
@@ -143,7 +143,7 @@ non-blocking call to launch the main thread of the flowgraph), the
 qapp's "exec_()" function is called. This function is a blocking call
 while the GUI is alive.
 
-from PyQt5 import Qt
+from PyQt4 import Qt
 from gnuradio import qtgui
 import sys, sip
  
@@ -279,4 +279,4 @@ share/gnuradio/examples/qt-gui/dark.qss.</text>
       <sha1>6p0evs1odganpw5pf993ifhtdncao90</sha1>
     </revision>
   </page>
-</mediawiki>
+</mediawiki>
\ No newline at end of file
diff --git a/gr-filter/examples/gr_filtdes_callback.py b/gr-filter/examples/gr_filtdes_callback.py
index a6ac37c8c..d99edffc4 100644
--- a/gr-filter/examples/gr_filtdes_callback.py
+++ b/gr-filter/examples/gr_filtdes_callback.py
@@ -25,9 +25,9 @@ from __future__ import unicode_literals
 from gnuradio.filter import filter_design
 import sys
 try:
-    from PyQt5 import Qt, QtCore, QtGui
+    from PyQt4 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 '''
diff --git a/gr-filter/examples/gr_filtdes_live_upd.py b/gr-filter/examples/gr_filtdes_live_upd.py
index b03a7e881..ca925eb9b 100644
--- a/gr-filter/examples/gr_filtdes_live_upd.py
+++ b/gr-filter/examples/gr_filtdes_live_upd.py
@@ -1,6 +1,6 @@
 #!/usr/bin/env python
 #
-# Copyright 2012,2020 Free Software Foundation, Inc.
+# Copyright 2012 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -29,10 +29,10 @@ import sys
 
 try:
     from gnuradio import qtgui
-    from PyQt5 import QtGui, QtCore
+    from PyQt4 import QtGui, QtCore
     import sip
 except ImportError:
-    sys.stderr.write("Error: Program requires PyQt5 and gr-qtgui.\n")
+    sys.stderr.write("Error: Program requires PyQt4 and gr-qtgui.\n")
     sys.exit(1)
 
 
@@ -86,7 +86,7 @@ class my_top_block(gr.top_block):
         pyQt  = self.snk1.pyqwidget()
 
         # Wrap the pointer as a PyQt SIP object
-        # This can now be manipulated as a PyQt5.QtGui.QWidget
+        # This can now be manipulated as a PyQt4.QtGui.QWidget
         pyWin = sip.wrapinstance(pyQt, QtGui.QWidget)
         pyWin.show()
 
diff --git a/gr-filter/examples/gr_filtdes_restrict.py b/gr-filter/examples/gr_filtdes_restrict.py
index 2040fbdbb..c18d4c1f0 100644
--- a/gr-filter/examples/gr_filtdes_restrict.py
+++ b/gr-filter/examples/gr_filtdes_restrict.py
@@ -25,9 +25,9 @@ from __future__ import unicode_literals
 from gnuradio.filter import filter_design
 import sys
 try:
-    from PyQt5 import Qt, QtCore, QtGui
+    from PyQt4 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 
diff --git a/gr-qtgui/apps/uhd_display.py b/gr-qtgui/apps/uhd_display.py
index a97f30ce9..bb9abfc1b 100644
--- a/gr-qtgui/apps/uhd_display.py
+++ b/gr-qtgui/apps/uhd_display.py
@@ -34,10 +34,10 @@ import sys
 
 try:
     from gnuradio import qtgui
-    from PyQt5 import QtGui, QtCore
+    from PyQt4 import QtGui, QtCore
     import sip
 except ImportError:
-    print("Error: Program requires PyQt5 and gr-qtgui.")
+    print("Error: Program requires PyQt4 and gr-qtgui.")
     sys.exit(1)
 
 try:
@@ -221,7 +221,7 @@ class my_top_block(gr.top_block):
 
         # Get the reference pointer to the SpectrumDisplayForm QWidget
         # Wrap the pointer as a PyQt SIP object
-        #     This can now be manipulated as a PyQt5.QtGui.QWidget
+        #     This can now be manipulated as a PyQt4.QtGui.QWidget
         self.pysink = sip.wrapinstance(self.snk.pyqwidget(), QtGui.QWidget)
 
         self.main_win = main_window(self.pysink, self)
diff --git a/gr-qtgui/apps/usrp_display_qtgui.py b/gr-qtgui/apps/usrp_display_qtgui.py
index aafb63237..68c5d6cfb 100644
--- a/gr-qtgui/apps/usrp_display_qtgui.py
+++ b/gr-qtgui/apps/usrp_display_qtgui.py
@@ -8,7 +8,7 @@
 # WARNING! All changes made in this file will be lost!
 
 from __future__ import unicode_literals
-from PyQt5 import QtCore, QtGui
+from PyQt4 import QtCore, QtGui
 
 class Ui_MainWindow(object):
     def setupUi(self, MainWindow):
diff --git a/gr-qtgui/docs/qtgui.dox b/gr-qtgui/docs/qtgui.dox
index 6a80cb5ef..a430c5a60 100644
--- a/gr-qtgui/docs/qtgui.dox
+++ b/gr-qtgui/docs/qtgui.dox
@@ -126,11 +126,11 @@ when asking for the delay outside of the available range.
 
 The QT GUI blocks require the following dependencies.
 
-\li QtCore (version >= 5.6)
-\li QtGui (version >= 5.6)
-\li QtOpenGL (version >= 5.6)
+\li QtCore (version >= 4.4)
+\li QtGui (version >= 4.4)
+\li QtOpenGL (version >= 4.4)
 \li PyQt5 for Qt5 (version >= 5.0)
-\li Qwt (version >= 6.1)
+\li Qwt (version >= 5.2)
 
 \section qtgui_usage Usage
 
@@ -148,7 +148,7 @@ qapp's "exec_()" function is called. This function is a blocking call
 while the GUI is alive.
 
 \code
-from PyQt5 import Qt
+from PyQt4 import Qt
 from gnuradio import qtgui
 import sys, sip
 
diff --git a/gr-qtgui/examples/pyqt_waterfall_c.py b/gr-qtgui/examples/pyqt_waterfall_c.py
index 89458b7c4..2c183a99a 100644
--- a/gr-qtgui/examples/pyqt_waterfall_c.py
+++ b/gr-qtgui/examples/pyqt_waterfall_c.py
@@ -31,7 +31,7 @@ try:
     from PyQt5 import QtWidgets, Qt
     import sip
 except ImportError:
-    sys.stderr.write("Error: Program requires PyQt5 and gr-qtgui.\n")
+    sys.stderr.write("Error: Program requires PyQt4 and gr-qtgui.\n")
     sys.exit(1)
 
 try:
diff --git a/gr-qtgui/python/qtgui/range.py.cmakein b/gr-qtgui/python/qtgui/range.py.cmakein
index 39f17a238..9e7fffecf 100755
--- a/gr-qtgui/python/qtgui/range.py.cmakein
+++ b/gr-qtgui/python/qtgui/range.py.cmakein
@@ -244,7 +244,7 @@ class RangeWidget(QtWidgets.QWidget):
 
 
 if __name__ == "__main__":
-    from PyQt5 import Qt
+    from PyQt4 import Qt
     import sys
 
     def valueChanged(frequency):
diff --git a/gr-utils/python/utils/gr_plot_qt b/gr-utils/python/utils/gr_plot_qt
index a5b33eed4..5b9f9cf90 100755
--- a/gr-utils/python/utils/gr_plot_qt
+++ b/gr-utils/python/utils/gr_plot_qt
@@ -9,13 +9,13 @@ except ImportError:
     raise SystemExit(1)
 
 try:
-    from PyQt5 import Qt, QtCore, QtGui
+    from PyQt4 import Qt, QtCore, QtGui
 except ImportError:
-    print("Please install PyQt5 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
+    print("Please install PyQt4 to run this script (http://www.riverbankcomputing.co.uk/software/pyqt/download)")
     raise SystemExit(1)
 
 try:
-    import PyQt5.Qwt5 as Qwt
+    import PyQt4.Qwt5 as Qwt
 except ImportError:
     print("Please install PyQwt5 to run this script (http://pyqwt.sourceforge.net/)")
     raise SystemExit(1)
diff --git a/gr-utils/python/utils/pyqt_filter.py b/gr-utils/python/utils/pyqt_filter.py
index d2ece7baa..fac17644d 100644
--- a/gr-utils/python/utils/pyqt_filter.py
+++ b/gr-utils/python/utils/pyqt_filter.py
@@ -8,7 +8,7 @@
 # WARNING! All changes made in this file will be lost!
 
 from __future__ import unicode_literals
-from PyQt5 import QtCore, QtGui
+from PyQt4 import QtCore, QtGui
 
 class Ui_MainWindow(object):
     def setupUi(self, MainWindow):
@@ -432,5 +432,5 @@ class Ui_MainWindow(object):
         self.action_open.setShortcut(QtGui.QApplication.translate("MainWindow", "Ctrl+O", None, QtGui.QApplication.UnicodeUTF8))
 
 #from qwt_plot import QwtPlot
-from PyQt5.Qwt5 import QwtPlot
+from PyQt4.Qwt5 import QwtPlot
 
diff --git a/gr-utils/python/utils/pyqt_plot.py b/gr-utils/python/utils/pyqt_plot.py
index 3fc783470..bec30c32a 100644
--- a/gr-utils/python/utils/pyqt_plot.py
+++ b/gr-utils/python/utils/pyqt_plot.py
@@ -6,7 +6,7 @@
 #
 # WARNING! All changes made in this file will be lost!
 
-from PyQt5 import QtCore, QtGui
+from PyQt4 import QtCore, QtGui
 
 try:
     _fromUtf8 = QtCore.QString.fromUtf8
@@ -268,4 +268,4 @@ class Ui_MainWindow(object):
         self.action_exit.setText(_translate("MainWindow", "E&xit", None))
         self.action_reload.setText(_translate("MainWindow", "&Reload", None))
 
-from PyQt5 import Qwt5
+from PyQt4 import Qwt5
diff --git a/gr-zeromq/examples/python/fixui4py.sh b/gr-zeromq/examples/python/fixui4py.sh
index a66e52e3a..d2978000b 100755
--- a/gr-zeromq/examples/python/fixui4py.sh
+++ b/gr-zeromq/examples/python/fixui4py.sh
@@ -1,2 +1,2 @@
 #!/bin/bash
-sed -i 's/qwt_plot.h/PyQt5.Qwt5.Qwt/' $1
+sed -i 's/qwt_plot.h/PyQt4.Qwt5.Qwt/' $1
diff --git a/gr-zeromq/examples/python/gui.py b/gr-zeromq/examples/python/gui.py
index baa8e743c..832392f0a 100644
--- a/gr-zeromq/examples/python/gui.py
+++ b/gr-zeromq/examples/python/gui.py
@@ -28,8 +28,8 @@ from gnuradio.eng_arg import eng_float, intx
 import gui
 import sys
 import os
-from PyQt5 import Qt, QtGui, QtCore, uic
-import PyQt5.Qwt5 as Qwt
+from PyQt4 import Qt, QtGui, QtCore, uic
+import PyQt4.Qwt5 as Qwt
 from gnuradio import zeromq
 import signal
 
diff --git a/gr-zeromq/examples/python/main_window.ui b/gr-zeromq/examples/python/main_window.ui
index 02233f95b..14f810e67 100644
--- a/gr-zeromq/examples/python/main_window.ui
+++ b/gr-zeromq/examples/python/main_window.ui
@@ -191,7 +191,7 @@
   <customwidget>
    <class>QwtPlot</class>
    <extends>QFrame</extends>
-   <header>PyQt5.Qwt5.Qwt</header>
+   <header>PyQt4.Qwt5.Qwt</header>
   </customwidget>
  </customwidgets>
  <resources/>
diff --git a/grc/tests/resources/file3.block.yml b/grc/tests/resources/file3.block.yml
index 42712c5eb..592ad94f6 100644
--- a/grc/tests/resources/file3.block.yml
+++ b/grc/tests/resources/file3.block.yml
@@ -37,7 +37,7 @@ asserts:
 - ${value in (true, false)}
 
 templates:
-    imports: from PyQt5 import Qt
+    imports: from PyQt4 import Qt
     var_make: self.${id} = ${id} = ${value}
     callbacks:
     - self.set_${id}(${value})
-- 
2.27.0

From d8670ae643f84159367d24b1fb48796336adf457 Mon Sep 17 00:00:00 2001
From: Huang Rui <vowstar@gmail.com>
Date: Mon, 26 Oct 2020 10:21:43 +0800
Subject: [PATCH] gr-uhd/lib/usrp_block_impl.cc: fix compile error using
 boost>=1.73
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When using boost>=1.73 and compile with uhd, it always have errors.
Fix the compile error when using uhd and gcc10: error: ‘_1’ was not declared
Bug: https://bugs.gentoo.org/751259

usrp_source_impl.cc: use lambdas instead of boost::bind
usrp_block_impl.cc:use lambdas instead of boost::bind
usrp_block_impl.h: Switch from boost::function to std::function

https://github.com/gnuradio/gnuradio/pull/3441
https://github.com/gnuradio/gnuradio/pull/3887

usrp_source_impl: fix parameter bug of original code

The usrp_block_impl::register_msg_cmd_handler uses cmd_handler_t as
handler type, but it have 3 parameters.
Fix the parameter mismatch bug and change the signature as cmd_handler_t

Signed-off-by: Huang Rui <vowstar@gmail.com>
---
 gr-uhd/lib/usrp_block_impl.cc  | 20 ++++++++++++--------
 gr-uhd/lib/usrp_block_impl.h   |  7 +++----
 gr-uhd/lib/usrp_source_impl.cc |  4 +++-
 3 files changed, 18 insertions(+), 13 deletions(-)

diff --git a/gr-uhd/lib/usrp_block_impl.cc b/gr-uhd/lib/usrp_block_impl.cc
index 4f030159f..c8e5c37e8 100644
--- a/gr-uhd/lib/usrp_block_impl.cc
+++ b/gr-uhd/lib/usrp_block_impl.cc
@@ -140,9 +140,11 @@ usrp_block_impl::usrp_block_impl(const ::uhd::device_addr_t& device_addr,
                     boost::bind(&usrp_block_impl::msg_handler_command, this, _1));
 
 // cuz we lazy:
-#define REGISTER_CMD_HANDLER(key, _handler) \
-    register_msg_cmd_handler(key,           \
-                             boost::bind(&usrp_block_impl::_handler, this, _1, _2, _3))
+#define REGISTER_CMD_HANDLER(key, _handler)                                   \
+    register_msg_cmd_handler(                                                 \
+        key, [this](const pmt::pmt_t& var, int chan, const pmt::pmt_t& msg) { \
+            this->_handler(var, chan, msg);                                   \
+        })
     // Register default command handlers:
     REGISTER_CMD_HANDLER(cmd_freq_key(), _cmd_handler_freq);
     REGISTER_CMD_HANDLER(cmd_gain_key(), _cmd_handler_gain);
@@ -257,11 +259,13 @@ bool usrp_block_impl::_check_mboard_sensors_locked()
         } else if (_dev->get_clock_source(mboard_index) == "mimo") {
             sensor_name = "mimo_locked";
         }
-        if (not _wait_for_locked_sensor(
-                get_mboard_sensor_names(mboard_index),
-                sensor_name,
-                boost::bind(
-                    &usrp_block_impl::get_mboard_sensor, this, _1, mboard_index))) {
+        if (not _wait_for_locked_sensor(get_mboard_sensor_names(mboard_index),
+                                        sensor_name,
+                                        [this, mboard_index](const std::string& name) {
+                                            return static_cast<::uhd::sensor_value_t>(
+                                                this->get_mboard_sensor(name,
+                                                                        mboard_index));
+                                        })) {
             GR_LOG_WARN(
                 d_logger,
                 boost::format(
diff --git a/gr-uhd/lib/usrp_block_impl.h b/gr-uhd/lib/usrp_block_impl.h
index 1dbc3813b..b0d3333b5 100644
--- a/gr-uhd/lib/usrp_block_impl.h
+++ b/gr-uhd/lib/usrp_block_impl.h
@@ -26,8 +26,8 @@
 #include <gnuradio/uhd/usrp_block.h>
 #include <pmt/pmt.h>
 #include <uhd/usrp/multi_usrp.hpp>
-#include <boost/bind.hpp>
 #include <boost/dynamic_bitset.hpp>
+#include <functional>
 
 
 namespace gr {
@@ -43,9 +43,8 @@ static const std::string ALL_LOS;
 class usrp_block_impl : virtual public usrp_block
 {
 public:
-    typedef boost::function<::uhd::sensor_value_t(const std::string&)> get_sensor_fn_t;
-    typedef boost::function<void(const pmt::pmt_t&, int, const pmt::pmt_t&)>
-        cmd_handler_t;
+    typedef std::function<::uhd::sensor_value_t(const std::string&)> get_sensor_fn_t;
+    typedef std::function<void(const pmt::pmt_t&, int, const pmt::pmt_t&)> cmd_handler_t;
 
     static const double LOCK_TIMEOUT;
 
diff --git a/gr-uhd/lib/usrp_source_impl.cc b/gr-uhd/lib/usrp_source_impl.cc
index a2ff0821b..65969e940 100644
--- a/gr-uhd/lib/usrp_source_impl.cc
+++ b/gr-uhd/lib/usrp_source_impl.cc
@@ -58,7 +58,9 @@ usrp_source_impl::usrp_source_impl(const ::uhd::device_addr_t& device_addr,
     _samp_rate = this->get_samp_rate();
     _samps_per_packet = 1;
     register_msg_cmd_handler(cmd_tag_key(),
-                             boost::bind(&usrp_source_impl::_cmd_handler_tag, this, _1));
+                             [this](const pmt::pmt_t& tag, const int, const pmt::pmt_t&) {
+                                 this->_cmd_handler_tag(tag);
+                             });
 }
 
 usrp_source_impl::~usrp_source_impl() {}
-- 
2.27.0

From f1204e0389b6dc35bdf31a19e17044c3e440f8fa Mon Sep 17 00:00:00 2001
From: elms <elms@freshred.net>
Date: Tue, 25 Aug 2020 07:53:30 -0700
Subject: [PATCH] Remove hardcoded GR_PYTHON_DIR
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

GrPython.cmake now sets the default correctly thanks to #2939

Closes #3729

Signed-off-by: Nick Østergaard <oe.nick@gmail.com>
---
 cmake/Modules/GnuradioConfig.cmake.in | 1 -
 1 file changed, 1 deletion(-)

diff --git a/cmake/Modules/GnuradioConfig.cmake.in b/cmake/Modules/GnuradioConfig.cmake.in
index aadfddc81..eca83d36f 100644
--- a/cmake/Modules/GnuradioConfig.cmake.in
+++ b/cmake/Modules/GnuradioConfig.cmake.in
@@ -47,7 +47,6 @@ find_dependency(Volk)
 set(ENABLE_PYTHON @ENABLE_PYTHON@ CACHE BOOL "Enable Python & SWIG")
 if(${ENABLE_PYTHON})
   set(PYTHON_EXECUTABLE @PYTHON_EXECUTABLE@)
-  set(GR_PYTHON_DIR @GR_PYTHON_DIR@ CACHE STRING "Custom OOT Python installation directory")
   include(GrPython)
 endif()
 
-- 
2.27.0

From 97bff95e35f5013da938642e101502e2bf3ef24e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nick=20=C3=98stergaard?= <oe.nick@gmail.com>
Date: Sat, 9 Jan 2021 16:29:57 +0100
Subject: [PATCH] gr-digital: Fixup GUI hints for example_corr_est
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The tab control were missing a proper GUI hint and was just placed in
the bottom corner.

Add GUI hint to it and adjust the amount of rows the other time sink
consumes to let the sliders not consume that much screen real estate.

Slightly align blocks to look nicer.

Signed-off-by: Nick Østergaard <oe.nick@gmail.com>
---
 .../examples/packet/example_corr_est.grc      | 161 ++++++++++++++----
 1 file changed, 127 insertions(+), 34 deletions(-)

diff --git a/gr-digital/examples/packet/example_corr_est.grc b/gr-digital/examples/packet/example_corr_est.grc
index bc9e5c85e..c277d7335 100644
--- a/gr-digital/examples/packet/example_corr_est.grc
+++ b/gr-digital/examples/packet/example_corr_est.grc
@@ -24,6 +24,9 @@ options:
     title: ''
     window_size: ''
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [8, 11]
     rotation: 0
     state: enabled
@@ -35,6 +38,9 @@ blocks:
     comment: ''
     value: 'list(map(lambda x: int(x), list(digital.packet_utils.default_access_code)))'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [264, 11]
     rotation: 0
     state: enabled
@@ -44,6 +50,9 @@ blocks:
     comment: ''
     value: '[0xac, 0xdd, 0xa4, 0xe2, 0xf2, 0x8c, 0x20, 0xfc]'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [504, 579]
     rotation: 0
     state: enabled
@@ -53,6 +62,9 @@ blocks:
     comment: ''
     value: '0.22'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [584, 515]
     rotation: 0
     state: enabled
@@ -62,6 +74,9 @@ blocks:
     comment: ''
     value: 1+(len(rrc_taps)-1)//2
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [768, 515]
     rotation: 0
     state: enabled
@@ -80,6 +95,9 @@ blocks:
     value: '0'
     widget: counter_slider
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [48, 563]
     rotation: 0
     state: enabled
@@ -95,6 +113,9 @@ blocks:
     sym_map: digital.psk_2()[1]
     type: calcdist
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [936, 243]
     rotation: 0
     state: enabled
@@ -104,6 +125,9 @@ blocks:
     comment: ''
     value: '38'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [672, 515]
     rotation: 0
     state: enabled
@@ -115,7 +139,10 @@ blocks:
     mod: rxmod
     taps: '[1]'
   states:
-    coordinate: [936, 371]
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
+    coordinate: [936, 388.0]
     rotation: 0
     state: enabled
 - name: noise
@@ -133,6 +160,9 @@ blocks:
     value: '-50'
     widget: counter_slider
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [176, 435]
     rotation: 0
     state: enabled
@@ -151,6 +181,9 @@ blocks:
     value: '10'
     widget: counter_slider
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [48, 435]
     rotation: 0
     state: enabled
@@ -164,6 +197,9 @@ blocks:
     samp_rate: sps
     sym_rate: '1.0'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [1176, 244.0]
     rotation: 0
     state: enabled
@@ -177,7 +213,10 @@ blocks:
     samp_rate: sps
     sym_rate: '1.0'
   states:
-    coordinate: [304, 515]
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
+    coordinate: [296, 564.0]
     rotation: 0
     state: enabled
 - name: rxmod
@@ -186,6 +225,9 @@ blocks:
     comment: ''
     value: digital.generic_mod(hdr_const, False, sps, True, eb, False, False)
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [672, 579]
     rotation: 0
     state: enabled
@@ -195,6 +237,9 @@ blocks:
     comment: ''
     value: 10e3
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [168, 11]
     rotation: 0
     state: enabled
@@ -204,6 +249,9 @@ blocks:
     comment: ''
     value: '4'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [512, 515]
     rotation: 0
     state: enabled
@@ -222,6 +270,9 @@ blocks:
     value: '1.0'
     widget: counter_slider
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [176, 563]
     rotation: 0
     state: enabled
@@ -237,6 +288,9 @@ blocks:
     type: complex
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [368, 107]
     rotation: 0
     state: enabled
@@ -250,6 +304,9 @@ blocks:
     minoutbuf: '0'
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [528, 393]
     rotation: 0
     state: enabled
@@ -265,6 +322,9 @@ blocks:
     type: complex
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [216, 107]
     rotation: 0
     state: enabled
@@ -281,6 +341,9 @@ blocks:
     type: complex
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [664, 99]
     rotation: 0
     state: enabled
@@ -297,6 +360,9 @@ blocks:
     type: complex
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [504, 107]
     rotation: 0
     state: enabled
@@ -314,6 +380,9 @@ blocks:
     vector: '[1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0] + ac'
     vlen: '1'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [16, 91]
     rotation: 0
     state: enabled
@@ -332,6 +401,9 @@ blocks:
     seed: '0'
     taps: 10.0**(-path_loss/20.0)
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [48, 203]
     rotation: 0
     state: enabled
@@ -349,6 +421,9 @@ blocks:
     threshold: '0.999'
     threshold_method: digital.THRESHOLD_ABSOLUTE
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [264, 211]
     rotation: 0
     state: enabled
@@ -365,6 +440,9 @@ blocks:
     taps: rx_psf_taps
     type: ccc
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [528, 219]
     rotation: 0
     state: enabled
@@ -381,6 +459,9 @@ blocks:
     taps: rrc_taps
     type: ccc
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [896, 99]
     rotation: 0
     state: enabled
@@ -401,21 +482,21 @@ blocks:
     alpha9: '1.0'
     autoscale: 'False'
     axislabels: 'True'
-    color1: '"blue"'
-    color10: '"blue"'
-    color2: '"red"'
-    color3: '"green"'
-    color4: '"black"'
-    color5: '"cyan"'
-    color6: '"magenta"'
-    color7: '"yellow"'
-    color8: '"dark red"'
-    color9: '"dark green"'
+    color1: blue
+    color10: dark blue
+    color2: red
+    color3: green
+    color4: black
+    color5: cyan
+    color6: magenta
+    color7: yellow
+    color8: dark red
+    color9: dark green
     comment: ''
     ctrlpanel: 'False'
     entags: 'True'
     grid: 'False'
-    gui_hint: 2,0,1,2
+    gui_hint: 2,0,6,2
     label1: ''
     label10: ''
     label2: ''
@@ -475,6 +556,9 @@ blocks:
     ymin: '-1.5'
     yunit: '""'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [720, 211]
     rotation: 0
     state: enabled
@@ -495,16 +579,16 @@ blocks:
     alpha9: '1.0'
     autoscale: 'False'
     axislabels: 'True'
-    color1: '"blue"'
-    color10: '"blue"'
-    color2: '"red"'
-    color3: '"green"'
-    color4: '"black"'
-    color5: '"cyan"'
-    color6: '"magenta"'
-    color7: '"yellow"'
-    color8: '"dark red"'
-    color9: '"dark green"'
+    color1: blue
+    color10: dark blue
+    color2: red
+    color3: green
+    color4: black
+    color5: cyan
+    color6: magenta
+    color7: yellow
+    color8: dark red
+    color9: dark green
     comment: ''
     ctrlpanel: 'False'
     entags: 'True'
@@ -569,6 +653,9 @@ blocks:
     ymin: '-100'
     yunit: '""'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [528, 299]
     rotation: 0
     state: enabled
@@ -589,16 +676,16 @@ blocks:
     alpha9: '1.0'
     autoscale: 'False'
     axislabels: 'True'
-    color1: '"blue"'
-    color10: '"blue"'
-    color2: '"red"'
-    color3: '"green"'
-    color4: '"black"'
-    color5: '"cyan"'
-    color6: '"magenta"'
-    color7: '"yellow"'
-    color8: '"dark red"'
-    color9: '"dark green"'
+    color1: blue
+    color10: dark blue
+    color2: red
+    color3: green
+    color4: black
+    color5: cyan
+    color6: magenta
+    color7: yellow
+    color8: dark red
+    color9: dark green
     comment: ''
     ctrlpanel: 'False'
     entags: 'True'
@@ -663,6 +750,9 @@ blocks:
     ymin: '-100'
     yunit: '""'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [720, 371]
     rotation: 0
     state: enabled
@@ -671,7 +761,7 @@ blocks:
   parameters:
     alias: ''
     comment: ''
-    gui_hint: ''
+    gui_hint: 8,0,6,2
     label0: Corr
     label1: '|Corr|^2'
     label10: Tab 10
@@ -694,6 +784,9 @@ blocks:
     label9: Tab 9
     num_tabs: '2'
   states:
+    bus_sink: false
+    bus_source: false
+    bus_structure: null
     coordinate: [296, 435]
     rotation: 0
     state: enabled
-- 
2.27.0

From 1a70a196f7ecb7352dae32dec645fb9f97909b4d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nick=20=C3=98stergaard?= <oe.nick@gmail.com>
Date: Sat, 9 Jan 2021 16:56:00 +0100
Subject: [PATCH] gr-digital: Change threshold method of example_corr_est
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In example_corr_est switch to dynamic threshold instead of absolute.
This make the example do something at start up instead of just
flatlining and it seems like the example becomes more interesting.

Signed-off-by: Nick Østergaard <oe.nick@gmail.com>
---
 gr-digital/examples/packet/example_corr_est.grc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gr-digital/examples/packet/example_corr_est.grc b/gr-digital/examples/packet/example_corr_est.grc
index c277d7335..3d0647e1d 100644
--- a/gr-digital/examples/packet/example_corr_est.grc
+++ b/gr-digital/examples/packet/example_corr_est.grc
@@ -419,7 +419,7 @@ blocks:
     sps: sps
     symbols: modulated_sync_word
     threshold: '0.999'
-    threshold_method: digital.THRESHOLD_ABSOLUTE
+    threshold_method: digital.THRESHOLD_DYNAMIC
   states:
     bus_sink: false
     bus_source: false
-- 
2.27.0

From cbe4a0a0352ba0d5a67c02a627437c0cf5243371 Mon Sep 17 00:00:00 2001
From: "A. Maitland Bottoms" <bottoms@debian.org>
Date: Sun, 15 Nov 2020 10:58:46 -0500
Subject: [PATCH] RPC: fixes to allow using Thrift 0.13

---
 cmake/Modules/FindTHRIFT.cmake                     | 14 +++++++++++++-
 config.h.in                                        |  6 ++++++
 .../include/gnuradio/rpc_shared_ptr_selection.h    |  2 ++
 .../include/gnuradio/thrift_server_template.h      | 10 ++++++++++
 4 files changed, 31 insertions(+), 1 deletion(-)

diff --git a/cmake/Modules/FindTHRIFT.cmake b/cmake/Modules/FindTHRIFT.cmake
index 7422a566f..b2d910bef 100644
--- a/cmake/Modules/FindTHRIFT.cmake
+++ b/cmake/Modules/FindTHRIFT.cmake
@@ -72,7 +72,19 @@ ENDIF  (CMAKE_CROSSCOMPILING)
 
 # Set to found if we've made it this far
 if(THRIFT_INCLUDE_DIRS AND THRIFT_LIBRARIES AND PYTHON_THRIFT_FOUND)
-  set(THRIFT_FOUND TRUE CACHE BOOL "If Thift has been found")
+  set(THRIFT_FOUND TRUE CACHE BOOL "If Thrift has been found")
+
+  find_file(THRIFT_HAS_VERSION_H thrift/version.h
+    PATH ${THRIFT_INCLUDE_DIRS} NO_DEFAULT_PATH)
+  if(THRIFT_HAS_VERSION_H-FOUND)
+    set(THRIFT_HAS_VERSION_H TRUE CACHE BOOL "If Thrift has thrift/version.h")
+  endif()
+
+  find_file(THRIFT_HAS_THREADFACTORY_H thrift/concurrency/ThreadFactory.h
+    PATH ${THRIFT_INCLUDE_DIRS} NO_DEFAULT_PATH)
+  if(THRIFT_HAS_THREADFACTORY_H-FOUND)
+    set(THRIFT_HAS_THREADFACTORY_H TRUE CACHE BOOL "If Thrift has thrift/concurrency/ThreadFactory.h")
+  endif()
 endif(THRIFT_INCLUDE_DIRS AND THRIFT_LIBRARIES AND PYTHON_THRIFT_FOUND)
 
 
diff --git a/config.h.in b/config.h.in
index e3570941a..996374639 100644
--- a/config.h.in
+++ b/config.h.in
@@ -36,6 +36,12 @@
 #ifndef GR_RPCSERVER_THRIFT
 #cmakedefine GR_RPCSERVER_THRIFT
 #endif
+#ifndef THRIFT_HAS_VERSION_H
+#cmakedefine THRIFT_HAS_VERSION_H
+#endif
+#ifndef THRIFT_HAS_THREADFACTORY_H
+#cmakedefine THRIFT_HAS_THREADFACTORY_H
+#endif
 #ifndef GR_MPLIB_GMP
 #cmakedefine GR_MPLIB_GMP
 #endif
diff --git a/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h b/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h
index 5ce264cc1..9d14e6696 100644
--- a/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h
+++ b/gnuradio-runtime/include/gnuradio/rpc_shared_ptr_selection.h
@@ -27,7 +27,9 @@
 
 #include "gnuradio/config.h"
 #ifdef GR_RPCSERVER_THRIFT
+#ifdef THRIFT_HAS_VERSION_H
 #include <thrift/version.h>
+#endif
 // to get boost includes, if and only if they're still in Thrift:
 #include <thrift/concurrency/Thread.h>
 #endif
diff --git a/gnuradio-runtime/include/gnuradio/thrift_server_template.h b/gnuradio-runtime/include/gnuradio/thrift_server_template.h
index fc3b7e8a7..319d519af 100644
--- a/gnuradio-runtime/include/gnuradio/thrift_server_template.h
+++ b/gnuradio-runtime/include/gnuradio/thrift_server_template.h
@@ -23,6 +23,7 @@
 #ifndef THRIFT_SERVER_TEMPLATE_H
 #define THRIFT_SERVER_TEMPLATE_H
 
+#include <gnuradio/config.h>
 #include <gnuradio/logger.h>
 #include <gnuradio/prefs.h>
 #include <gnuradio/rpc_shared_ptr_selection.h>
@@ -30,7 +31,11 @@
 #include <iostream>
 
 #include "thrift/ControlPort.h"
+#ifdef THRIFT_HAS_THREADFACTORY_H
+#include <thrift/concurrency/ThreadFactory.h>
+#else
 #include <thrift/concurrency/PlatformThreadFactory.h>
+#endif
 #include <thrift/concurrency/ThreadManager.h>
 #include <thrift/server/TSimpleServer.h>
 #include <thrift/server/TThreadPoolServer.h>
@@ -138,9 +143,14 @@ thrift_server_template<TserverBase, TserverClass, TImplClass>::thrift_server_tem
         gr::rpc_sptr<thrift::concurrency::ThreadManager>::t threadManager(
             thrift::concurrency::ThreadManager::newSimpleThreadManager(nthreads));
 
+#ifdef THRIFT_HAS_THREADFACTORY_H
+        threadManager->threadFactory(gr::rpc_sptr<thrift::concurrency::ThreadFactory>::t(
+            new thrift::concurrency::ThreadFactory()));
+#else
         threadManager->threadFactory(
             gr::rpc_sptr<thrift::concurrency::PlatformThreadFactory>::t(
                 new thrift::concurrency::PlatformThreadFactory()));
+#endif
 
         threadManager->start();
 
-- 
2.27.0

From a86d5eabe3281979056de4a32d178603b30fb228 Mon Sep 17 00:00:00 2001
From: Johannes Demel <demel@ant.uni-bremen.de>
Date: Sat, 9 May 2020 14:25:32 +0200
Subject: [PATCH] msg_handler: Use lambdas to set msg handlers

With this commit, all calls to `set_msg_handler` in `gr-blocks` use
lambdas. This helps to use `std::function` instead of `boost::function`.
---
 gnuradio-runtime/lib/block.cc                       | 3 +--
 gr-blocks/lib/copy_impl.cc                          | 2 +-
 gr-blocks/lib/message_debug_impl.cc                 | 6 +++---
 gr-blocks/lib/message_strobe_impl.cc                | 3 +--
 gr-blocks/lib/message_strobe_random_impl.cc         | 3 +--
 gr-blocks/lib/multiply_matrix_impl.cc               | 7 ++-----
 gr-blocks/lib/mute_impl.cc                          | 2 +-
 gr-blocks/lib/nop_impl.cc                           | 3 +--
 gr-blocks/lib/pdu_filter_impl.cc                    | 2 +-
 gr-blocks/lib/pdu_remove_impl.cc                    | 2 +-
 gr-blocks/lib/pdu_set_impl.cc                       | 3 ++-
 gr-blocks/lib/random_pdu_impl.cc                    | 2 +-
 gr-blocks/lib/repeat_impl.cc                        | 2 +-
 gr-blocks/lib/socket_pdu_impl.cc                    | 8 ++++----
 gr-blocks/lib/tagged_stream_multiply_length_impl.cc | 5 ++---
 gr-blocks/lib/tuntap_pdu_impl.cc                    | 2 +-
 16 files changed, 24 insertions(+), 31 deletions(-)

diff --git a/gnuradio-runtime/lib/block.cc b/gnuradio-runtime/lib/block.cc
index 7020b5f6a..3a2d8caee 100644
--- a/gnuradio-runtime/lib/block.cc
+++ b/gnuradio-runtime/lib/block.cc
@@ -61,9 +61,8 @@ block::block(const std::string& name,
 {
     global_block_registry.register_primitive(d_symbol_name, this);
     message_port_register_in(d_system_port);
-    set_msg_handler(d_system_port, boost::bind(&block::system_handler, this, _1));
-
     configure_default_loggers(d_logger, d_debug_logger, symbol_name());
+    set_msg_handler(d_system_port, [this](pmt::pmt_t msg) { this->system_handler(msg); });
 }
 
 block::~block() { global_block_registry.unregister_primitive(symbol_name()); }
diff --git a/gr-blocks/lib/copy_impl.cc b/gr-blocks/lib/copy_impl.cc
index c377e57b1..4c97d07a7 100644
--- a/gr-blocks/lib/copy_impl.cc
+++ b/gr-blocks/lib/copy_impl.cc
@@ -44,7 +44,7 @@ copy_impl::copy_impl(size_t itemsize)
       d_enabled(true)
 {
     message_port_register_in(pmt::mp("en"));
-    set_msg_handler(pmt::mp("en"), boost::bind(&copy_impl::handle_enable, this, _1));
+    set_msg_handler(pmt::mp("en"), [this](pmt::pmt_t msg) { this->handle_enable(msg); });
 }
 
 copy_impl::~copy_impl() {}
diff --git a/gr-blocks/lib/message_debug_impl.cc b/gr-blocks/lib/message_debug_impl.cc
index a8c84aa50..719fbd818 100644
--- a/gr-blocks/lib/message_debug_impl.cc
+++ b/gr-blocks/lib/message_debug_impl.cc
@@ -90,14 +90,14 @@ message_debug_impl::message_debug_impl()
     : block("message_debug", io_signature::make(0, 0, 0), io_signature::make(0, 0, 0))
 {
     message_port_register_in(pmt::mp("print"));
-    set_msg_handler(pmt::mp("print"), boost::bind(&message_debug_impl::print, this, _1));
+    set_msg_handler(pmt::mp("print"), [this](pmt::pmt_t msg) { this->print(msg); });
 
     message_port_register_in(pmt::mp("store"));
-    set_msg_handler(pmt::mp("store"), boost::bind(&message_debug_impl::store, this, _1));
+    set_msg_handler(pmt::mp("store"), [this](pmt::pmt_t msg) { this->store(msg); });
 
     message_port_register_in(pmt::mp("print_pdu"));
     set_msg_handler(pmt::mp("print_pdu"),
-                    boost::bind(&message_debug_impl::print_pdu, this, _1));
+                    [this](pmt::pmt_t msg) { this->print_pdu(msg); });
 }
 
 message_debug_impl::~message_debug_impl() {}
diff --git a/gr-blocks/lib/message_strobe_impl.cc b/gr-blocks/lib/message_strobe_impl.cc
index 038eeae5a..67a95be8f 100644
--- a/gr-blocks/lib/message_strobe_impl.cc
+++ b/gr-blocks/lib/message_strobe_impl.cc
@@ -53,8 +53,7 @@ message_strobe_impl::message_strobe_impl(pmt::pmt_t msg, long period_ms)
     message_port_register_out(d_port);
 
     message_port_register_in(pmt::mp("set_msg"));
-    set_msg_handler(pmt::mp("set_msg"),
-                    boost::bind(&message_strobe_impl::set_msg, this, _1));
+    set_msg_handler(pmt::mp("set_msg"), [this](pmt::pmt_t msg) { this->set_msg(msg); });
 }
 
 message_strobe_impl::~message_strobe_impl() {}
diff --git a/gr-blocks/lib/message_strobe_random_impl.cc b/gr-blocks/lib/message_strobe_random_impl.cc
index 0ab5d6adc..1b8deca95 100644
--- a/gr-blocks/lib/message_strobe_random_impl.cc
+++ b/gr-blocks/lib/message_strobe_random_impl.cc
@@ -74,8 +74,7 @@ message_strobe_random_impl::message_strobe_random_impl(
         new gr::thread::thread(boost::bind(&message_strobe_random_impl::run, this)));
 
     message_port_register_in(pmt::mp("set_msg"));
-    set_msg_handler(pmt::mp("set_msg"),
-                    boost::bind(&message_strobe_random_impl::set_msg, this, _1));
+    set_msg_handler(pmt::mp("set_msg"), [this](pmt::pmt_t msg) { this->set_msg(msg); });
 }
 
 long message_strobe_random_impl::next_delay()
diff --git a/gr-blocks/lib/multiply_matrix_impl.cc b/gr-blocks/lib/multiply_matrix_impl.cc
index e1b9c746c..03e789453 100644
--- a/gr-blocks/lib/multiply_matrix_impl.cc
+++ b/gr-blocks/lib/multiply_matrix_impl.cc
@@ -235,9 +235,7 @@ multiply_matrix_impl<gr_complex>::multiply_matrix_impl(
 
     pmt::pmt_t port_name = pmt::string_to_symbol("set_A");
     message_port_register_in(port_name);
-    set_msg_handler(
-        port_name,
-        boost::bind(&multiply_matrix_impl<gr_complex>::msg_handler_A, this, _1));
+    set_msg_handler(port_name, [this](pmt::pmt_t msg) { this->msg_handler_A(msg); });
 }
 
 template <>
@@ -256,8 +254,7 @@ multiply_matrix_impl<float>::multiply_matrix_impl(
 
     pmt::pmt_t port_name = pmt::string_to_symbol("set_A");
     message_port_register_in(port_name);
-    set_msg_handler(port_name,
-                    boost::bind(&multiply_matrix_impl<float>::msg_handler_A, this, _1));
+    set_msg_handler(port_name, [this](pmt::pmt_t msg) { this->msg_handler_A(msg); });
 }
 
 
diff --git a/gr-blocks/lib/mute_impl.cc b/gr-blocks/lib/mute_impl.cc
index bd65ce207..c9a1d200c 100644
--- a/gr-blocks/lib/mute_impl.cc
+++ b/gr-blocks/lib/mute_impl.cc
@@ -48,7 +48,7 @@ mute_impl<T>::mute_impl(bool mute)
 {
     this->message_port_register_in(pmt::intern("set_mute"));
     this->set_msg_handler(pmt::intern("set_mute"),
-                          boost::bind(&mute_impl<T>::set_mute_pmt, this, _1));
+                          [this](pmt::pmt_t msg) { this->set_mute_pmt(msg); });
 }
 
 template <class T>
diff --git a/gr-blocks/lib/nop_impl.cc b/gr-blocks/lib/nop_impl.cc
index db216d97a..4e1e887f4 100644
--- a/gr-blocks/lib/nop_impl.cc
+++ b/gr-blocks/lib/nop_impl.cc
@@ -26,7 +26,6 @@
 
 #include "nop_impl.h"
 #include <gnuradio/io_signature.h>
-#include <boost/bind.hpp>
 
 namespace gr {
 namespace blocks {
@@ -45,7 +44,7 @@ nop_impl::nop_impl(size_t sizeof_stream_item)
     // Arrange to have count_received_msgs called when messages are received.
     message_port_register_in(pmt::mp("port"));
     set_msg_handler(pmt::mp("port"),
-                    boost::bind(&nop_impl::count_received_msgs, this, _1));
+                    [this](pmt::pmt_t msg) { this->count_received_msgs(msg); });
 }
 
 nop_impl::~nop_impl() {}
diff --git a/gr-blocks/lib/pdu_filter_impl.cc b/gr-blocks/lib/pdu_filter_impl.cc
index b0748eec0..760027a78 100644
--- a/gr-blocks/lib/pdu_filter_impl.cc
+++ b/gr-blocks/lib/pdu_filter_impl.cc
@@ -45,7 +45,7 @@ pdu_filter_impl::pdu_filter_impl(pmt::pmt_t k, pmt::pmt_t v, bool invert)
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
     set_msg_handler(pdu::pdu_port_id(),
-                    boost::bind(&pdu_filter_impl::handle_msg, this, _1));
+                    [this](pmt::pmt_t msg) { this->handle_msg(msg); });
 }
 
 void pdu_filter_impl::handle_msg(pmt::pmt_t pdu)
diff --git a/gr-blocks/lib/pdu_remove_impl.cc b/gr-blocks/lib/pdu_remove_impl.cc
index 19cc4dc76..58277ca0d 100644
--- a/gr-blocks/lib/pdu_remove_impl.cc
+++ b/gr-blocks/lib/pdu_remove_impl.cc
@@ -43,7 +43,7 @@ pdu_remove_impl::pdu_remove_impl(pmt::pmt_t k)
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
     set_msg_handler(pdu::pdu_port_id(),
-                    boost::bind(&pdu_remove_impl::handle_msg, this, _1));
+                    [this](pmt::pmt_t msg) { this->handle_msg(msg); });
 }
 
 void pdu_remove_impl::handle_msg(pmt::pmt_t pdu)
diff --git a/gr-blocks/lib/pdu_set_impl.cc b/gr-blocks/lib/pdu_set_impl.cc
index 40fbc3cd8..61f1bb128 100644
--- a/gr-blocks/lib/pdu_set_impl.cc
+++ b/gr-blocks/lib/pdu_set_impl.cc
@@ -43,7 +43,8 @@ pdu_set_impl::pdu_set_impl(pmt::pmt_t k, pmt::pmt_t v)
 {
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(), boost::bind(&pdu_set_impl::handle_msg, this, _1));
+    set_msg_handler(pdu::pdu_port_id(),
+                    [this](pmt::pmt_t msg) { this->handle_msg(msg); });
 }
 
 void pdu_set_impl::handle_msg(pmt::pmt_t pdu)
diff --git a/gr-blocks/lib/random_pdu_impl.cc b/gr-blocks/lib/random_pdu_impl.cc
index 75d825aef..5207a779d 100644
--- a/gr-blocks/lib/random_pdu_impl.cc
+++ b/gr-blocks/lib/random_pdu_impl.cc
@@ -53,7 +53,7 @@ random_pdu_impl::random_pdu_impl(int min_items,
     message_port_register_out(pdu::pdu_port_id());
     message_port_register_in(pmt::mp("generate"));
     set_msg_handler(pmt::mp("generate"),
-                    boost::bind(&random_pdu_impl::generate_pdu, this, _1));
+                    [this](pmt::pmt_t msg) { this->generate_pdu(msg); });
     if (length_modulo < 1)
         throw std::runtime_error("length_module must be >= 1");
     if (max_items < length_modulo)
diff --git a/gr-blocks/lib/repeat_impl.cc b/gr-blocks/lib/repeat_impl.cc
index 189fbc894..7262b11a2 100644
--- a/gr-blocks/lib/repeat_impl.cc
+++ b/gr-blocks/lib/repeat_impl.cc
@@ -45,7 +45,7 @@ repeat_impl::repeat_impl(size_t itemsize, int interp)
 {
     message_port_register_in(pmt::mp("interpolation"));
     set_msg_handler(pmt::mp("interpolation"),
-                    boost::bind(&repeat_impl::msg_set_interpolation, this, _1));
+                    [this](pmt::pmt_t msg) { this->msg_set_interpolation(msg); });
 }
 
 void repeat_impl::msg_set_interpolation(pmt::pmt_t msg)
diff --git a/gr-blocks/lib/socket_pdu_impl.cc b/gr-blocks/lib/socket_pdu_impl.cc
index df69f07ad..edf572e76 100644
--- a/gr-blocks/lib/socket_pdu_impl.cc
+++ b/gr-blocks/lib/socket_pdu_impl.cc
@@ -101,7 +101,7 @@ socket_pdu_impl::socket_pdu_impl(std::string type,
         start_tcp_accept();
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::tcp_server_send, this, _1));
+                        [this](pmt::pmt_t msg) { this->tcp_server_send(msg); });
     } else if (type == "TCP_CLIENT") {
         boost::system::error_code error = boost::asio::error::host_not_found;
         d_tcp_socket.reset(new boost::asio::ip::tcp::socket(d_io_service));
@@ -111,7 +111,7 @@ socket_pdu_impl::socket_pdu_impl(std::string type,
         d_tcp_socket->set_option(boost::asio::ip::tcp::no_delay(d_tcp_no_delay));
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::tcp_client_send, this, _1));
+                        [this](pmt::pmt_t msg) { this->tcp_client_send(msg); });
 
         d_tcp_socket->async_read_some(
             boost::asio::buffer(d_rxbuf),
@@ -131,7 +131,7 @@ socket_pdu_impl::socket_pdu_impl(std::string type,
                         boost::asio::placeholders::bytes_transferred));
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::udp_send, this, _1));
+                        [this](pmt::pmt_t msg) { this->udp_send(msg); });
     } else if (type == "UDP_CLIENT") {
         d_udp_socket.reset(
             new boost::asio::ip::udp::socket(d_io_service, d_udp_endpoint));
@@ -144,7 +144,7 @@ socket_pdu_impl::socket_pdu_impl(std::string type,
                         boost::asio::placeholders::bytes_transferred));
 
         set_msg_handler(pdu::pdu_port_id(),
-                        boost::bind(&socket_pdu_impl::udp_send, this, _1));
+                        [this](pmt::pmt_t msg) { this->udp_send(msg); });
     } else
         throw std::runtime_error("gr::blocks:socket_pdu: unknown socket type");
 
diff --git a/gr-blocks/lib/tagged_stream_multiply_length_impl.cc b/gr-blocks/lib/tagged_stream_multiply_length_impl.cc
index 30f4c46dc..2266c01fe 100644
--- a/gr-blocks/lib/tagged_stream_multiply_length_impl.cc
+++ b/gr-blocks/lib/tagged_stream_multiply_length_impl.cc
@@ -49,9 +49,8 @@ tagged_stream_multiply_length_impl::tagged_stream_multiply_length_impl(
     set_tag_propagation_policy(TPP_DONT);
     set_relative_rate(1, 1);
     message_port_register_in(pmt::intern("set_scalar"));
-    set_msg_handler(
-        pmt::intern("set_scalar"),
-        boost::bind(&tagged_stream_multiply_length_impl::set_scalar_pmt, this, _1));
+    set_msg_handler(pmt::intern("set_scalar"),
+                    [this](pmt::pmt_t msg) { this->set_scalar_pmt(msg); });
 }
 
 tagged_stream_multiply_length_impl::~tagged_stream_multiply_length_impl() {}
diff --git a/gr-blocks/lib/tuntap_pdu_impl.cc b/gr-blocks/lib/tuntap_pdu_impl.cc
index 4343ae1dc..19742235d 100644
--- a/gr-blocks/lib/tuntap_pdu_impl.cc
+++ b/gr-blocks/lib/tuntap_pdu_impl.cc
@@ -96,7 +96,7 @@ tuntap_pdu_impl::tuntap_pdu_impl(std::string dev, int MTU, bool istunflag)
 
     // set up input message port
     message_port_register_in(pdu::pdu_port_id());
-    set_msg_handler(pdu::pdu_port_id(), boost::bind(&tuntap_pdu_impl::send, this, _1));
+    set_msg_handler(pdu::pdu_port_id(), [this](pmt::pmt_t msg) { this->send(msg); });
 }
 
 int tuntap_pdu_impl::tun_alloc(char* dev, int flags)
-- 
2.27.0

From 4d293d4849f642508308bbafede52edbcf7c28e3 Mon Sep 17 00:00:00 2001
From: Johannes Demel <demel@ant.uni-bremen.de>
Date: Sat, 9 May 2020 15:14:37 +0200
Subject: [PATCH] msg_handler: Use lambdas in most components

With this commit, all components except gr-qtgui use lambdas instead of
`boost::bind` to register msg handlers.
---
 gr-digital/lib/chunks_to_symbols_impl.cc         |  6 ++----
 gr-digital/lib/constellation_receiver_cb_impl.cc | 10 ++++------
 gr-digital/lib/costas_loop_cc_impl.cc            |  2 +-
 gr-digital/lib/crc32_async_bb_impl.cc            |  4 ++--
 gr-digital/lib/header_payload_demux_impl.cc      |  5 ++---
 gr-digital/lib/protocol_formatter_async_impl.cc  |  3 +--
 gr-fec/lib/async_decoder_impl.cc                 |  5 ++---
 gr-fec/lib/async_encoder_impl.cc                 |  5 ++---
 gr-fec/lib/depuncture_bb_impl.cc                 |  2 +-
 gr-fec/lib/puncture_bb_impl.cc                   |  2 +-
 gr-fec/lib/puncture_ff_impl.cc                   |  2 +-
 gr-filter/lib/freq_xlating_fir_filter_impl.cc    |  8 ++------
 gr-filter/lib/mmse_resampler_cc_impl.cc          |  2 +-
 gr-filter/lib/mmse_resampler_ff_impl.cc          |  2 +-
 gr-uhd/lib/usrp_block_impl.cc                    |  2 +-
 gr-zeromq/lib/pub_msg_sink_impl.cc               |  2 +-
 gr-zeromq/lib/push_msg_sink_impl.cc              |  2 +-
 17 files changed, 26 insertions(+), 38 deletions(-)

diff --git a/gr-digital/lib/chunks_to_symbols_impl.cc b/gr-digital/lib/chunks_to_symbols_impl.cc
index 26d590a66..c2cc99b0c 100644
--- a/gr-digital/lib/chunks_to_symbols_impl.cc
+++ b/gr-digital/lib/chunks_to_symbols_impl.cc
@@ -51,10 +51,8 @@ chunks_to_symbols_impl<IN_T, OUT_T>::chunks_to_symbols_impl(
       d_symbol_table(symbol_table)
 {
     this->message_port_register_in(pmt::mp("set_symbol_table"));
-    this->set_msg_handler(
-        pmt::mp("set_symbol_table"),
-        boost::bind(
-            &chunks_to_symbols_impl<IN_T, OUT_T>::handle_set_symbol_table, this, _1));
+    this->set_msg_handler(pmt::mp("set_symbol_table"),
+                          [this](pmt::pmt_t msg) { this->handle_set_symbol_table(msg); });
 }
 
 template <class IN_T, class OUT_T>
diff --git a/gr-digital/lib/constellation_receiver_cb_impl.cc b/gr-digital/lib/constellation_receiver_cb_impl.cc
index 7fb7559d5..1c160ff1b 100644
--- a/gr-digital/lib/constellation_receiver_cb_impl.cc
+++ b/gr-digital/lib/constellation_receiver_cb_impl.cc
@@ -61,14 +61,12 @@ constellation_receiver_cb_impl::constellation_receiver_cb_impl(
             "This receiver only works with constellations of dimension 1.");
 
     message_port_register_in(pmt::mp("set_constellation"));
-    set_msg_handler(
-        pmt::mp("set_constellation"),
-        boost::bind(&constellation_receiver_cb_impl::handle_set_constellation, this, _1));
+    set_msg_handler(pmt::mp("set_constellation"),
+                    [this](pmt::pmt_t msg) { this->handle_set_constellation(msg); });
 
     message_port_register_in(pmt::mp("rotate_phase"));
-    set_msg_handler(
-        pmt::mp("rotate_phase"),
-        boost::bind(&constellation_receiver_cb_impl::handle_rotate_phase, this, _1));
+    set_msg_handler(pmt::mp("rotate_phase"),
+                    [this](pmt::pmt_t msg) { this->handle_rotate_phase(msg); });
 }
 
 constellation_receiver_cb_impl::~constellation_receiver_cb_impl() {}
diff --git a/gr-digital/lib/costas_loop_cc_impl.cc b/gr-digital/lib/costas_loop_cc_impl.cc
index c3b30834e..b1a0e67ca 100644
--- a/gr-digital/lib/costas_loop_cc_impl.cc
+++ b/gr-digital/lib/costas_loop_cc_impl.cc
@@ -82,7 +82,7 @@ costas_loop_cc_impl::costas_loop_cc_impl(float loop_bw, int order, bool use_snr)
 
     message_port_register_in(pmt::mp("noise"));
     set_msg_handler(pmt::mp("noise"),
-                    boost::bind(&costas_loop_cc_impl::handle_set_noise, this, _1));
+                    [this](pmt::pmt_t msg) { this->handle_set_noise(msg); });
 }
 
 costas_loop_cc_impl::~costas_loop_cc_impl() {}
diff --git a/gr-digital/lib/crc32_async_bb_impl.cc b/gr-digital/lib/crc32_async_bb_impl.cc
index bffbb2a73..230decc2a 100644
--- a/gr-digital/lib/crc32_async_bb_impl.cc
+++ b/gr-digital/lib/crc32_async_bb_impl.cc
@@ -48,9 +48,9 @@ crc32_async_bb_impl::crc32_async_bb_impl(bool check)
     message_port_register_out(d_out_port);
 
     if (check)
-        set_msg_handler(d_in_port, boost::bind(&crc32_async_bb_impl::check, this, _1));
+        set_msg_handler(d_in_port, [this](pmt::pmt_t msg) { this->check(msg); });
     else
-        set_msg_handler(d_in_port, boost::bind(&crc32_async_bb_impl::calc, this, _1));
+        set_msg_handler(d_in_port, [this](pmt::pmt_t msg) { this->calc(msg); });
 }
 
 crc32_async_bb_impl::~crc32_async_bb_impl() {}
diff --git a/gr-digital/lib/header_payload_demux_impl.cc b/gr-digital/lib/header_payload_demux_impl.cc
index 98c805fb2..5dc65f422 100644
--- a/gr-digital/lib/header_payload_demux_impl.cc
+++ b/gr-digital/lib/header_payload_demux_impl.cc
@@ -150,9 +150,8 @@ header_payload_demux_impl::header_payload_demux_impl(
     }
     set_tag_propagation_policy(TPP_DONT);
     message_port_register_in(msg_port_id());
-    set_msg_handler(
-        msg_port_id(),
-        boost::bind(&header_payload_demux_impl::parse_header_data_msg, this, _1));
+    set_msg_handler(msg_port_id(),
+                    [this](pmt::pmt_t msg) { this->parse_header_data_msg(msg); });
     for (size_t i = 0; i < special_tags.size(); i++) {
         d_special_tags.push_back(pmt::string_to_symbol(special_tags[i]));
         d_special_tags_last_value.push_back(pmt::PMT_NIL);
diff --git a/gr-digital/lib/protocol_formatter_async_impl.cc b/gr-digital/lib/protocol_formatter_async_impl.cc
index 84b693745..08e324ecf 100644
--- a/gr-digital/lib/protocol_formatter_async_impl.cc
+++ b/gr-digital/lib/protocol_formatter_async_impl.cc
@@ -54,8 +54,7 @@ protocol_formatter_async_impl::protocol_formatter_async_impl(
     message_port_register_out(d_hdr_port);
     message_port_register_out(d_pld_port);
 
-    set_msg_handler(d_in_port,
-                    boost::bind(&protocol_formatter_async_impl::append, this, _1));
+    set_msg_handler(d_in_port, [this](pmt::pmt_t msg) { this->append(msg); });
 }
 
 protocol_formatter_async_impl::~protocol_formatter_async_impl() {}
diff --git a/gr-fec/lib/async_decoder_impl.cc b/gr-fec/lib/async_decoder_impl.cc
index e7a668c83..c907b297a 100644
--- a/gr-fec/lib/async_decoder_impl.cc
+++ b/gr-fec/lib/async_decoder_impl.cc
@@ -64,11 +64,10 @@ async_decoder_impl::async_decoder_impl(generic_decoder::sptr my_decoder,
 
     if (d_packed) {
         d_pack = new blocks::kernel::pack_k_bits(8);
-        set_msg_handler(d_in_port,
-                        boost::bind(&async_decoder_impl::decode_packed, this, _1));
+        set_msg_handler(d_in_port, [this](pmt::pmt_t msg) { this->decode_packed(msg); });
     } else {
         set_msg_handler(d_in_port,
-                        boost::bind(&async_decoder_impl::decode_unpacked, this, _1));
+                        [this](pmt::pmt_t msg) { this->decode_unpacked(msg); });
     }
 
     // The maximum frame size is set by the initial frame size of the decoder.
diff --git a/gr-fec/lib/async_encoder_impl.cc b/gr-fec/lib/async_encoder_impl.cc
index 811d55601..2e8fd62d1 100644
--- a/gr-fec/lib/async_encoder_impl.cc
+++ b/gr-fec/lib/async_encoder_impl.cc
@@ -63,8 +63,7 @@ async_encoder_impl::async_encoder_impl(generic_encoder::sptr my_encoder,
     message_port_register_out(d_out_port);
 
     if (d_packed) {
-        set_msg_handler(d_in_port,
-                        boost::bind(&async_encoder_impl::encode_packed, this, _1));
+        set_msg_handler(d_in_port, [this](pmt::pmt_t msg) { this->encode_packed(msg); });
 
         d_unpack = new blocks::kernel::unpack_k_bits(8);
 
@@ -74,7 +73,7 @@ async_encoder_impl::async_encoder_impl(generic_encoder::sptr my_encoder,
 
     } else {
         set_msg_handler(d_in_port,
-                        boost::bind(&async_encoder_impl::encode_unpacked, this, _1));
+                        [this](pmt::pmt_t msg) { this->encode_unpacked(msg); });
     }
 
     if (d_packed || (strncmp(d_encoder->get_input_conversion(), "pack", 4) == 0)) {
diff --git a/gr-fec/lib/depuncture_bb_impl.cc b/gr-fec/lib/depuncture_bb_impl.cc
index 27d00bb5b..59ed44dd8 100644
--- a/gr-fec/lib/depuncture_bb_impl.cc
+++ b/gr-fec/lib/depuncture_bb_impl.cc
@@ -74,7 +74,7 @@ depuncture_bb_impl::depuncture_bb_impl(int puncsize, int puncpat, int delay, cha
     set_fixed_rate(true);
     set_relative_rate((uint64_t)d_puncsize, (uint64_t)(d_puncsize - d_puncholes));
     set_output_multiple(d_puncsize);
-    // set_msg_handler(boost::bind(&depuncture_bb_impl::catch_msg, this, _1));
+    // set_msg_handler(<portname>, [this](pmt::pmt_t msg) { this->catch_msg(msg); });
 }
 
 depuncture_bb_impl::~depuncture_bb_impl() {}
diff --git a/gr-fec/lib/puncture_bb_impl.cc b/gr-fec/lib/puncture_bb_impl.cc
index a365d6a69..1f328c221 100644
--- a/gr-fec/lib/puncture_bb_impl.cc
+++ b/gr-fec/lib/puncture_bb_impl.cc
@@ -72,7 +72,7 @@ puncture_bb_impl::puncture_bb_impl(int puncsize, int puncpat, int delay)
     set_fixed_rate(true);
     set_relative_rate((uint64_t)(d_puncsize - d_puncholes), (uint64_t)d_puncsize);
     set_output_multiple(d_puncsize - d_puncholes);
-    // set_msg_handler(boost::bind(&puncture_bb_impl::catch_msg, this, _1));
+    // set_msg_handler(<portname>, [this](pmt::pmt_t msg) { this->catch_msg(msg); });
 }
 
 puncture_bb_impl::~puncture_bb_impl() {}
diff --git a/gr-fec/lib/puncture_ff_impl.cc b/gr-fec/lib/puncture_ff_impl.cc
index c95288d69..31c686ea4 100644
--- a/gr-fec/lib/puncture_ff_impl.cc
+++ b/gr-fec/lib/puncture_ff_impl.cc
@@ -72,7 +72,7 @@ puncture_ff_impl::puncture_ff_impl(int puncsize, int puncpat, int delay)
     set_fixed_rate(true);
     set_relative_rate((uint64_t)(d_puncsize - d_puncholes), (uint64_t)d_puncsize);
     set_output_multiple(d_puncsize - d_puncholes);
-    // set_msg_handler(boost::bind(&puncture_ff_impl::catch_msg, this, _1));
+    // set_msg_handler(<portname>, [this](pmt::pmt_t msg) { this->catch_msg(msg); });
 }
 
 puncture_ff_impl::~puncture_ff_impl() {}
diff --git a/gr-filter/lib/freq_xlating_fir_filter_impl.cc b/gr-filter/lib/freq_xlating_fir_filter_impl.cc
index 8ddc967ba..1050fb82a 100644
--- a/gr-filter/lib/freq_xlating_fir_filter_impl.cc
+++ b/gr-filter/lib/freq_xlating_fir_filter_impl.cc
@@ -67,12 +67,8 @@ freq_xlating_fir_filter_impl<IN_T, OUT_T, TAP_T>::freq_xlating_fir_filter_impl(
     this->build_composite_fir();
 
     this->message_port_register_in(pmt::mp("freq"));
-    this->set_msg_handler(
-        pmt::mp("freq"),
-        boost::bind(
-            &freq_xlating_fir_filter_impl<IN_T, OUT_T, TAP_T>::handle_set_center_freq,
-            this,
-            _1));
+    this->set_msg_handler(pmt::mp("freq"),
+                          [this](pmt::pmt_t msg) { this->handle_set_center_freq(msg); });
 }
 
 template <class IN_T, class OUT_T, class TAP_T>
diff --git a/gr-filter/lib/mmse_resampler_cc_impl.cc b/gr-filter/lib/mmse_resampler_cc_impl.cc
index 59f9eacfa..9ca62082c 100644
--- a/gr-filter/lib/mmse_resampler_cc_impl.cc
+++ b/gr-filter/lib/mmse_resampler_cc_impl.cc
@@ -53,7 +53,7 @@ mmse_resampler_cc_impl::mmse_resampler_cc_impl(float phase_shift, float resamp_r
     set_inverse_relative_rate(d_mu_inc);
     message_port_register_in(pmt::intern("msg_in"));
     set_msg_handler(pmt::intern("msg_in"),
-                    boost::bind(&mmse_resampler_cc_impl::handle_msg, this, _1));
+                    [this](pmt::pmt_t msg) { this->handle_msg(msg); });
 }
 
 mmse_resampler_cc_impl::~mmse_resampler_cc_impl() { delete d_resamp; }
diff --git a/gr-filter/lib/mmse_resampler_ff_impl.cc b/gr-filter/lib/mmse_resampler_ff_impl.cc
index 342d9f767..312a6a875 100644
--- a/gr-filter/lib/mmse_resampler_ff_impl.cc
+++ b/gr-filter/lib/mmse_resampler_ff_impl.cc
@@ -54,7 +54,7 @@ mmse_resampler_ff_impl::mmse_resampler_ff_impl(float phase_shift, float resamp_r
 
     message_port_register_in(pmt::intern("msg_in"));
     set_msg_handler(pmt::intern("msg_in"),
-                    boost::bind(&mmse_resampler_ff_impl::handle_msg, this, _1));
+                    [this](pmt::pmt_t msg) { this->handle_msg(msg); });
 }
 
 mmse_resampler_ff_impl::~mmse_resampler_ff_impl() { delete d_resamp; }
diff --git a/gr-uhd/lib/usrp_block_impl.cc b/gr-uhd/lib/usrp_block_impl.cc
index c8e5c37e8..0a99855c9 100644
--- a/gr-uhd/lib/usrp_block_impl.cc
+++ b/gr-uhd/lib/usrp_block_impl.cc
@@ -137,7 +137,7 @@ usrp_block_impl::usrp_block_impl(const ::uhd::device_addr_t& device_addr,
     // Set up message ports:
     message_port_register_in(pmt::mp("command"));
     set_msg_handler(pmt::mp("command"),
-                    boost::bind(&usrp_block_impl::msg_handler_command, this, _1));
+                    [this](pmt::pmt_t msg) { this->msg_handler_command(msg); });
 
 // cuz we lazy:
 #define REGISTER_CMD_HANDLER(key, _handler)                                   \
diff --git a/gr-zeromq/lib/pub_msg_sink_impl.cc b/gr-zeromq/lib/pub_msg_sink_impl.cc
index b5da7421e..3973b8f83 100644
--- a/gr-zeromq/lib/pub_msg_sink_impl.cc
+++ b/gr-zeromq/lib/pub_msg_sink_impl.cc
@@ -62,7 +62,7 @@ pub_msg_sink_impl::pub_msg_sink_impl(char* address, int timeout, bool bind)
     }
 
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&pub_msg_sink_impl::handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handler(msg); });
 }
 
 pub_msg_sink_impl::~pub_msg_sink_impl()
diff --git a/gr-zeromq/lib/push_msg_sink_impl.cc b/gr-zeromq/lib/push_msg_sink_impl.cc
index 4140781ab..fee734753 100644
--- a/gr-zeromq/lib/push_msg_sink_impl.cc
+++ b/gr-zeromq/lib/push_msg_sink_impl.cc
@@ -62,7 +62,7 @@ push_msg_sink_impl::push_msg_sink_impl(char* address, int timeout, bool bind)
     }
 
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&push_msg_sink_impl::handler, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handler(msg); });
 }
 
 push_msg_sink_impl::~push_msg_sink_impl()
-- 
2.27.0

From 686e45df2e8e670a757d582bbfacb9c50a855cdd Mon Sep 17 00:00:00 2001
From: Johannes Demel <demel@ant.uni-bremen.de>
Date: Sat, 9 May 2020 15:28:58 +0200
Subject: [PATCH] msg_handler: Use lambdas in gr-qtgui

gr-qtgui uses lambdas instead of `boost::bind` to register message
handlers now. This component makes quite heavy use of message handlers.
---
 gr-qtgui/lib/const_sink_c_impl.cc       | 3 +--
 gr-qtgui/lib/edit_box_msg_impl.cc       | 2 +-
 gr-qtgui/lib/freq_sink_c_impl.cc        | 6 +++---
 gr-qtgui/lib/freq_sink_f_impl.cc        | 6 +++---
 gr-qtgui/lib/histogram_sink_f_impl.cc   | 3 +--
 gr-qtgui/lib/sink_c_impl.cc             | 2 +-
 gr-qtgui/lib/sink_f_impl.cc             | 2 +-
 gr-qtgui/lib/time_raster_sink_b_impl.cc | 3 +--
 gr-qtgui/lib/time_raster_sink_f_impl.cc | 3 +--
 gr-qtgui/lib/time_sink_c_impl.cc        | 2 +-
 gr-qtgui/lib/time_sink_f_impl.cc        | 2 +-
 gr-qtgui/lib/waterfall_sink_c_impl.cc   | 9 +++------
 gr-qtgui/lib/waterfall_sink_f_impl.cc   | 9 +++------
 13 files changed, 21 insertions(+), 31 deletions(-)

diff --git a/gr-qtgui/lib/const_sink_c_impl.cc b/gr-qtgui/lib/const_sink_c_impl.cc
index 852f6ee10..e4b01907f 100644
--- a/gr-qtgui/lib/const_sink_c_impl.cc
+++ b/gr-qtgui/lib/const_sink_c_impl.cc
@@ -69,8 +69,7 @@ const_sink_c_impl::const_sink_c_impl(int size,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&const_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     for (int i = 0; i < d_nconnections; i++) {
         d_residbufs_real.push_back(
diff --git a/gr-qtgui/lib/edit_box_msg_impl.cc b/gr-qtgui/lib/edit_box_msg_impl.cc
index 8713aa820..04f860785 100644
--- a/gr-qtgui/lib/edit_box_msg_impl.cc
+++ b/gr-qtgui/lib/edit_box_msg_impl.cc
@@ -158,7 +158,7 @@ edit_box_msg_impl::edit_box_msg_impl(data_type_t type,
     message_port_register_out(d_port);
     message_port_register_in(pmt::mp("val"));
 
-    set_msg_handler(pmt::mp("val"), boost::bind(&edit_box_msg_impl::set_value, this, _1));
+    set_msg_handler(pmt::mp("val"), [this](pmt::pmt_t msg) { this->set_value(msg); });
 }
 
 edit_box_msg_impl::~edit_box_msg_impl()
diff --git a/gr-qtgui/lib/freq_sink_c_impl.cc b/gr-qtgui/lib/freq_sink_c_impl.cc
index 3a34df6ec..137bccc3c 100644
--- a/gr-qtgui/lib/freq_sink_c_impl.cc
+++ b/gr-qtgui/lib/freq_sink_c_impl.cc
@@ -82,17 +82,17 @@ freq_sink_c_impl::freq_sink_c_impl(int fftsize,
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw, boost::bind(&freq_sink_c_impl::handle_set_bw, this, _1));
+    set_msg_handler(d_port_bw, [this](pmt::pmt_t msg) { this->handle_set_bw(msg); });
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&freq_sink_c_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&freq_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     d_main_gui = NULL;
 
diff --git a/gr-qtgui/lib/freq_sink_f_impl.cc b/gr-qtgui/lib/freq_sink_f_impl.cc
index c14bfc31f..0b1757c03 100644
--- a/gr-qtgui/lib/freq_sink_f_impl.cc
+++ b/gr-qtgui/lib/freq_sink_f_impl.cc
@@ -82,17 +82,17 @@ freq_sink_f_impl::freq_sink_f_impl(int fftsize,
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw, boost::bind(&freq_sink_f_impl::handle_set_bw, this, _1));
+    set_msg_handler(d_port_bw, [this](pmt::pmt_t msg) { this->handle_set_bw(msg); });
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&freq_sink_f_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&freq_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     d_main_gui = NULL;
 
diff --git a/gr-qtgui/lib/histogram_sink_f_impl.cc b/gr-qtgui/lib/histogram_sink_f_impl.cc
index d16de932c..fd357bf40 100644
--- a/gr-qtgui/lib/histogram_sink_f_impl.cc
+++ b/gr-qtgui/lib/histogram_sink_f_impl.cc
@@ -81,8 +81,7 @@ histogram_sink_f_impl::histogram_sink_f_impl(int size,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&histogram_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     // +1 for the PDU buffer
     for (int i = 0; i < d_nconnections + 1; i++) {
diff --git a/gr-qtgui/lib/sink_c_impl.cc b/gr-qtgui/lib/sink_c_impl.cc
index d3feb9d16..8f7ff36ba 100644
--- a/gr-qtgui/lib/sink_c_impl.cc
+++ b/gr-qtgui/lib/sink_c_impl.cc
@@ -96,7 +96,7 @@ sink_c_impl::sink_c_impl(int fftsize,
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&sink_c_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     d_main_gui = NULL;
 
diff --git a/gr-qtgui/lib/sink_f_impl.cc b/gr-qtgui/lib/sink_f_impl.cc
index 418b630b7..0b1eccad1 100644
--- a/gr-qtgui/lib/sink_f_impl.cc
+++ b/gr-qtgui/lib/sink_f_impl.cc
@@ -95,7 +95,7 @@ sink_f_impl::sink_f_impl(int fftsize,
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port, boost::bind(&sink_f_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     d_main_gui = NULL;
 
diff --git a/gr-qtgui/lib/time_raster_sink_b_impl.cc b/gr-qtgui/lib/time_raster_sink_b_impl.cc
index 045c216b0..063ed09d0 100644
--- a/gr-qtgui/lib/time_raster_sink_b_impl.cc
+++ b/gr-qtgui/lib/time_raster_sink_b_impl.cc
@@ -83,8 +83,7 @@ time_raster_sink_b_impl::time_raster_sink_b_impl(double samp_rate,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&time_raster_sink_b_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     d_scale = 1.0f;
 
diff --git a/gr-qtgui/lib/time_raster_sink_f_impl.cc b/gr-qtgui/lib/time_raster_sink_f_impl.cc
index d186f319d..df94d217b 100644
--- a/gr-qtgui/lib/time_raster_sink_f_impl.cc
+++ b/gr-qtgui/lib/time_raster_sink_f_impl.cc
@@ -83,8 +83,7 @@ time_raster_sink_f_impl::time_raster_sink_f_impl(double samp_rate,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&time_raster_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     d_icols = static_cast<int>(ceil(d_cols));
     d_tmpflt = (float*)volk_malloc(d_icols * sizeof(float), volk_get_alignment());
diff --git a/gr-qtgui/lib/time_sink_c_impl.cc b/gr-qtgui/lib/time_sink_c_impl.cc
index b73a1c1ad..26dc5d2e3 100644
--- a/gr-qtgui/lib/time_sink_c_impl.cc
+++ b/gr-qtgui/lib/time_sink_c_impl.cc
@@ -80,7 +80,7 @@ time_sink_c_impl::time_sink_c_impl(int size,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&time_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     // +2 for the PDU message buffers
     for (unsigned int n = 0; n < d_nconnections + 2; n++) {
diff --git a/gr-qtgui/lib/time_sink_f_impl.cc b/gr-qtgui/lib/time_sink_f_impl.cc
index df13998d7..8f41d0214 100644
--- a/gr-qtgui/lib/time_sink_f_impl.cc
+++ b/gr-qtgui/lib/time_sink_f_impl.cc
@@ -80,7 +80,7 @@ time_sink_f_impl::time_sink_f_impl(int size,
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"), boost::bind(&time_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 
     // +1 for the PDU buffer
     for (unsigned int n = 0; n < d_nconnections + 1; n++) {
diff --git a/gr-qtgui/lib/waterfall_sink_c_impl.cc b/gr-qtgui/lib/waterfall_sink_c_impl.cc
index fcf2ed98b..20cebbcbd 100644
--- a/gr-qtgui/lib/waterfall_sink_c_impl.cc
+++ b/gr-qtgui/lib/waterfall_sink_c_impl.cc
@@ -117,20 +117,17 @@ waterfall_sink_c_impl::waterfall_sink_c_impl(int fftsize,
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw,
-                    boost::bind(&waterfall_sink_c_impl::handle_set_bw, this, _1));
+    set_msg_handler(d_port_bw, [this](pmt::pmt_t msg) { this->handle_set_bw(msg); });
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port,
-                    boost::bind(&waterfall_sink_c_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&waterfall_sink_c_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 }
 
 waterfall_sink_c_impl::~waterfall_sink_c_impl()
diff --git a/gr-qtgui/lib/waterfall_sink_f_impl.cc b/gr-qtgui/lib/waterfall_sink_f_impl.cc
index aa1037a47..4ba6427f0 100644
--- a/gr-qtgui/lib/waterfall_sink_f_impl.cc
+++ b/gr-qtgui/lib/waterfall_sink_f_impl.cc
@@ -115,20 +115,17 @@ waterfall_sink_f_impl::waterfall_sink_f_impl(int fftsize,
 
     // setup bw input port
     message_port_register_in(d_port_bw);
-    set_msg_handler(d_port_bw,
-                    boost::bind(&waterfall_sink_f_impl::handle_set_bw, this, _1));
+    set_msg_handler(d_port_bw, [this](pmt::pmt_t msg) { this->handle_set_bw(msg); });
 
     // setup output message port to post frequency when display is
     // double-clicked
     message_port_register_out(d_port);
     message_port_register_in(d_port);
-    set_msg_handler(d_port,
-                    boost::bind(&waterfall_sink_f_impl::handle_set_freq, this, _1));
+    set_msg_handler(d_port, [this](pmt::pmt_t msg) { this->handle_set_freq(msg); });
 
     // setup PDU handling input port
     message_port_register_in(pmt::mp("in"));
-    set_msg_handler(pmt::mp("in"),
-                    boost::bind(&waterfall_sink_f_impl::handle_pdus, this, _1));
+    set_msg_handler(pmt::mp("in"), [this](pmt::pmt_t msg) { this->handle_pdus(msg); });
 }
 
 waterfall_sink_f_impl::~waterfall_sink_f_impl()
-- 
2.27.0

From caca1219b0335af256d06cdb1f70f32dc432d29a Mon Sep 17 00:00:00 2001
From: Martin Braun <martin@gnuradio.org>
Date: Wed, 13 Jan 2021 11:25:44 +0100
Subject: [PATCH] Add GitHub Actions workflow for 3.8

Includes Ubuntu 18.04.

Signed-off-by: Martin Braun <martin@gnuradio.org>
---
 .github/workflows/make-test.yml | 60 +++++++++++++++++++++++++++++++++
 1 file changed, 60 insertions(+)
 create mode 100644 .github/workflows/make-test.yml

diff --git a/.github/workflows/make-test.yml b/.github/workflows/make-test.yml
new file mode 100644
index 000000000..3f8807368
--- /dev/null
+++ b/.github/workflows/make-test.yml
@@ -0,0 +1,60 @@
+name: 'Make Test'
+on:
+  push:
+    branches:
+      - maint-3.8
+  pull_request:
+    branches:
+      - maint-3.8
+jobs:
+  check-formatting:
+    name: Check C++ Formatting
+    runs-on: ubuntu-20.04
+    steps:
+    - uses: actions/checkout@v2
+    - uses: gnuradio/clang-format-lint-action@v0.5-4
+      with:
+        source: '.'
+        exclude: './volk'
+        extensions: 'h,hpp,cpp,cc'
+  # All of these shall depend on the formatting check (needs: check-formatting)
+  ubuntu-18_04:
+    name: Ubuntu 18.04
+    needs: check-formatting
+    runs-on: ubuntu-20.04 # This can run on whatever
+    container:
+      image: 'gnuradio/ci-ubuntu-18.04-3.8:0.2'
+      volumes:
+        - build_data:/build
+      options: --cpus 2
+    steps:
+    - uses: actions/checkout@v2
+      name: Checkout Project
+      with:
+        submodules: 'recursive'
+    - name: CMake
+      run: 'cd /build && cmake ${GITHUB_WORKSPACE}'
+    - name: Make
+      run: 'cd /build && make -j2'
+    - name: Make Test
+      run: 'cd /build && ctest --output-on-failure -E "qa_uhd|qa_uncaught_exception|qa_header_payload_demux|qa_agc|qa_cpp_py_binding|qa_cpp_py_binding_set|qa_ctrlport_probes|qa_file_taps_loader|qa_qtgui"'
+  ubuntu-18_04_py2:
+    name: Ubuntu 18.04 (Python 2)
+    needs: check-formatting
+    runs-on: ubuntu-20.04 # This can run on whatever
+    container:
+      image: 'gnuradio/ci-ubuntu-18.04-3.8:0.2'
+      volumes:
+        - build_data:/build
+      options: --cpus 2
+    steps:
+    - uses: actions/checkout@v2
+      name: Checkout Project
+      with:
+        submodules: 'recursive'
+    - name: CMake
+      run: 'cd /build && cmake ${GITHUB_WORKSPACE} -DENABLE_DOXYGEN=OFF -DPYTHON_EXECUTABLE=/usr/bin/python2'
+    - name: Make
+      run: 'cd /build && make -j2'
+    - name: Make Test
+      run: 'cd /build && ctest --output-on-failure -E "qa_uhd|qa_uncaught_exception|qa_header_payload_demux|qa_agc|qa_cpp_py_binding|qa_cpp_py_binding_set|qa_ctrlport_probes|qa_file_taps_loader|qa_qtgui"'
-- 
2.27.0

From 826964b6fd137175c2677a7ebc0ceefa3e66f56f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Nick=20=C3=98stergaard?= <oe.nick@gmail.com>
Date: Wed, 13 Jan 2021 18:08:25 +0100
Subject: [PATCH] gr-digital: Fix typo in digital_modulate_vector block
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There appears to be an errant space between mod and .to_basic_block().
This doesn't seem to affect the operation. This makes sense as in both
python and c++ the . is an operator that can have whitespace aorund it.

This is a cosmetic fix.

Fixes #4036

Signed-off-by: Nick Østergaard <oe.nick@gmail.com>
---
 gr-digital/grc/digital_modulate_vector.block.yml | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/gr-digital/grc/digital_modulate_vector.block.yml b/gr-digital/grc/digital_modulate_vector.block.yml
index ae6ffc8cd..ce0070ca1 100644
--- a/gr-digital/grc/digital_modulate_vector.block.yml
+++ b/gr-digital/grc/digital_modulate_vector.block.yml
@@ -13,11 +13,11 @@ parameters:
 -   id: taps
     label: Filter taps
     dtype: float_vector
-value: ${ digital.modulate_vector_bc(mod .to_basic_block(), data, taps) }
+value: ${ digital.modulate_vector_bc(mod.to_basic_block(), data, taps) }
 
 templates:
     imports: from gnuradio import digital
-    var_make: self.${id} = ${id} = digital.modulate_vector_bc(${mod} .to_basic_block(),
+    var_make: self.${id} = ${id} = digital.modulate_vector_bc(${mod}.to_basic_block(),
         ${data}, ${taps})
 
 cpp_templates:
@@ -26,7 +26,7 @@ cpp_templates:
     var_make: |-
         std::vector<int> data = {${str(data)[1:-1]}};
         std::vector<float> taps = {${str(taps)[1:-1]}};
-        this->${id} = ${id} = digital::modulate_vector_bc(${mod} .to_basic_block(),
+        this->${id} = ${id} = digital::modulate_vector_bc(${mod}.to_basic_block(),
         data, taps);
     link: ['gnuradio-digital']
 
-- 
2.27.0

From 62063f8cd1d0e4463936983bb40e4d4d3b0ea56c Mon Sep 17 00:00:00 2001
From: Jeff Long <willcode4@gmail.com>
Date: Sun, 3 Jan 2021 18:29:16 -0500
Subject: [PATCH] gr-qtgui number sink: Honor block setting of 'avg' in GUI

GUI was overriding block parameter (setting to 0) at init.
- Use block parameter for 'avg'
- Add callback for 'avg' to yml

It is still possible to set the avg from the GUI middle click. The menu
value is not updated when avg is set from a block parameter (there is no
slot in the widget to do this). If the user creates a GRC file with a
widget (e.g., entry) to set avg, and also sets it via the menu, the
values shown will not match. However, the value can be successfully set
either way.

Signed-off-by: Jeff Long <willcode4@gmail.com>
---
 gr-qtgui/grc/qtgui_number_sink.block.yml | 1 +
 gr-qtgui/lib/number_sink_impl.cc         | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/gr-qtgui/grc/qtgui_number_sink.block.yml b/gr-qtgui/grc/qtgui_number_sink.block.yml
index b67259210..24c554dce 100644
--- a/gr-qtgui/grc/qtgui_number_sink.block.yml
+++ b/gr-qtgui/grc/qtgui_number_sink.block.yml
@@ -241,6 +241,7 @@ templates:
         import sip
     callbacks:
     - set_update_time(${update_time})
+    - set_average(${avg})
     make: |-
         <%
             win = 'self._%s_win'%id
diff --git a/gr-qtgui/lib/number_sink_impl.cc b/gr-qtgui/lib/number_sink_impl.cc
index 1222b9043..ca38c4689 100644
--- a/gr-qtgui/lib/number_sink_impl.cc
+++ b/gr-qtgui/lib/number_sink_impl.cc
@@ -111,6 +111,7 @@ void number_sink_impl::initialize()
     }
 
     d_main_gui = new NumberDisplayForm(d_nconnections, d_type, d_parent);
+    d_main_gui->setAverage(d_average);
 
     // initialize update time to 10 times a second
     set_update_time(0.1);
@@ -147,6 +148,7 @@ void number_sink_impl::set_average(const float avg)
         d_avg_value[n] = 0;
         d_iir[n].set_taps(d_average);
     }
+    d_main_gui->setAverage(avg);
 }
 
 void number_sink_impl::set_graph_type(const graph_t type)
-- 
2.27.0

From 5477b0e0f6a655578e332cd4f6ccfef5bd8dd089 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Wed, 23 Dec 2020 11:39:53 -0800
Subject: [PATCH] gr-qtgui: Fix Frequency Sink max hold for half spectrum width
 option

Signed-off-by: Ron Economos <w6rz@comcast.net>
---
 gr-qtgui/lib/FrequencyDisplayPlot.cc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/gr-qtgui/lib/FrequencyDisplayPlot.cc b/gr-qtgui/lib/FrequencyDisplayPlot.cc
index 7712f024f..b3bca28a2 100644
--- a/gr-qtgui/lib/FrequencyDisplayPlot.cc
+++ b/gr-qtgui/lib/FrequencyDisplayPlot.cc
@@ -389,10 +389,10 @@ void FrequencyDisplayPlot::plotNewData(const std::vector<double*> dataPoints,
                        _npoints_in * sizeof(double));
 
                 for (int64_t point = 0; point < _npoints_in; point++) {
-                    if (dataPoints[n][point] < d_min_fft_data[point]) {
+                    if (dataPoints[n][point + _in_index] < d_min_fft_data[point]) {
                         d_min_fft_data[point] = dataPoints[n][point + _in_index];
                     }
-                    if (dataPoints[n][point] > d_max_fft_data[point]) {
+                    if (dataPoints[n][point + _in_index] > d_max_fft_data[point]) {
                         d_max_fft_data[point] = dataPoints[n][point + _in_index];
                     }
 
-- 
2.27.0

From 2135e048a123f8f3130c43740accfecde5d1563f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?H=C3=A5kon=20V=C3=A5gsether?= <hauk142@gmail.com>
Date: Tue, 5 Jan 2021 20:38:56 +0100
Subject: [PATCH] grc: Accept file pointer in load_stdlib() (converter/xml.py)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes test_xml_parser.py failing in the absence of lxml

Signed-off-by: Håkon Vågsether <hauk142@gmail.com>
---
 grc/converter/xml.py         | 7 +++++--
 grc/tests/test_xml_parser.py | 2 +-
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/grc/converter/xml.py b/grc/converter/xml.py
index a43a81ab3..935906ded 100644
--- a/grc/converter/xml.py
+++ b/grc/converter/xml.py
@@ -62,8 +62,11 @@ def load_lxml(filename, document_type_def=None):
 def load_stdlib(filename, document_type_def=None):
     """Load block description from xml file"""
 
-    with open(filename, 'rb') as xml_file:
-        data = xml_file.read().decode('utf-8')
+    if isinstance(filename, str):
+        with open(filename, 'rb') as xml_file:
+            data = xml_file.read().decode('utf-8')
+    else: # Already opened
+        data = filename.read().decode('utf-8')
 
     try:
         element = etree.fromstring(data)
diff --git a/grc/tests/test_xml_parser.py b/grc/tests/test_xml_parser.py
index c68b6cdc5..d712648e0 100644
--- a/grc/tests/test_xml_parser.py
+++ b/grc/tests/test_xml_parser.py
@@ -32,7 +32,7 @@ def test_flow_graph_converter():
 def test_flow_graph_converter_with_fp():
     filename = path.join(path.dirname(__file__), 'resources', 'test_compiler.grc')
 
-    with open(filename) as fp:
+    with open(filename, 'rb') as fp:
         data = flow_graph.from_xml(fp)
 
     flow_graph.dump(data, sys.stdout)
-- 
2.27.0

From 188ca8f2590288cac74a30e2f09862d89debdc8f Mon Sep 17 00:00:00 2001
From: Zackery Spytz <zspytz@gmail.com>
Date: Sat, 9 Jan 2021 16:41:22 -0700
Subject: [PATCH] gr-blocks: Check fseek() for failure

Some fseek() calls were not being checked for failure.

Signed-off-by: Zackery Spytz <zspytz@gmail.com>
---
 gr-blocks/lib/file_meta_sink_impl.cc | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/gr-blocks/lib/file_meta_sink_impl.cc b/gr-blocks/lib/file_meta_sink_impl.cc
index ed75f135c..5400f06d9 100644
--- a/gr-blocks/lib/file_meta_sink_impl.cc
+++ b/gr-blocks/lib/file_meta_sink_impl.cc
@@ -311,9 +311,13 @@ void file_meta_sink_impl::update_last_header_inline()
     pmt::pmt_t s = pmt::from_uint64(seg_size);
     update_header(mp("bytes"), s);
     update_header(mp("strt"), pmt::from_uint64(METADATA_HEADER_SIZE + d_extra_size));
-    fseek(d_fp, -seg_size - hdrlen, SEEK_CUR);
+    if (fseek(d_fp, -seg_size - hdrlen, SEEK_CUR) == -1) {
+        throw std::runtime_error("fseek() failed.");
+    }
     write_header(d_fp, d_header, d_extra);
-    fseek(d_fp, seg_size, SEEK_CUR);
+    if (fseek(d_fp, seg_size, SEEK_CUR) == -1) {
+        throw std::runtime_error("fseek() failed.");
+    }
 }
 
 void file_meta_sink_impl::update_last_header_detached()
@@ -325,7 +329,9 @@ void file_meta_sink_impl::update_last_header_detached()
     pmt::pmt_t s = pmt::from_uint64(seg_size);
     update_header(mp("bytes"), s);
     update_header(mp("strt"), pmt::from_uint64(METADATA_HEADER_SIZE + d_extra_size));
-    fseek(d_hdr_fp, -hdrlen, SEEK_CUR);
+    if (fseek(d_hdr_fp, -hdrlen, SEEK_CUR) == -1) {
+        throw std::runtime_error("fseek() failed.");
+    }
     write_header(d_hdr_fp, d_header, d_extra);
 }
 
-- 
2.27.0

From 0242f7ac1e7c0d8136eea9cfd37e6587346ce529 Mon Sep 17 00:00:00 2001
From: rear1019 <rear1019@posteo.de>
Date: Mon, 13 Apr 2020 10:22:48 +0200
Subject: [PATCH] peak_detector2: Return correct number of consumed items, fix
 unit test

---
 gr-blocks/lib/peak_detector2_fb_impl.cc      | 27 +++++++++++++++-----
 gr-blocks/lib/peak_detector2_fb_impl.h       |  2 --
 gr-blocks/python/blocks/qa_peak_detector2.py | 27 +++++++++++++++++++-
 3 files changed, 47 insertions(+), 9 deletions(-)

diff --git a/gr-blocks/lib/peak_detector2_fb_impl.cc b/gr-blocks/lib/peak_detector2_fb_impl.cc
index bf1e648cd..ef6d60655 100644
--- a/gr-blocks/lib/peak_detector2_fb_impl.cc
+++ b/gr-blocks/lib/peak_detector2_fb_impl.cc
@@ -100,8 +100,16 @@ int peak_detector2_fb_impl::work(int noutput_items,
                 sigout[i] = d_avg;
             if (iptr[i] > d_avg * (1.0f + d_threshold_factor_rise)) {
                 d_found = true;
-                d_peak_val = std::numeric_limits<float>::min();
                 set_output_multiple(d_look_ahead);
+                /*
+                 * Consume any samples filtered so far except the last one (which
+                 * caused the threshold to be exceeded). As per documentation
+                 * in peak_detector2_fb.h this sample is part of the window where
+                 * the peak is to be searched. The next time work() is called
+                 * execution of the code jumps to the else-if clause below. There,
+                 * the first sample will be the last sample processed here (because
+                 * not consumed here).
+                 */
                 return i;
             }
         }
@@ -110,16 +118,23 @@ int peak_detector2_fb_impl::work(int noutput_items,
 
     // can complete in this call
     else if (noutput_items >= d_look_ahead) {
-        for (int i = 0; i < d_look_ahead; i++) {
+        float peak_val = iptr[0];
+        int peak_ind = 0;
+        /*
+         * Loop starts at the second sample because the first one has already been
+         * filtered (see above). Result of the maximum search is correct due
+         * to initialisations above.
+         */
+        for (int i = 1; i < d_look_ahead; i++) {
             d_avg = d_alpha * iptr[i] + (1.0f - d_alpha) * d_avg;
             if (output_items.size() == 2)
                 sigout[i] = d_avg;
-            if (iptr[i] > d_peak_val) {
-                d_peak_val = iptr[i];
-                d_peak_ind = i;
+            if (iptr[i] > peak_val) {
+                peak_val = iptr[i];
+                peak_ind = i;
             }
         }
-        optr[d_peak_ind] = 1;
+        optr[peak_ind] = 1;
 
         // restart the search
         invalidate();
diff --git a/gr-blocks/lib/peak_detector2_fb_impl.h b/gr-blocks/lib/peak_detector2_fb_impl.h
index 713577a19..cc22cc4b5 100644
--- a/gr-blocks/lib/peak_detector2_fb_impl.h
+++ b/gr-blocks/lib/peak_detector2_fb_impl.h
@@ -33,8 +33,6 @@ class peak_detector2_fb_impl : public peak_detector2_fb
 private:
     float d_threshold_factor_rise;
     int d_look_ahead;
-    int d_peak_ind;
-    float d_peak_val;
     float d_alpha;
     float d_avg;
     bool d_found;
diff --git a/gr-blocks/python/blocks/qa_peak_detector2.py b/gr-blocks/python/blocks/qa_peak_detector2.py
index a7de40200..b44703b7b 100644
--- a/gr-blocks/python/blocks/qa_peak_detector2.py
+++ b/gr-blocks/python/blocks/qa_peak_detector2.py
@@ -10,7 +10,6 @@
 # any later version.
 #
 # GNU Radio is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
@@ -129,6 +128,32 @@ class test_peak_detector2(gr_unittest.TestCase):
         # here we know that the block will terminate prematurely, so we compare only part of the expected_result
         self.assertEqual(expected_result[0:len(dst_data)], dst_data)
 
+    def test_peak5(self):
+        #print "\n\nTEST 5"
+        tb = self.tb
+
+        data = [0, 0, 0, 10, 0, 0, 0, 0]
+        alpha = 0.25
+        expected_result_peak = [0, 0, 0, 1, 0, 0, 0, 0]
+        expected_result_average = [0]
+        for i in data:
+            expected_result_average.append(expected_result_average[-1] * (1 - alpha) + i * alpha)
+
+        src = blocks.vector_source_f(data, False)
+        regen = blocks.peak_detector2_fb(2.0, 2, alpha)
+        dst = blocks.vector_sink_b()
+        avg = blocks.vector_sink_f()
+
+        tb.connect(src, regen)
+        tb.connect((regen, 0), dst)
+        tb.connect((regen, 1), avg)
+        tb.run()
+
+        dst_data = dst.data()
+        dst_avg = avg.data()
+
+        self.assertEqual(tuple(expected_result_peak), dst_data)
+        self.assertFloatTuplesAlmostEqual(tuple(expected_result_average[1:]), dst_avg)
 
 if __name__ == '__main__':
     gr_unittest.run(test_peak_detector2, "test_peak_detector2.xml")
-- 
2.27.0

From 39a313172b25eb0ae38035935ed16cfa798db449 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?H=C3=A5kon=20V=C3=A5gsether?= <hauk142@gmail.com>
Date: Tue, 5 Jan 2021 15:40:18 +0100
Subject: [PATCH] grc: Let test_generator.py know where to find blocks
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Håkon Vågsether <hauk142@gmail.com>
---
 grc/tests/test_generator.py | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/grc/tests/test_generator.py b/grc/tests/test_generator.py
index 4c79ce4bd..a38b00c89 100644
--- a/grc/tests/test_generator.py
+++ b/grc/tests/test_generator.py
@@ -25,16 +25,19 @@ from grc.core.platform import Platform
 
 def test_generator():
     # c&p form compiler code.
-    # todo: make this independent from installed GR
     grc_file = path.join(path.dirname(__file__), 'resources', 'test_compiler.grc')
     out_dir = tempfile.gettempdir()
+    block_paths = [
+        path.join(path.dirname(__file__), '../../grc/blocks'),
+        path.join(path.dirname(__file__), '../../gr-blocks/grc')
+    ]
 
     platform = Platform(
         name='GNU Radio Companion Compiler',
         prefs=None,
         version='0.0.0',
     )
-    platform.build_library()
+    platform.build_library(block_paths)
 
     flow_graph = platform.make_flow_graph(grc_file)
     flow_graph.rewrite()
-- 
2.27.0

From f2ff682120c226a6faa5768df615ed8ea570f9e1 Mon Sep 17 00:00:00 2001
From: Ron Economos <w6rz@comcast.net>
Date: Fri, 8 Jan 2021 17:23:59 -0800
Subject: [PATCH] cmake: Update VERSION_PATCH so that correct versioning is
 enabled. i.e. version - commit number from last tag - last commit hash.

Signed-off-by: Ron Economos <w6rz@comcast.net>
---
 CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 07040edf2..4bb39a055 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -53,7 +53,7 @@ GR_REGISTER_COMPONENT("testing-support" ENABLE_TESTING)
 SET(VERSION_MAJOR 3)
 SET(VERSION_API   8)
 SET(VERSION_ABI   2)
-SET(VERSION_PATCH 0)
+SET(VERSION_PATCH git)
 include(GrVersion) #setup version info
 
 # Minimum dependency versions for central dependencies:
-- 
2.27.0

From 3366552a165e500b0bab5ca24b16bf6d43b0f743 Mon Sep 17 00:00:00 2001
From: Sam Schmidt <samuel.schmidt.ee@gmail.com>
Date: Sun, 3 Jan 2021 13:58:01 -0500
Subject: [PATCH] filter: Fix filter_design.py for Qt5 and python3

Signed-off-by: Sam Schmidt <samuel.schmidt.ee@gmail.com>
---
 gr-filter/python/filter/design/filter_design.py | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/gr-filter/python/filter/design/filter_design.py b/gr-filter/python/filter/design/filter_design.py
index 2b6a2c4d1..b064595d1 100644
--- a/gr-filter/python/filter/design/filter_design.py
+++ b/gr-filter/python/filter/design/filter_design.py
@@ -1977,9 +1977,9 @@ class gr_plot_filter(QtGui.QMainWindow):
         self.gui.mfilterCoeff.setText(fcoeff)
 
     def action_save_dialog(self):
-        filename = QtGui.QFileDialog.getSaveFileName(self, "Save CSV Filter File", ".", "")
+        filename, _filter = QtGui.QFileDialog.getSaveFileName(self, "Save CSV Filter File", ".", "")
         try:
-            handle = open(filename, "wb")
+            handle = open(filename, "w")
         except IOError:
             reply = QtGui.QMessageBox.information(self, 'File Name',
                                                   ("Could not save to file: %s" % filename),
@@ -1996,19 +1996,19 @@ class gr_plot_filter(QtGui.QMainWindow):
         for k in list(self.params.keys()):
             csvhandle.writerow([k, self.params[k]])
         if self.iir:
-            csvhandle.writerow(["b",] + list(self.b))
-            csvhandle.writerow(["a",] + list(self.a))
+            csvhandle.writerow(["b",] + [str(_b) for _b in self.b])
+            csvhandle.writerow(["a",] + [str(_a) for _a in self.a])
         else:
-            csvhandle.writerow(["taps",] + list(self.taps))
+            csvhandle.writerow(["taps",] + [str(_tap) for _tap in self.taps])
         handle.close()
 
     def action_open_dialog(self):
-        filename = QtGui.QFileDialog.getOpenFileName(self, "Open CSV Filter File", ".", "")
+        filename, _filter = QtGui.QFileDialog.getOpenFileName(self, "Open CSV Filter File", ".", "")
         if(len(filename) == 0):
             return
 
         try:
-            handle = open(filename, "rb")
+            handle = open(filename, "r")
         except IOError:
             reply = QtGui.QMessageBox.information(self, 'File Name',
                                                   ("Could not open file: %s" % filename),
@@ -2123,6 +2123,7 @@ class gr_plot_filter(QtGui.QMainWindow):
                 self.gui.gausSymbolRateEdit.setText(str(params["srate"]))
                 self.gui.gausBTEdit.setText(str(params["bt"]))
                 self.gui.gausNumTapsEdit.setText(str(params["ntaps"]))
+
         else:
             self.iir = True
             self.b, self.a = b_a["b"],b_a["a"]
-- 
2.27.0

From bf3d2c6d85761eed7e62d0ffed3122d157433ff7 Mon Sep 17 00:00:00 2001
From: Niki <niki@aveer.io>
Date: Thu, 9 Jul 2020 17:27:52 -0400
Subject: [PATCH] uhd: Add GPIO handlers for messages

This allows toggling GPIOs via messages.
---
 gr-uhd/docs/uhd.dox                      |  2 ++
 gr-uhd/include/gnuradio/uhd/usrp_block.h |  1 +
 gr-uhd/lib/usrp_block_impl.cc            | 43 ++++++++++++++++++++++++
 gr-uhd/lib/usrp_block_impl.h             |  1 +
 4 files changed, 47 insertions(+)

diff --git a/gr-uhd/docs/uhd.dox b/gr-uhd/docs/uhd.dox
index 8c28e37e7..0e49b9026 100644
--- a/gr-uhd/docs/uhd.dox
+++ b/gr-uhd/docs/uhd.dox
@@ -99,11 +99,13 @@ Command name | Value Type   | Description
 `time`       | timestamp    | Sets a command time. See usrp_block::set_command_time(). A value of PMT_NIL will clear the command time.
 `mboard`     | int          | Specify mboard index, where applicable.
 `antenna`    | string       | See usrp_block::set_antenna(). Defaults to all channels.
+`gpio`       | gpio         | PMT dictionary including bank, attr, value, mask for GPIO. See notes.
 
 Special types:
 
 - tune_request: Like a uhd::tune_request_t, but always uses POLICY_AUTO. This is a pair, composed of (target_frequency, lo_offset)
 - timestamp: A pair composed of (long full_secs, double frac_secs). Similar to uhd::time_spec_t
+- gpio: This is a PMT dictionary with four key/value pairs: bank (string), attr (string), value (double) and mask (double). The `gpio` command calls `set_gpio_attr` with the elements from the dictionary as arguments. Can optionally contain `mboard` to specify the mainboard. Defaults to `0` (first mboard).
 
 \b Note: Not all commands are affected by `time`. See the UHD manual for details on timed commands.
 
diff --git a/gr-uhd/include/gnuradio/uhd/usrp_block.h b/gr-uhd/include/gnuradio/uhd/usrp_block.h
index 56a13f03e..8bd5aaf6c 100644
--- a/gr-uhd/include/gnuradio/uhd/usrp_block.h
+++ b/gr-uhd/include/gnuradio/uhd/usrp_block.h
@@ -44,6 +44,7 @@ GR_UHD_API const pmt::pmt_t cmd_mboard_key();
 GR_UHD_API const pmt::pmt_t cmd_antenna_key();
 GR_UHD_API const pmt::pmt_t cmd_direction_key();
 GR_UHD_API const pmt::pmt_t cmd_tag_key();
+GR_UHD_API const pmt::pmt_t cmd_gpio_key();
 
 GR_UHD_API const pmt::pmt_t ant_direction_rx();
 GR_UHD_API const pmt::pmt_t ant_direction_tx();
diff --git a/gr-uhd/lib/usrp_block_impl.cc b/gr-uhd/lib/usrp_block_impl.cc
index 0a99855c9..7e56280ce 100644
--- a/gr-uhd/lib/usrp_block_impl.cc
+++ b/gr-uhd/lib/usrp_block_impl.cc
@@ -109,6 +109,12 @@ const pmt::pmt_t gr::uhd::cmd_tag_key()
     return val;
 }
 
+const pmt::pmt_t gr::uhd::cmd_gpio_key()
+{
+    static const pmt::pmt_t val = pmt::mp("gpio");
+    return val;
+}
+
 const pmt::pmt_t gr::uhd::ant_direction_rx()
 {
     static const pmt::pmt_t val = pmt::mp("RX");
@@ -155,6 +161,7 @@ usrp_block_impl::usrp_block_impl(const ::uhd::device_addr_t& device_addr,
     REGISTER_CMD_HANDLER(cmd_rate_key(), _cmd_handler_rate);
     REGISTER_CMD_HANDLER(cmd_bandwidth_key(), _cmd_handler_bw);
     REGISTER_CMD_HANDLER(cmd_antenna_key(), _cmd_handler_antenna);
+    REGISTER_CMD_HANDLER(cmd_gpio_key(), _cmd_handler_gpio);
 }
 
 usrp_block_impl::~usrp_block_impl()
@@ -680,6 +687,42 @@ void usrp_block_impl::_cmd_handler_antenna(const pmt::pmt_t& ant,
     set_antenna(antenna, chan);
 }
 
+void usrp_block_impl::_cmd_handler_gpio(const pmt::pmt_t& gpio_attr,
+                                        int chan,
+                                        const pmt::pmt_t& msg)
+{
+    size_t mboard = pmt::to_long(pmt::dict_ref(
+        msg,
+        cmd_mboard_key(),
+        // pmt::from_long(::uhd::usrp::multi_usrp::ALL_MBOARDS) // Default to all mboards
+        pmt::from_long(0) // default to first mboard
+        ));
+
+    if (!pmt::is_dict(gpio_attr)) {
+        GR_LOG_ERROR(d_logger,
+                     boost::format("gpio_attr in  message is neither dict nor pair: %s") %
+                         gpio_attr);
+        return;
+    }
+    if (!pmt::dict_has_key(gpio_attr, pmt::mp("bank")) ||
+        !pmt::dict_has_key(gpio_attr, pmt::mp("attr")) ||
+        !pmt::dict_has_key(gpio_attr, pmt::mp("value")) ||
+        !pmt::dict_has_key(gpio_attr, pmt::mp("mask"))) {
+        GR_LOG_ERROR(
+            d_logger,
+            boost::format("gpio_attr message must include bank, attr, value and mask"));
+        return;
+    }
+    std::string bank =
+        pmt::symbol_to_string(pmt::dict_ref(gpio_attr, pmt::mp("bank"), pmt::mp("")));
+    std::string attr =
+        pmt::symbol_to_string(pmt::dict_ref(gpio_attr, pmt::mp("attr"), pmt::mp("")));
+    uint32_t value = pmt::to_double(pmt::dict_ref(gpio_attr, pmt::mp("value"), 0));
+    uint32_t mask = pmt::to_double(pmt::dict_ref(gpio_attr, pmt::mp("mask"), 0));
+
+    set_gpio_attr(bank, attr, value, mask, mboard);
+}
+
 void usrp_block_impl::_cmd_handler_rate(const pmt::pmt_t& rate_, int, const pmt::pmt_t&)
 {
     const double rate = pmt::to_double(rate_);
diff --git a/gr-uhd/lib/usrp_block_impl.h b/gr-uhd/lib/usrp_block_impl.h
index b0d3333b5..310de5595 100644
--- a/gr-uhd/lib/usrp_block_impl.h
+++ b/gr-uhd/lib/usrp_block_impl.h
@@ -135,6 +135,7 @@ protected:
     void _cmd_handler_bw(const pmt::pmt_t& bw, int chan, const pmt::pmt_t& msg);
     void _cmd_handler_lofreq(const pmt::pmt_t& lofreq, int chan, const pmt::pmt_t& msg);
     void _cmd_handler_dspfreq(const pmt::pmt_t& dspfreq, int chan, const pmt::pmt_t& msg);
+    void _cmd_handler_gpio(const pmt::pmt_t& gpio_attr, int chan, const pmt::pmt_t& msg);
 
     /**********************************************************************
      * Helpers
-- 
2.27.0

From a108910670d8b8332442ed31d2ec34ade5884028 Mon Sep 17 00:00:00 2001
From: Niki <niki@aveer.io>
Date: Thu, 9 Jul 2020 23:12:10 -0400
Subject: [PATCH] uhd: Add start time capability to GRC bindings

---
 gr-uhd/grc/gen_uhd_usrp_blocks.py | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/gr-uhd/grc/gen_uhd_usrp_blocks.py b/gr-uhd/grc/gen_uhd_usrp_blocks.py
index b1bbf635e..638d43891 100644
--- a/gr-uhd/grc/gen_uhd_usrp_blocks.py
+++ b/gr-uhd/grc/gen_uhd_usrp_blocks.py
@@ -67,6 +67,13 @@ parameters:
     options: [sync, pc_clock, none]
     option_labels: [Unknown PPS, PC Clock, No Sync]
     hide: ${'$'}{ 'none' if sync else 'part'}
+-   id: start_time
+    label: Start Time (seconds)
+    dtype: real
+    default: -1.0
+    options: [-1.0]
+    option_labels: [Default]
+    hide: ${'$'}{ 'none' if start_time >= 0.0 else 'part' }
 -   id: clock_rate
     label: Clock Rate (Hz)
     dtype: real
@@ -208,6 +215,12 @@ templates:
         ${'%'} endif
         ${'%'} endif
         % endfor
+        ${'%'} if start_time() >= 0.0:
+        self.${'$'}{id}.set_start_time(uhd.time_spec(${'$'}{start_time}))
+        ${'%'} endif
+        ${'%'} if clock_rate():
+        self.${'$'}{id}.set_clock_rate(${'$'}{clock_rate}, uhd.ALL_MBOARDS)
+        ${'%'} endif
         self.${'$'}{id}.set_samp_rate(${'$'}{samp_rate})
         ${'%'} if sync == 'sync':
         self.${'$'}{id}.set_time_unknown_pps(uhd.time_spec())
-- 
2.27.0

From c42a162b9fe71b1b21da06a6d3d62ad28b65e6c4 Mon Sep 17 00:00:00 2001
From: Jacob Gilbert <mrjacobagilbert@gmail.com>
Date: Tue, 20 Oct 2020 08:52:59 -0700
Subject: [PATCH] gr-uhd: adding a bool to force tune request

This is used if a 'direction' key is provided with the tune command.
This fixes an issue when the 'TX' and 'RX' directions are tuned
explicitly to the same frequency; prior to this fix the second tune
request is dropped.

Signed-off-by: Martin Braun <martin@gnuradio.org>
---
 gr-uhd/lib/usrp_block_impl.cc | 26 +++++++++++++++-----------
 gr-uhd/lib/usrp_block_impl.h  |  1 +
 2 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/gr-uhd/lib/usrp_block_impl.cc b/gr-uhd/lib/usrp_block_impl.cc
index 7e56280ce..e03122984 100644
--- a/gr-uhd/lib/usrp_block_impl.cc
+++ b/gr-uhd/lib/usrp_block_impl.cc
@@ -133,6 +133,7 @@ usrp_block_impl::usrp_block_impl(const ::uhd::device_addr_t& device_addr,
       _nchan(stream_args.channels.size()),
       _stream_now(_nchan == 1 and ts_tag_name.empty()),
       _start_time_set(false),
+      _force_tune(false),
       _curr_tune_req(stream_args.channels.size(), ::uhd::tune_request_t()),
       _chans_to_tune(stream_args.channels.size())
 {
@@ -557,7 +558,18 @@ void usrp_block_impl::msg_handler_command(pmt::pmt_t msg)
                                               pmt::from_long(-1) // Default to all chans
                                               )));
 
-    /// 3) Loop through all the values
+    /// 3) See if a direction was specified
+    pmt::pmt_t direction =
+        pmt::dict_ref(msg,
+                      cmd_direction_key(),
+                      pmt::PMT_NIL // Anything except "TX" or "RX will default to the
+                                   // messaged block direction"
+        );
+    // if the a direction symbol was provided, force a tune
+    _force_tune = pmt::is_symbol(direction);
+
+
+    /// 4) Loop through all the values
     GR_LOG_DEBUG(d_debug_logger, boost::format("Processing command message %s") % msg);
     pmt::pmt_t msg_items = pmt::dict_items(msg);
     for (size_t i = 0; i < pmt::length(msg_items); i++) {
@@ -574,17 +586,9 @@ void usrp_block_impl::msg_handler_command(pmt::pmt_t msg)
             break;
         }
     }
-
-    /// 4) See if a direction was specified
-    pmt::pmt_t direction =
-        pmt::dict_ref(msg,
-                      cmd_direction_key(),
-                      pmt::PMT_NIL // Anything except "TX" or "RX will default to the
-                                   // messaged block direction"
-        );
-
     /// 5) Check if we need to re-tune
     _set_center_freq_from_internals_allchans(direction);
+    _force_tune = false;
 }
 
 
@@ -617,7 +621,7 @@ void usrp_block_impl::_update_curr_tune_req(::uhd::tune_request_t& tune_req, int
         tune_req.rf_freq_policy != _curr_tune_req[chan].rf_freq_policy ||
         tune_req.rf_freq != _curr_tune_req[chan].rf_freq ||
         tune_req.dsp_freq != _curr_tune_req[chan].dsp_freq ||
-        tune_req.dsp_freq_policy != _curr_tune_req[chan].dsp_freq_policy) {
+        tune_req.dsp_freq_policy != _curr_tune_req[chan].dsp_freq_policy || _force_tune) {
         _curr_tune_req[chan] = tune_req;
         _chans_to_tune.set(chan);
     }
diff --git a/gr-uhd/lib/usrp_block_impl.h b/gr-uhd/lib/usrp_block_impl.h
index 310de5595..07c1bfbb8 100644
--- a/gr-uhd/lib/usrp_block_impl.h
+++ b/gr-uhd/lib/usrp_block_impl.h
@@ -221,6 +221,7 @@ protected:
     bool _stream_now;
     ::uhd::time_spec_t _start_time;
     bool _start_time_set;
+    bool _force_tune;
 
     /****** Command interface related **********/
     //! Stores a list of commands for later execution
-- 
2.27.0

From ce937ef7308bcab39afa7a133f8882583b29f341 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marcus=20M=C3=BCller?= <mmueller@gnuradio.org>
Date: Sat, 22 Aug 2020 14:06:22 +0200
Subject: [PATCH] msg_handler: Use lambdas in gr-uhd

Signed-off-by: Martin Braun <martin.braun@ettus.com>
---
 gr-uhd/lib/amsg_source_impl.cc | 3 +--
 gr-uhd/lib/usrp_block_impl.cc  | 2 +-
 2 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/gr-uhd/lib/amsg_source_impl.cc b/gr-uhd/lib/amsg_source_impl.cc
index 46d47a582..e1de62e02 100644
--- a/gr-uhd/lib/amsg_source_impl.cc
+++ b/gr-uhd/lib/amsg_source_impl.cc
@@ -22,7 +22,6 @@
 
 #include "amsg_source_impl.h"
 #include "gr_uhd_common.h"
-#include <boost/bind.hpp>
 
 namespace gr {
 namespace uhd {
@@ -44,7 +43,7 @@ amsg_source_impl::amsg_source_impl(const ::uhd::device_addr_t& device_addr,
     : _msgq(msgq), _running(true)
 {
     _dev = ::uhd::usrp::multi_usrp::make(device_addr);
-    _amsg_thread = gr::thread::thread(boost::bind(&amsg_source_impl::recv_loop, this));
+    _amsg_thread = gr::thread::thread([this]() { this->recv_loop(); });
 }
 
 amsg_source_impl::~amsg_source_impl()
diff --git a/gr-uhd/lib/usrp_block_impl.cc b/gr-uhd/lib/usrp_block_impl.cc
index e03122984..b067ecf8b 100644
--- a/gr-uhd/lib/usrp_block_impl.cc
+++ b/gr-uhd/lib/usrp_block_impl.cc
@@ -21,7 +21,6 @@
  */
 
 #include "usrp_block_impl.h"
-#include <boost/make_shared.hpp>
 
 using namespace gr::uhd;
 
@@ -163,6 +162,7 @@ usrp_block_impl::usrp_block_impl(const ::uhd::device_addr_t& device_addr,
     REGISTER_CMD_HANDLER(cmd_bandwidth_key(), _cmd_handler_bw);
     REGISTER_CMD_HANDLER(cmd_antenna_key(), _cmd_handler_antenna);
     REGISTER_CMD_HANDLER(cmd_gpio_key(), _cmd_handler_gpio);
+#undef REGISTER_CMD_HANDLER
 }
 
 usrp_block_impl::~usrp_block_impl()
-- 
2.27.0

From c51f5ba90947c079cd2fb31fdea1791bd92dbbc5 Mon Sep 17 00:00:00 2001
From: gnieboer <gnieboer@corpcomm.net>
Date: Sun, 17 Jan 2021 19:36:01 -0500
Subject: [PATCH] Cmake: accept orocos-log4cpp as acceptable alternative name
 (vcpkg compatibility)

Signed-off-by: gnieboer <gnieboer@corpcomm.net>
---
 cmake/Modules/FindLOG4CPP.cmake | 2 +-
 cmake/Modules/FindQwt.cmake     | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/cmake/Modules/FindLOG4CPP.cmake b/cmake/Modules/FindLOG4CPP.cmake
index 61d58134a..3f8d0eefa 100644
--- a/cmake/Modules/FindLOG4CPP.cmake
+++ b/cmake/Modules/FindLOG4CPP.cmake
@@ -17,7 +17,7 @@ find_path(LOG4CPP_INCLUDE_DIR log4cpp/Category.hh
   /opt/local/include
 )
 
-set(LOG4CPP_NAMES log4cpp)
+set(LOG4CPP_NAMES log4cpp orocos-log4cpp)
 find_library(LOG4CPP_LIBRARY
   NAMES ${LOG4CPP_NAMES}
   PATHS /usr/lib /usr/lib64 /usr/local/lib  /usr/local/lib64 /opt/local/lib /opt/local/lib64
diff --git a/cmake/Modules/FindQwt.cmake b/cmake/Modules/FindQwt.cmake
index 08ae5533a..edad8e887 100644
--- a/cmake/Modules/FindQwt.cmake
+++ b/cmake/Modules/FindQwt.cmake
@@ -13,7 +13,7 @@ find_path(QWT_INCLUDE_DIRS
   HINTS
   ${PC_QWT_INCLUDEDIR}
   ${CMAKE_INSTALL_PREFIX}/include/qwt
-  ${CMAKE_PREFIX_PATH}/include/qwt
+  list(APPEND ${CMAKE_PREFIX_PATH} /include/qwt)
   PATHS
   /usr/local/include/qwt-${QWT_QT_VERSION}
   /usr/local/include/qwt
-- 
2.27.0

